["^ ","~:output",["^ ","~:js","goog.provide('reagent.ratom');\r\ngoog.require('cljs.core');\r\ngoog.require('reagent.impl.util');\r\ngoog.require('reagent.debug');\r\ngoog.require('reagent.impl.batching');\r\ngoog.require('clojure.set');\r\ngoog.require('goog.object');\r\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom.debug !== 'undefined')){\r\n} else {\r\nreagent.ratom.debug = false;\r\n}\r\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom.generation !== 'undefined')){\r\n} else {\r\nreagent.ratom.generation = (0);\r\n}\r\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom._running !== 'undefined')){\r\n} else {\r\nreagent.ratom._running = cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\r\n}\r\nreagent.ratom.reactive_QMARK_ = (function reagent$ratom$reactive_QMARK_(){\r\nreturn (!((reagent.ratom._STAR_ratom_context_STAR_ == null)));\r\n});\r\nreagent.ratom.running = (function reagent$ratom$running(){\r\nreturn cljs.core.deref(reagent.ratom._running);\r\n});\r\nreagent.ratom.arr_len = (function reagent$ratom$arr_len(x){\r\nif((x == null)){\r\nreturn (0);\r\n} else {\r\nreturn x.length;\r\n}\r\n});\r\nreagent.ratom.arr_eq = (function reagent$ratom$arr_eq(x,y){\r\nvar len = reagent.ratom.arr_len(x);\r\nif((len === reagent.ratom.arr_len(y))){\r\nvar i = (0);\r\nwhile(true){\r\nvar or__4185__auto__ = (i === len);\r\nif(or__4185__auto__){\r\nreturn or__4185__auto__;\r\n} else {\r\nif(((x[i]) === (y[i]))){\r\nvar G__35639 = (i + (1));\r\ni = G__35639;\r\ncontinue;\r\n} else {\r\nreturn false;\r\n}\r\n}\r\nbreak;\r\n}\r\n} else {\r\nreturn false;\r\n}\r\n});\r\nreagent.ratom.in_context = (function reagent$ratom$in_context(obj,f){\r\n\r\nvar _STAR_ratom_context_STAR__orig_val__35341 = reagent.ratom._STAR_ratom_context_STAR_;\r\nvar _STAR_ratom_context_STAR__temp_val__35342 = obj;\r\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__35342);\r\n\r\ntry{return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\r\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__35341);\r\n}});\r\n/**\r\n * Returns `(in-context f r)`.  Calls `_update-watching` on r with any\r\n * `deref`ed atoms captured during `in-context`, if any differ from the\r\n * `watching` field of r.  Clears the `dirty?` flag on r.\r\n * \r\n * Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\r\n * the reaction is also added to the list of watches on each ratoms f derefs.\r\n */\r\nreagent.ratom.deref_capture = (function reagent$ratom$deref_capture(f,r){\r\n(r.captured = null);\r\n\r\n(r.ratomGeneration = (reagent.ratom.generation = (reagent.ratom.generation + (1))));\r\n\r\n\r\nvar res = reagent.ratom.in_context(r,f);\r\nvar c = r.captured;\r\n(r.dirty_QMARK_ = false);\r\n\r\nif(reagent.ratom.arr_eq(c,r.watching)){\r\n} else {\r\nr._update_watching(c);\r\n}\r\n\r\nreturn res;\r\n});\r\n/**\r\n * Add `derefed` to the `captured` field of `*ratom-context*`.\r\n * \r\n *   See also `in-context`\r\n */\r\nreagent.ratom.notify_deref_watcher_BANG_ = (function reagent$ratom$notify_deref_watcher_BANG_(derefed){\r\nvar temp__5739__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\r\nif((temp__5739__auto__ == null)){\r\nreturn null;\r\n} else {\r\nvar r = temp__5739__auto__;\r\nvar c = r.captured;\r\nif((c == null)){\r\nreturn (r.captured = [derefed]);\r\n} else {\r\nreturn c.push(derefed);\r\n}\r\n}\r\n});\r\nreagent.ratom.check_watches = (function reagent$ratom$check_watches(old,new$){\r\nif(reagent.ratom.debug){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(reagent.ratom._running,cljs.core._PLUS_,(cljs.core.count(new$) - cljs.core.count(old)));\r\n} else {\r\n}\r\n\r\nreturn new$;\r\n});\r\nreagent.ratom.add_w = (function reagent$ratom$add_w(this$,key,f){\r\nvar w = this$.watches;\r\n(this$.watches = reagent.ratom.check_watches(w,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(w,key,f)));\r\n\r\nreturn (this$.watchesArr = null);\r\n});\r\nreagent.ratom.remove_w = (function reagent$ratom$remove_w(this$,key){\r\nvar w = this$.watches;\r\n(this$.watches = reagent.ratom.check_watches(w,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(w,key)));\r\n\r\nreturn (this$.watchesArr = null);\r\n});\r\nreagent.ratom.notify_w = (function reagent$ratom$notify_w(this$,old,new$){\r\nvar w = this$.watchesArr;\r\nvar a = (((w == null))?(this$.watchesArr = cljs.core.reduce_kv((function (p1__35346_SHARP_,p2__35347_SHARP_,p3__35348_SHARP_){\r\nvar G__35349 = p1__35346_SHARP_;\r\nG__35349.push(p2__35347_SHARP_);\r\n\r\nG__35349.push(p3__35348_SHARP_);\r\n\r\nreturn G__35349;\r\n}),[],this$.watches)):w);\r\nvar len = a.length;\r\nvar i = (0);\r\nwhile(true){\r\nif((i < len)){\r\nvar k_35644 = (a[i]);\r\nvar f_35645 = (a[(i + (1))]);\r\n(f_35645.cljs$core$IFn$_invoke$arity$4 ? f_35645.cljs$core$IFn$_invoke$arity$4(k_35644,this$,old,new$) : f_35645.call(null,k_35644,this$,old,new$));\r\n\r\nvar G__35646 = ((2) + i);\r\ni = G__35646;\r\ncontinue;\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n});\r\nreagent.ratom.pr_atom = (function reagent$ratom$pr_atom(a,writer,opts,s){\r\ncljs.core._write(writer,[\"#<\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),\" \"].join(''));\r\n\r\ncljs.core.pr_writer((function (){var _STAR_ratom_context_STAR__orig_val__35353 = reagent.ratom._STAR_ratom_context_STAR_;\r\nvar _STAR_ratom_context_STAR__temp_val__35354 = null;\r\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__35354);\r\n\r\ntry{return cljs.core._deref(a);\r\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__35353);\r\n}})(),writer,opts);\r\n\r\nreturn cljs.core._write(writer,\">\");\r\n});\r\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom.rea_queue !== 'undefined')){\r\n} else {\r\nreagent.ratom.rea_queue = null;\r\n}\r\nreagent.ratom.rea_enqueue = (function reagent$ratom$rea_enqueue(r){\r\nif((reagent.ratom.rea_queue == null)){\r\n(reagent.ratom.rea_queue = []);\r\n\r\nreagent.impl.batching.schedule();\r\n} else {\r\n}\r\n\r\nreturn reagent.ratom.rea_queue.push(r);\r\n});\r\nreagent.ratom.flush_BANG_ = (function reagent$ratom$flush_BANG_(){\r\nwhile(true){\r\nvar q = reagent.ratom.rea_queue;\r\nif((q == null)){\r\nreturn null;\r\n} else {\r\n(reagent.ratom.rea_queue = null);\r\n\r\nvar n__4666__auto___35650 = q.length;\r\nvar i_35651 = (0);\r\nwhile(true){\r\nif((i_35651 < n__4666__auto___35650)){\r\n(q[i_35651])._queued_run();\r\n\r\nvar G__35652 = (i_35651 + (1));\r\ni_35651 = G__35652;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n});\r\n(reagent.impl.batching.ratom_flush = reagent.ratom.flush_BANG_);\r\n\r\n/**\r\n * @interface\r\n */\r\nreagent.ratom.IReactiveAtom = function(){};\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IWatchable}\r\n * @implements {cljs.core.IAtom}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.IReset}\r\n * @implements {cljs.core.ISwap}\r\n * @implements {reagent.ratom.IReactiveAtom}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.IDeref}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n * @implements {cljs.core.IWithMeta}\r\n*/\r\nreagent.ratom.RAtom = (function (state,meta,validator,watches){\r\nthis.state = state;\r\nthis.meta = meta;\r\nthis.validator = validator;\r\nthis.watches = watches;\r\nthis.cljs$lang$protocol_mask$partition0$ = 2154201088;\r\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\r\n});\r\n(reagent.ratom.RAtom.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(reagent.ratom.RAtom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Atom:\");\r\n}));\r\n\r\n(reagent.ratom.RAtom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(reagent.ratom.RAtom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn goog.getUid(this$__$1);\r\n}));\r\n\r\n(reagent.ratom.RAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\r\nvar self__ = this;\r\nvar o__$1 = this;\r\nreturn (o__$1 === other);\r\n}));\r\n\r\n(reagent.ratom.RAtom.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,new_value){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nif((self__.validator == null)){\r\n} else {\r\nif(cljs.core.truth_((self__.validator.cljs$core$IFn$_invoke$arity$1 ? self__.validator.cljs$core$IFn$_invoke$arity$1(new_value) : self__.validator.call(null,new_value)))){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",\"Validator rejected reference state\",\"\\n\",\"(validator new-value)\"].join('')));\r\n}\r\n}\r\n\r\nvar old_value = self__.state;\r\n(self__.state = new_value);\r\n\r\nif((self__.watches == null)){\r\n} else {\r\nreagent.ratom.notify_w(a__$1,old_value,new_value);\r\n}\r\n\r\nreturn new_value;\r\n}));\r\n\r\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\r\n}));\r\n\r\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\r\n}));\r\n\r\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\r\n}));\r\n\r\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\r\n}));\r\n\r\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\r\n}));\r\n\r\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.add_w(this$__$1,key,f);\r\n}));\r\n\r\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.remove_w(this$__$1,key);\r\n}));\r\n\r\n(reagent.ratom.RAtom.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn (new reagent.ratom.RAtom(self__.state,new_meta,self__.validator,self__.watches));\r\n}));\r\n\r\n(reagent.ratom.RAtom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\r\n\r\nreturn self__.state;\r\n}));\r\n\r\n(reagent.ratom.RAtom.getBasis = (function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"meta\",\"meta\",-1154898805,null),new cljs.core.Symbol(null,\"validator\",\"validator\",-325659154,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\r\n}));\r\n\r\n(reagent.ratom.RAtom.cljs$lang$type = true);\r\n\r\n(reagent.ratom.RAtom.cljs$lang$ctorStr = \"reagent.ratom/RAtom\");\r\n\r\n(reagent.ratom.RAtom.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__,opt__4430__auto__){\r\nreturn cljs.core._write(writer__4429__auto__,\"reagent.ratom/RAtom\");\r\n}));\r\n\r\n/**\r\n * Positional factory function for reagent.ratom/RAtom.\r\n */\r\nreagent.ratom.__GT_RAtom = (function reagent$ratom$__GT_RAtom(state,meta,validator,watches){\r\nreturn (new reagent.ratom.RAtom(state,meta,validator,watches));\r\n});\r\n\r\n/**\r\n * Like clojure.core/atom, except that it keeps track of derefs.\r\n */\r\nreagent.ratom.atom = (function reagent$ratom$atom(var_args){\r\nvar G__35400 = arguments.length;\r\nswitch (G__35400) {\r\ncase 1:\r\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4810__auto__ = [];\r\nvar len__4789__auto___35660 = arguments.length;\r\nvar i__4790__auto___35661 = (0);\r\nwhile(true){\r\nif((i__4790__auto___35661 < len__4789__auto___35660)){\r\nargs_arr__4810__auto__.push((arguments[i__4790__auto___35661]));\r\n\r\nvar G__35662 = (i__4790__auto___35661 + (1));\r\ni__4790__auto___35661 = G__35662;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4811__auto__ = (new cljs.core.IndexedSeq(args_arr__4810__auto__.slice((1)),(0),null));\r\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4811__auto__);\r\n\r\n}\r\n});\r\n\r\n(reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1 = (function (x){\r\nreturn reagent.ratom.__GT_RAtom(x,null,null,null);\r\n}));\r\n\r\n(reagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic = (function (x,p__35401){\r\nvar map__35402 = p__35401;\r\nvar map__35402__$1 = (((((!((map__35402 == null))))?(((((map__35402.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__35402.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__35402):map__35402);\r\nvar meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__35402__$1,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964));\r\nvar validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__35402__$1,new cljs.core.Keyword(null,\"validator\",\"validator\",-1966190681));\r\nreturn reagent.ratom.__GT_RAtom(x,meta,validator,null);\r\n}));\r\n\r\n/** @this {Function} */\r\n(reagent.ratom.atom.cljs$lang$applyTo = (function (seq35398){\r\nvar G__35399 = cljs.core.first(seq35398);\r\nvar seq35398__$1 = cljs.core.next(seq35398);\r\nvar self__4776__auto__ = this;\r\nreturn self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__35399,seq35398__$1);\r\n}));\r\n\r\n(reagent.ratom.atom.cljs$lang$maxFixedArity = (1));\r\n\r\nreagent.ratom.cached_reaction = (function reagent$ratom$cached_reaction(f,o,k,obj,destroy){\r\nvar m = o.reagReactionCache;\r\nvar m__$1 = (((m == null))?cljs.core.PersistentArrayMap.EMPTY:m);\r\nvar r = (m__$1.cljs$core$IFn$_invoke$arity$2 ? m__$1.cljs$core$IFn$_invoke$arity$2(k,null) : m__$1.call(null,k,null));\r\nif((!((r == null)))){\r\nreturn cljs.core._deref(r);\r\n} else {\r\nif((reagent.ratom._STAR_ratom_context_STAR_ == null)){\r\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\r\n} else {\r\nvar r__$1 = (function (){var G__35407 = f;\r\nvar G__35408 = new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360);\r\nvar G__35409 = (function (x){\r\nif(reagent.ratom.debug){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.dec);\r\n} else {\r\n}\r\n\r\nvar __35671 = o.reagReactionCache;\r\nvar __35672__$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(__35671,k);\r\n(o.reagReactionCache = __35672__$1);\r\n\r\nif((!((obj == null)))){\r\n(obj.reaction = null);\r\n} else {\r\n}\r\n\r\nif((!((destroy == null)))){\r\nreturn (destroy.cljs$core$IFn$_invoke$arity$1 ? destroy.cljs$core$IFn$_invoke$arity$1(x) : destroy.call(null,x));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__35407,G__35408,G__35409) : reagent.ratom.make_reaction.call(null,G__35407,G__35408,G__35409));\r\n})();\r\nvar v = cljs.core._deref(r__$1);\r\n(o.reagReactionCache = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m__$1,k,r__$1));\r\n\r\nif(reagent.ratom.debug){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.inc);\r\n} else {\r\n}\r\n\r\nif((!((obj == null)))){\r\n(obj.reaction = r__$1);\r\n} else {\r\n}\r\n\r\nreturn v;\r\n\r\n}\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {reagent.ratom.IReactiveAtom}\r\n * @implements {cljs.core.IDeref}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n*/\r\nreagent.ratom.Track = (function (f,args,reaction){\r\nthis.f = f;\r\nthis.args = args;\r\nthis.reaction = reaction;\r\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\r\nthis.cljs$lang$protocol_mask$partition1$ = 0;\r\n});\r\n(reagent.ratom.Track.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(reagent.ratom.Track.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar temp__5737__auto__ = self__.reaction;\r\nif((temp__5737__auto__ == null)){\r\nreturn reagent.ratom.cached_reaction((function (){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.f,self__.args);\r\n}),self__.f,self__.args,this$__$1,null);\r\n} else {\r\nvar r = temp__5737__auto__;\r\nreturn cljs.core._deref(r);\r\n}\r\n}));\r\n\r\n(reagent.ratom.Track.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn (((other instanceof reagent.ratom.Track)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.f,other.f)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.args,other.args)));\r\n}));\r\n\r\n(reagent.ratom.Track.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.f,self__.args], null));\r\n}));\r\n\r\n(reagent.ratom.Track.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Track:\");\r\n}));\r\n\r\n(reagent.ratom.Track.getBasis = (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),new cljs.core.Symbol(null,\"args\",\"args\",-1338879193,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\r\n}));\r\n\r\n(reagent.ratom.Track.cljs$lang$type = true);\r\n\r\n(reagent.ratom.Track.cljs$lang$ctorStr = \"reagent.ratom/Track\");\r\n\r\n(reagent.ratom.Track.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__,opt__4430__auto__){\r\nreturn cljs.core._write(writer__4429__auto__,\"reagent.ratom/Track\");\r\n}));\r\n\r\n/**\r\n * Positional factory function for reagent.ratom/Track.\r\n */\r\nreagent.ratom.__GT_Track = (function reagent$ratom$__GT_Track(f,args,reaction){\r\nreturn (new reagent.ratom.Track(f,args,reaction));\r\n});\r\n\r\nreagent.ratom.make_track = (function reagent$ratom$make_track(f,args){\r\nreturn (new reagent.ratom.Track(f,args,null));\r\n});\r\nreagent.ratom.make_track_BANG_ = (function reagent$ratom$make_track_BANG_(f,args){\r\nvar t = reagent.ratom.make_track(f,args);\r\nvar r = (function (){var G__35424 = (function (){\r\nreturn t.cljs$core$IDeref$_deref$arity$1(null);\r\n});\r\nvar G__35425 = new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437);\r\nvar G__35426 = true;\r\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__35424,G__35425,G__35426) : reagent.ratom.make_reaction.call(null,G__35424,G__35425,G__35426));\r\n})();\r\ncljs.core.deref(r);\r\n\r\nreturn r;\r\n});\r\nreagent.ratom.track = (function reagent$ratom$track(var_args){\r\nvar args__4795__auto__ = [];\r\nvar len__4789__auto___35675 = arguments.length;\r\nvar i__4790__auto___35676 = (0);\r\nwhile(true){\r\nif((i__4790__auto___35676 < len__4789__auto___35675)){\r\nargs__4795__auto__.push((arguments[i__4790__auto___35676]));\r\n\r\nvar G__35677 = (i__4790__auto___35676 + (1));\r\ni__4790__auto___35676 = G__35677;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4796__auto__ = ((((1) < args__4795__auto__.length))?(new cljs.core.IndexedSeq(args__4795__auto__.slice((1)),(0),null)):null);\r\nreturn reagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4796__auto__);\r\n});\r\n\r\n(reagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\r\nif(cljs.core.ifn_QMARK_(f)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (ifn? f)\"));\r\n}\r\n\r\nreturn reagent.ratom.make_track(f,args);\r\n}));\r\n\r\n(reagent.ratom.track.cljs$lang$maxFixedArity = (1));\r\n\r\n/** @this {Function} */\r\n(reagent.ratom.track.cljs$lang$applyTo = (function (seq35427){\r\nvar G__35428 = cljs.core.first(seq35427);\r\nvar seq35427__$1 = cljs.core.next(seq35427);\r\nvar self__4776__auto__ = this;\r\nreturn self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__35428,seq35427__$1);\r\n}));\r\n\r\nreagent.ratom.track_BANG_ = (function reagent$ratom$track_BANG_(var_args){\r\nvar args__4795__auto__ = [];\r\nvar len__4789__auto___35678 = arguments.length;\r\nvar i__4790__auto___35679 = (0);\r\nwhile(true){\r\nif((i__4790__auto___35679 < len__4789__auto___35678)){\r\nargs__4795__auto__.push((arguments[i__4790__auto___35679]));\r\n\r\nvar G__35680 = (i__4790__auto___35679 + (1));\r\ni__4790__auto___35679 = G__35680;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4796__auto__ = ((((1) < args__4795__auto__.length))?(new cljs.core.IndexedSeq(args__4795__auto__.slice((1)),(0),null)):null);\r\nreturn reagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4796__auto__);\r\n});\r\n\r\n(reagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\r\nif(cljs.core.ifn_QMARK_(f)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (ifn? f)\"));\r\n}\r\n\r\nreturn reagent.ratom.make_track_BANG_(f,args);\r\n}));\r\n\r\n(reagent.ratom.track_BANG_.cljs$lang$maxFixedArity = (1));\r\n\r\n/** @this {Function} */\r\n(reagent.ratom.track_BANG_.cljs$lang$applyTo = (function (seq35431){\r\nvar G__35432 = cljs.core.first(seq35431);\r\nvar seq35431__$1 = cljs.core.next(seq35431);\r\nvar self__4776__auto__ = this;\r\nreturn self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__35432,seq35431__$1);\r\n}));\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IWatchable}\r\n * @implements {cljs.core.IAtom}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.IReset}\r\n * @implements {cljs.core.ISwap}\r\n * @implements {reagent.ratom.IReactiveAtom}\r\n * @implements {cljs.core.IDeref}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n*/\r\nreagent.ratom.RCursor = (function (ratom,path,reaction,state,watches){\r\nthis.ratom = ratom;\r\nthis.path = path;\r\nthis.reaction = reaction;\r\nthis.state = state;\r\nthis.watches = watches;\r\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\r\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\r\n});\r\n(reagent.ratom.RCursor.prototype._peek = (function (){\r\nvar self__ = this;\r\nvar this$ = this;\r\nvar _STAR_ratom_context_STAR__orig_val__35434 = reagent.ratom._STAR_ratom_context_STAR_;\r\nvar _STAR_ratom_context_STAR__temp_val__35435 = null;\r\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__35435);\r\n\r\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\r\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__35434);\r\n}}));\r\n\r\n(reagent.ratom.RCursor.prototype._set_state = (function (oldstate,newstate){\r\nvar self__ = this;\r\nvar this$ = this;\r\nif((oldstate === newstate)){\r\nreturn null;\r\n} else {\r\n(self__.state = newstate);\r\n\r\nif((!((self__.watches == null)))){\r\nreturn reagent.ratom.notify_w(this$,oldstate,newstate);\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}));\r\n\r\n(reagent.ratom.RCursor.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(reagent.ratom.RCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn reagent.ratom.pr_atom(a__$1,w,opts,[\"Cursor: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.path)].join(''));\r\n}));\r\n\r\n(reagent.ratom.RCursor.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.ratom,self__.path], null));\r\n}));\r\n\r\n(reagent.ratom.RCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn (((other instanceof reagent.ratom.RCursor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,other.path)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.ratom,other.ratom)));\r\n}));\r\n\r\n(reagent.ratom.RCursor.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,new_value){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar oldstate = self__.state;\r\nthis$__$1._set_state(oldstate,new_value);\r\n\r\nif((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom))){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,cljs.core.PersistentVector.EMPTY)){\r\ncljs.core.reset_BANG_(self__.ratom,new_value);\r\n} else {\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.ratom,cljs.core.assoc_in,self__.path,new_value);\r\n}\r\n} else {\r\n(self__.ratom.cljs$core$IFn$_invoke$arity$2 ? self__.ratom.cljs$core$IFn$_invoke$arity$2(self__.path,new_value) : self__.ratom.call(null,self__.path,new_value));\r\n}\r\n\r\nreturn new_value;\r\n}));\r\n\r\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__35447 = a__$1._peek();\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35447) : f.call(null,G__35447));\r\n})());\r\n}));\r\n\r\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__35448 = a__$1._peek();\r\nvar G__35449 = x;\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35448,G__35449) : f.call(null,G__35448,G__35449));\r\n})());\r\n}));\r\n\r\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__35452 = a__$1._peek();\r\nvar G__35453 = x;\r\nvar G__35454 = y;\r\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35452,G__35453,G__35454) : f.call(null,G__35452,G__35453,G__35454));\r\n})());\r\n}));\r\n\r\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a__$1._peek(),x,y,more));\r\n}));\r\n\r\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\r\n}));\r\n\r\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.add_w(this$__$1,key,f);\r\n}));\r\n\r\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.remove_w(this$__$1,key);\r\n}));\r\n\r\n(reagent.ratom.RCursor.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar oldstate = self__.state;\r\nvar newstate = (function (){var temp__5737__auto__ = self__.reaction;\r\nif((temp__5737__auto__ == null)){\r\nvar f = (((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom)))?(function (){\r\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.ratom),self__.path);\r\n}):(function (){\r\nreturn (self__.ratom.cljs$core$IFn$_invoke$arity$1 ? self__.ratom.cljs$core$IFn$_invoke$arity$1(self__.path) : self__.ratom.call(null,self__.path));\r\n}));\r\nreturn reagent.ratom.cached_reaction(f,self__.ratom,self__.path,this$__$1,null);\r\n} else {\r\nvar r = temp__5737__auto__;\r\nreturn cljs.core._deref(r);\r\n}\r\n})();\r\nthis$__$1._set_state(oldstate,newstate);\r\n\r\nreturn newstate;\r\n}));\r\n\r\n(reagent.ratom.RCursor.getBasis = (function (){\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"ratom\",\"ratom\",1514010260,null),new cljs.core.Symbol(null,\"path\",\"path\",1452340359,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\r\n}));\r\n\r\n(reagent.ratom.RCursor.cljs$lang$type = true);\r\n\r\n(reagent.ratom.RCursor.cljs$lang$ctorStr = \"reagent.ratom/RCursor\");\r\n\r\n(reagent.ratom.RCursor.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__,opt__4430__auto__){\r\nreturn cljs.core._write(writer__4429__auto__,\"reagent.ratom/RCursor\");\r\n}));\r\n\r\n/**\r\n * Positional factory function for reagent.ratom/RCursor.\r\n */\r\nreagent.ratom.__GT_RCursor = (function reagent$ratom$__GT_RCursor(ratom,path,reaction,state,watches){\r\nreturn (new reagent.ratom.RCursor(ratom,path,reaction,state,watches));\r\n});\r\n\r\nreagent.ratom.cursor = (function reagent$ratom$cursor(src,path){\r\nif((function (){var or__4185__auto__ = (((!((src == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === src.reagent$ratom$IReactiveAtom$))))?true:(((!src.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(reagent.ratom.IReactiveAtom,src):false)):cljs.core.native_satisfies_QMARK_(reagent.ratom.IReactiveAtom,src));\r\nif(or__4185__auto__){\r\nreturn or__4185__auto__;\r\n} else {\r\nreturn ((cljs.core.ifn_QMARK_(src)) && ((!(cljs.core.vector_QMARK_(src)))));\r\n}\r\n})()){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",[\"src must be a reactive atom or a function, not \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([src], 0)),\" while attempting to get path: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([path], 0))].join(''),\"\\n\",\"(or (satisfies? IReactiveAtom src) (and (ifn? src) (not (vector? src))))\"].join('')));\r\n}\r\n\r\nreturn reagent.ratom.__GT_RCursor(src,path,null,null,null);\r\n});\r\nreagent.ratom.with_let_destroy = (function reagent$ratom$with_let_destroy(v){\r\nvar temp__5739__auto__ = v.destroy;\r\nif((temp__5739__auto__ == null)){\r\nreturn null;\r\n} else {\r\nvar f = temp__5739__auto__;\r\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\r\n}\r\n});\r\nreagent.ratom.with_let_values = (function reagent$ratom$with_let_values(key){\r\nvar temp__5737__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\r\nif((temp__5737__auto__ == null)){\r\nreturn [];\r\n} else {\r\nvar c = temp__5737__auto__;\r\nreturn reagent.ratom.cached_reaction(cljs.core.array,c,key,null,reagent.ratom.with_let_destroy);\r\n}\r\n});\r\n\r\n/**\r\n * @interface\r\n */\r\nreagent.ratom.IDisposable = function(){};\r\n\r\nreagent.ratom.dispose_BANG_ = (function reagent$ratom$dispose_BANG_(this$){\r\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1 == null)))))){\r\nreturn this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1(this$);\r\n} else {\r\nvar x__4487__auto__ = (((this$ == null))?null:this$);\r\nvar m__4488__auto__ = (reagent.ratom.dispose_BANG_[goog.typeOf(x__4487__auto__)]);\r\nif((!((m__4488__auto__ == null)))){\r\nreturn (m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4488__auto__.call(null,this$));\r\n} else {\r\nvar m__4485__auto__ = (reagent.ratom.dispose_BANG_[\"_\"]);\r\nif((!((m__4485__auto__ == null)))){\r\nreturn (m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4485__auto__.call(null,this$));\r\n} else {\r\nthrow cljs.core.missing_protocol(\"IDisposable.dispose!\",this$);\r\n}\r\n}\r\n}\r\n});\r\n\r\nreagent.ratom.add_on_dispose_BANG_ = (function reagent$ratom$add_on_dispose_BANG_(this$,f){\r\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 == null)))))){\r\nreturn this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2(this$,f);\r\n} else {\r\nvar x__4487__auto__ = (((this$ == null))?null:this$);\r\nvar m__4488__auto__ = (reagent.ratom.add_on_dispose_BANG_[goog.typeOf(x__4487__auto__)]);\r\nif((!((m__4488__auto__ == null)))){\r\nreturn (m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4488__auto__.call(null,this$,f));\r\n} else {\r\nvar m__4485__auto__ = (reagent.ratom.add_on_dispose_BANG_[\"_\"]);\r\nif((!((m__4485__auto__ == null)))){\r\nreturn (m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4485__auto__.call(null,this$,f));\r\n} else {\r\nthrow cljs.core.missing_protocol(\"IDisposable.add-on-dispose!\",this$);\r\n}\r\n}\r\n}\r\n});\r\n\r\n\r\n/**\r\n * @interface\r\n */\r\nreagent.ratom.IRunnable = function(){};\r\n\r\nreagent.ratom.run = (function reagent$ratom$run(this$){\r\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IRunnable$run$arity$1 == null)))))){\r\nreturn this$.reagent$ratom$IRunnable$run$arity$1(this$);\r\n} else {\r\nvar x__4487__auto__ = (((this$ == null))?null:this$);\r\nvar m__4488__auto__ = (reagent.ratom.run[goog.typeOf(x__4487__auto__)]);\r\nif((!((m__4488__auto__ == null)))){\r\nreturn (m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4488__auto__.call(null,this$));\r\n} else {\r\nvar m__4485__auto__ = (reagent.ratom.run[\"_\"]);\r\nif((!((m__4485__auto__ == null)))){\r\nreturn (m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4485__auto__.call(null,this$));\r\n} else {\r\nthrow cljs.core.missing_protocol(\"IRunnable.run\",this$);\r\n}\r\n}\r\n}\r\n});\r\n\r\nreagent.ratom.handle_reaction_change = (function reagent$ratom$handle_reaction_change(this$,sender,old,new$){\r\nreturn this$._handle_change(sender,old,new$);\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IWatchable}\r\n * @implements {cljs.core.IAtom}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.IReset}\r\n * @implements {cljs.core.ISwap}\r\n * @implements {reagent.ratom.IReactiveAtom}\r\n * @implements {reagent.ratom.IRunnable}\r\n * @implements {reagent.ratom.IDisposable}\r\n * @implements {cljs.core.IDeref}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n*/\r\nreagent.ratom.Reaction = (function (f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\r\nthis.f = f;\r\nthis.state = state;\r\nthis.dirty_QMARK_ = dirty_QMARK_;\r\nthis.nocache_QMARK_ = nocache_QMARK_;\r\nthis.watching = watching;\r\nthis.watches = watches;\r\nthis.auto_run = auto_run;\r\nthis.caught = caught;\r\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\r\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\r\n});\r\n(reagent.ratom.Reaction.prototype._peek_at = (function (){\r\nvar self__ = this;\r\nvar this$ = this;\r\nvar _STAR_ratom_context_STAR__orig_val__35521 = reagent.ratom._STAR_ratom_context_STAR_;\r\nvar _STAR_ratom_context_STAR__temp_val__35522 = null;\r\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__35522);\r\n\r\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\r\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__35521);\r\n}}));\r\n\r\n(reagent.ratom.Reaction.prototype._handle_change = (function (sender,oldval,newval){\r\nvar self__ = this;\r\nvar this$ = this;\r\nif((((oldval === newval)) || (self__.dirty_QMARK_))){\r\nreturn null;\r\n} else {\r\nif((self__.auto_run == null)){\r\n(self__.dirty_QMARK_ = true);\r\n\r\nreturn reagent.ratom.rea_enqueue(this$);\r\n} else {\r\nif(self__.auto_run === true){\r\nreturn this$._run(false);\r\n} else {\r\nreturn (self__.auto_run.cljs$core$IFn$_invoke$arity$1 ? self__.auto_run.cljs$core$IFn$_invoke$arity$1(this$) : self__.auto_run.call(null,this$));\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype._update_watching = (function (derefed){\r\nvar self__ = this;\r\nvar this$ = this;\r\nvar new$ = cljs.core.set(derefed);\r\nvar old = cljs.core.set(self__.watching);\r\n(self__.watching = derefed);\r\n\r\nvar seq__35532_35686 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(new$,old));\r\nvar chunk__35533_35687 = null;\r\nvar count__35534_35688 = (0);\r\nvar i__35535_35689 = (0);\r\nwhile(true){\r\nif((i__35535_35689 < count__35534_35688)){\r\nvar w_35690 = chunk__35533_35687.cljs$core$IIndexed$_nth$arity$2(null,i__35535_35689);\r\ncljs.core._add_watch(w_35690,this$,reagent.ratom.handle_reaction_change);\r\n\r\n\r\nvar G__35692 = seq__35532_35686;\r\nvar G__35693 = chunk__35533_35687;\r\nvar G__35694 = count__35534_35688;\r\nvar G__35695 = (i__35535_35689 + (1));\r\nseq__35532_35686 = G__35692;\r\nchunk__35533_35687 = G__35693;\r\ncount__35534_35688 = G__35694;\r\ni__35535_35689 = G__35695;\r\ncontinue;\r\n} else {\r\nvar temp__5735__auto___35696 = cljs.core.seq(seq__35532_35686);\r\nif(temp__5735__auto___35696){\r\nvar seq__35532_35697__$1 = temp__5735__auto___35696;\r\nif(cljs.core.chunked_seq_QMARK_(seq__35532_35697__$1)){\r\nvar c__4609__auto___35698 = cljs.core.chunk_first(seq__35532_35697__$1);\r\nvar G__35699 = cljs.core.chunk_rest(seq__35532_35697__$1);\r\nvar G__35700 = c__4609__auto___35698;\r\nvar G__35701 = cljs.core.count(c__4609__auto___35698);\r\nvar G__35702 = (0);\r\nseq__35532_35686 = G__35699;\r\nchunk__35533_35687 = G__35700;\r\ncount__35534_35688 = G__35701;\r\ni__35535_35689 = G__35702;\r\ncontinue;\r\n} else {\r\nvar w_35704 = cljs.core.first(seq__35532_35697__$1);\r\ncljs.core._add_watch(w_35704,this$,reagent.ratom.handle_reaction_change);\r\n\r\n\r\nvar G__35705 = cljs.core.next(seq__35532_35697__$1);\r\nvar G__35706 = null;\r\nvar G__35707 = (0);\r\nvar G__35708 = (0);\r\nseq__35532_35686 = G__35705;\r\nchunk__35533_35687 = G__35706;\r\ncount__35534_35688 = G__35707;\r\ni__35535_35689 = G__35708;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\nvar seq__35539 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(old,new$));\r\nvar chunk__35540 = null;\r\nvar count__35541 = (0);\r\nvar i__35542 = (0);\r\nwhile(true){\r\nif((i__35542 < count__35541)){\r\nvar w = chunk__35540.cljs$core$IIndexed$_nth$arity$2(null,i__35542);\r\ncljs.core._remove_watch(w,this$);\r\n\r\n\r\nvar G__35709 = seq__35539;\r\nvar G__35710 = chunk__35540;\r\nvar G__35711 = count__35541;\r\nvar G__35712 = (i__35542 + (1));\r\nseq__35539 = G__35709;\r\nchunk__35540 = G__35710;\r\ncount__35541 = G__35711;\r\ni__35542 = G__35712;\r\ncontinue;\r\n} else {\r\nvar temp__5735__auto__ = cljs.core.seq(seq__35539);\r\nif(temp__5735__auto__){\r\nvar seq__35539__$1 = temp__5735__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__35539__$1)){\r\nvar c__4609__auto__ = cljs.core.chunk_first(seq__35539__$1);\r\nvar G__35713 = cljs.core.chunk_rest(seq__35539__$1);\r\nvar G__35714 = c__4609__auto__;\r\nvar G__35715 = cljs.core.count(c__4609__auto__);\r\nvar G__35716 = (0);\r\nseq__35539 = G__35713;\r\nchunk__35540 = G__35714;\r\ncount__35541 = G__35715;\r\ni__35542 = G__35716;\r\ncontinue;\r\n} else {\r\nvar w = cljs.core.first(seq__35539__$1);\r\ncljs.core._remove_watch(w,this$);\r\n\r\n\r\nvar G__35717 = cljs.core.next(seq__35539__$1);\r\nvar G__35718 = null;\r\nvar G__35719 = (0);\r\nvar G__35720 = (0);\r\nseq__35539 = G__35717;\r\nchunk__35540 = G__35718;\r\ncount__35541 = G__35719;\r\ni__35542 = G__35720;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype._queued_run = (function (){\r\nvar self__ = this;\r\nvar this$ = this;\r\nif(((self__.dirty_QMARK_) && ((!((self__.watching == null)))))){\r\nreturn this$._run(true);\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype._try_capture = (function (f__$1){\r\nvar self__ = this;\r\nvar this$ = this;\r\ntry{(self__.caught = null);\r\n\r\nreturn reagent.ratom.deref_capture(f__$1,this$);\r\n}catch (e35548){var e = e35548;\r\n(self__.state = e);\r\n\r\n(self__.caught = e);\r\n\r\nreturn (self__.dirty_QMARK_ = false);\r\n}}));\r\n\r\n(reagent.ratom.Reaction.prototype._run = (function (check){\r\nvar self__ = this;\r\nvar this$ = this;\r\nvar oldstate = self__.state;\r\nvar res = (cljs.core.truth_(check)?this$._try_capture(self__.f):reagent.ratom.deref_capture(self__.f,this$));\r\nif(self__.nocache_QMARK_){\r\n} else {\r\n(self__.state = res);\r\n\r\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate,res)))){\r\n} else {\r\nreagent.ratom.notify_w(this$,oldstate,res);\r\n}\r\n}\r\n\r\nreturn res;\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype._set_opts = (function (p__35549){\r\nvar self__ = this;\r\nvar map__35550 = p__35549;\r\nvar map__35550__$1 = (((((!((map__35550 == null))))?(((((map__35550.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__35550.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__35550):map__35550);\r\nvar auto_run__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__35550__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\r\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__35550__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\r\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__35550__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\r\nvar no_cache = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__35550__$1,new cljs.core.Keyword(null,\"no-cache\",\"no-cache\",1588056370));\r\nvar this$ = this;\r\nif((!((auto_run__$1 == null)))){\r\n(this$.auto_run = auto_run__$1);\r\n} else {\r\n}\r\n\r\nif((!((on_set == null)))){\r\n(this$.on_set = on_set);\r\n} else {\r\n}\r\n\r\nif((!((on_dispose == null)))){\r\n(this$.on_dispose = on_dispose);\r\n} else {\r\n}\r\n\r\nif((!((no_cache == null)))){\r\nreturn (this$.nocache_QMARK_ = no_cache);\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(reagent.ratom.Reaction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn reagent.ratom.pr_atom(a__$1,w,opts,[\"Reaction \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.hash(a__$1)),\":\"].join(''));\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn goog.getUid(this$__$1);\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\r\nvar self__ = this;\r\nvar o__$1 = this;\r\nreturn (o__$1 === other);\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$ = cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$dispose_BANG_$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar s = self__.state;\r\nvar wg = self__.watching;\r\n(self__.watching = null);\r\n\r\n(self__.state = null);\r\n\r\n(self__.auto_run = null);\r\n\r\n(self__.dirty_QMARK_ = true);\r\n\r\nvar seq__35558_35722 = cljs.core.seq(cljs.core.set(wg));\r\nvar chunk__35559_35723 = null;\r\nvar count__35560_35724 = (0);\r\nvar i__35561_35725 = (0);\r\nwhile(true){\r\nif((i__35561_35725 < count__35560_35724)){\r\nvar w_35726 = chunk__35559_35723.cljs$core$IIndexed$_nth$arity$2(null,i__35561_35725);\r\ncljs.core._remove_watch(w_35726,this$__$1);\r\n\r\n\r\nvar G__35727 = seq__35558_35722;\r\nvar G__35728 = chunk__35559_35723;\r\nvar G__35729 = count__35560_35724;\r\nvar G__35730 = (i__35561_35725 + (1));\r\nseq__35558_35722 = G__35727;\r\nchunk__35559_35723 = G__35728;\r\ncount__35560_35724 = G__35729;\r\ni__35561_35725 = G__35730;\r\ncontinue;\r\n} else {\r\nvar temp__5735__auto___35731 = cljs.core.seq(seq__35558_35722);\r\nif(temp__5735__auto___35731){\r\nvar seq__35558_35732__$1 = temp__5735__auto___35731;\r\nif(cljs.core.chunked_seq_QMARK_(seq__35558_35732__$1)){\r\nvar c__4609__auto___35733 = cljs.core.chunk_first(seq__35558_35732__$1);\r\nvar G__35734 = cljs.core.chunk_rest(seq__35558_35732__$1);\r\nvar G__35735 = c__4609__auto___35733;\r\nvar G__35736 = cljs.core.count(c__4609__auto___35733);\r\nvar G__35737 = (0);\r\nseq__35558_35722 = G__35734;\r\nchunk__35559_35723 = G__35735;\r\ncount__35560_35724 = G__35736;\r\ni__35561_35725 = G__35737;\r\ncontinue;\r\n} else {\r\nvar w_35738 = cljs.core.first(seq__35558_35732__$1);\r\ncljs.core._remove_watch(w_35738,this$__$1);\r\n\r\n\r\nvar G__35739 = cljs.core.next(seq__35558_35732__$1);\r\nvar G__35740 = null;\r\nvar G__35741 = (0);\r\nvar G__35742 = (0);\r\nseq__35558_35722 = G__35739;\r\nchunk__35559_35723 = G__35740;\r\ncount__35560_35724 = G__35741;\r\ni__35561_35725 = G__35742;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\nif((!((this$__$1.on_dispose == null)))){\r\nthis$__$1.on_dispose(s);\r\n} else {\r\n}\r\n\r\nvar temp__5739__auto__ = this$__$1.on_dispose_arr;\r\nif((temp__5739__auto__ == null)){\r\nreturn null;\r\n} else {\r\nvar a = temp__5739__auto__;\r\nvar n__4666__auto__ = a.length;\r\nvar i = (0);\r\nwhile(true){\r\nif((i < n__4666__auto__)){\r\nvar fexpr__35575_35743 = (a[i]);\r\n(fexpr__35575_35743.cljs$core$IFn$_invoke$arity$1 ? fexpr__35575_35743.cljs$core$IFn$_invoke$arity$1(this$__$1) : fexpr__35575_35743.call(null,this$__$1));\r\n\r\nvar G__35744 = (i + (1));\r\ni = G__35744;\r\ncontinue;\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n}\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 = (function (this$,f__$1){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar temp__5737__auto__ = this$__$1.on_dispose_arr;\r\nif((temp__5737__auto__ == null)){\r\nreturn (this$__$1.on_dispose_arr = [f__$1]);\r\n} else {\r\nvar a = temp__5737__auto__;\r\nreturn a.push(f__$1);\r\n}\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,newval){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nif(cljs.core.fn_QMARK_(a__$1.on_set)){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",\"Reaction is read only; on-set is not allowed\",\"\\n\",\"(fn? (.-on-set a))\"].join('')));\r\n}\r\n\r\nvar oldval = self__.state;\r\n(self__.state = newval);\r\n\r\na__$1.on_set(oldval,newval);\r\n\r\nreagent.ratom.notify_w(a__$1,oldval,newval);\r\n\r\nreturn newval;\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f__$1){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__35588 = a__$1._peek_at();\r\nreturn (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__35588) : f__$1.call(null,G__35588));\r\n})());\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f__$1,x){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__35590 = a__$1._peek_at();\r\nvar G__35591 = x;\r\nreturn (f__$1.cljs$core$IFn$_invoke$arity$2 ? f__$1.cljs$core$IFn$_invoke$arity$2(G__35590,G__35591) : f__$1.call(null,G__35590,G__35591));\r\n})());\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f__$1,x,y){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__35592 = a__$1._peek_at();\r\nvar G__35593 = x;\r\nvar G__35594 = y;\r\nreturn (f__$1.cljs$core$IFn$_invoke$arity$3 ? f__$1.cljs$core$IFn$_invoke$arity$3(G__35592,G__35593,G__35594) : f__$1.call(null,G__35592,G__35593,G__35594));\r\n})());\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f__$1,x,y,more){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f__$1,a__$1._peek_at(),x,y,more));\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$ = cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$run$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreagent.ratom.flush_BANG_();\r\n\r\nreturn this$__$1._run(false);\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f__$1){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.add_w(this$__$1,key,f__$1);\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar was_empty = cljs.core.empty_QMARK_(self__.watches);\r\nreagent.ratom.remove_w(this$__$1,key);\r\n\r\nif((((!(was_empty))) && (cljs.core.empty_QMARK_(self__.watches)) && ((self__.auto_run == null)))){\r\nreturn this$__$1.reagent$ratom$IDisposable$dispose_BANG_$arity$1(null);\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar temp__5739__auto___35746 = self__.caught;\r\nif((temp__5739__auto___35746 == null)){\r\n} else {\r\nvar e_35750 = temp__5739__auto___35746;\r\nthrow e_35750;\r\n}\r\n\r\nvar non_reactive_35751 = (reagent.ratom._STAR_ratom_context_STAR_ == null);\r\nif(non_reactive_35751){\r\nreagent.ratom.flush_BANG_();\r\n} else {\r\n}\r\n\r\nif(((non_reactive_35751) && ((self__.auto_run == null)))){\r\nif(self__.dirty_QMARK_){\r\nvar oldstate_35752 = self__.state;\r\n(self__.state = (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null)));\r\n\r\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate_35752,self__.state)))){\r\n} else {\r\nreagent.ratom.notify_w(this$__$1,oldstate_35752,self__.state);\r\n}\r\n} else {\r\n}\r\n} else {\r\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\r\n\r\nif(self__.dirty_QMARK_){\r\nthis$__$1._run(false);\r\n} else {\r\n}\r\n}\r\n\r\nreturn self__.state;\r\n}));\r\n\r\n(reagent.ratom.Reaction.getBasis = (function (){\r\nreturn new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"dirty?\",\"dirty?\",-419314319,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"nocache?\",\"nocache?\",-1065670978,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watching\",\"watching\",1947648227,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"auto-run\",\"auto-run\",-696035332,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"caught\",\"caught\",2084008322,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\r\n}));\r\n\r\n(reagent.ratom.Reaction.cljs$lang$type = true);\r\n\r\n(reagent.ratom.Reaction.cljs$lang$ctorStr = \"reagent.ratom/Reaction\");\r\n\r\n(reagent.ratom.Reaction.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__,opt__4430__auto__){\r\nreturn cljs.core._write(writer__4429__auto__,\"reagent.ratom/Reaction\");\r\n}));\r\n\r\n/**\r\n * Positional factory function for reagent.ratom/Reaction.\r\n */\r\nreagent.ratom.__GT_Reaction = (function reagent$ratom$__GT_Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\r\nreturn (new reagent.ratom.Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught));\r\n});\r\n\r\nreagent.ratom.make_reaction = (function reagent$ratom$make_reaction(var_args){\r\nvar args__4795__auto__ = [];\r\nvar len__4789__auto___35753 = arguments.length;\r\nvar i__4790__auto___35754 = (0);\r\nwhile(true){\r\nif((i__4790__auto___35754 < len__4789__auto___35753)){\r\nargs__4795__auto__.push((arguments[i__4790__auto___35754]));\r\n\r\nvar G__35755 = (i__4790__auto___35754 + (1));\r\ni__4790__auto___35754 = G__35755;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4796__auto__ = ((((1) < args__4795__auto__.length))?(new cljs.core.IndexedSeq(args__4795__auto__.slice((1)),(0),null)):null);\r\nreturn reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4796__auto__);\r\n});\r\n\r\n(reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic = (function (f,p__35617){\r\nvar map__35618 = p__35617;\r\nvar map__35618__$1 = (((((!((map__35618 == null))))?(((((map__35618.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__35618.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__35618):map__35618);\r\nvar auto_run = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__35618__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\r\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__35618__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\r\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__35618__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\r\nvar reaction = reagent.ratom.__GT_Reaction(f,null,true,false,null,null,null,null);\r\nreaction._set_opts(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437),auto_run,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470),on_set,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360),on_dispose], null));\r\n\r\nreturn reaction;\r\n}));\r\n\r\n(reagent.ratom.make_reaction.cljs$lang$maxFixedArity = (1));\r\n\r\n/** @this {Function} */\r\n(reagent.ratom.make_reaction.cljs$lang$applyTo = (function (seq35610){\r\nvar G__35611 = cljs.core.first(seq35610);\r\nvar seq35610__$1 = cljs.core.next(seq35610);\r\nvar self__4776__auto__ = this;\r\nreturn self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__35611,seq35610__$1);\r\n}));\r\n\r\nreagent.ratom.temp_reaction = reagent.ratom.make_reaction(null);\r\n/**\r\n * Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\r\n * creates a new Reaction that watches those atoms and calls `run` whenever\r\n * any of those watched ratoms change.  Also, the new reaction is added to\r\n * list of 'watches' of each of the ratoms. The `run` parameter is a function\r\n * that should expect one argument.  It is passed `obj` when run.  The `opts`\r\n * are any options accepted by a Reaction and will be set on the newly created\r\n * Reaction. Sets the newly created Reaction to the `key` on `obj`.\r\n */\r\nreagent.ratom.run_in_reaction = (function reagent$ratom$run_in_reaction(f,obj,key,run,opts){\r\nvar r = reagent.ratom.temp_reaction;\r\nvar res = reagent.ratom.deref_capture(f,r);\r\nif((r.watching == null)){\r\n} else {\r\n(reagent.ratom.temp_reaction = reagent.ratom.make_reaction(null));\r\n\r\nr._set_opts(opts);\r\n\r\n(r.f = f);\r\n\r\n(r.auto_run = (function (){\r\nreturn (run.cljs$core$IFn$_invoke$arity$1 ? run.cljs$core$IFn$_invoke$arity$1(obj) : run.call(null,obj));\r\n}));\r\n\r\ngoog.object.set(obj,key,r);\r\n}\r\n\r\nreturn res;\r\n});\r\nreagent.ratom.check_derefs = (function reagent$ratom$check_derefs(f){\r\nvar ctx = ({});\r\nvar res = reagent.ratom.in_context(ctx,f);\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [res,(!((ctx.captured == null)))], null);\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IWatchable}\r\n * @implements {cljs.core.IAtom}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IReset}\r\n * @implements {cljs.core.ISwap}\r\n * @implements {cljs.core.IDeref}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n*/\r\nreagent.ratom.Wrapper = (function (state,callback,changed,watches){\r\nthis.state = state;\r\nthis.callback = callback;\r\nthis.changed = changed;\r\nthis.watches = watches;\r\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\r\nthis.cljs$lang$protocol_mask$partition0$ = 2149613568;\r\n});\r\n(reagent.ratom.Wrapper.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nif(((self__.changed) && ((!((reagent.ratom._STAR_ratom_context_STAR_ == null)))))){\r\nif(reagent.debug.has_console){\r\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\"Warning: \",\"derefing stale wrap: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this$__$1], 0))].join(''));\r\n} else {\r\n}\r\n} else {\r\n}\r\n\r\n\r\nreturn self__.state;\r\n}));\r\n\r\n(reagent.ratom.Wrapper.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,newval){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar oldval = self__.state;\r\n(self__.changed = true);\r\n\r\n(self__.state = newval);\r\n\r\nif((!((self__.watches == null)))){\r\nreagent.ratom.notify_w(this$__$1,oldval,newval);\r\n} else {\r\n}\r\n\r\n(self__.callback.cljs$core$IFn$_invoke$arity$1 ? self__.callback.cljs$core$IFn$_invoke$arity$1(newval) : self__.callback.call(null,newval));\r\n\r\nreturn newval;\r\n}));\r\n\r\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\r\n}));\r\n\r\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\r\n}));\r\n\r\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\r\n}));\r\n\r\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\r\n}));\r\n\r\n(reagent.ratom.Wrapper.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn (((other instanceof reagent.ratom.Wrapper)) && ((!(self__.changed))) && (cljs.core.not(other.changed)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.state,other.state)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.callback,other.callback)));\r\n}));\r\n\r\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\r\n}));\r\n\r\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.add_w(this$__$1,key,f);\r\n}));\r\n\r\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.remove_w(this$__$1,key);\r\n}));\r\n\r\n(reagent.ratom.Wrapper.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Wrap:\");\r\n}));\r\n\r\n(reagent.ratom.Wrapper.getBasis = (function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"callback\",\"callback\",935395299,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"changed\",\"changed\",-2083710852,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\r\n}));\r\n\r\n(reagent.ratom.Wrapper.cljs$lang$type = true);\r\n\r\n(reagent.ratom.Wrapper.cljs$lang$ctorStr = \"reagent.ratom/Wrapper\");\r\n\r\n(reagent.ratom.Wrapper.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__,opt__4430__auto__){\r\nreturn cljs.core._write(writer__4429__auto__,\"reagent.ratom/Wrapper\");\r\n}));\r\n\r\n/**\r\n * Positional factory function for reagent.ratom/Wrapper.\r\n */\r\nreagent.ratom.__GT_Wrapper = (function reagent$ratom$__GT_Wrapper(state,callback,changed,watches){\r\nreturn (new reagent.ratom.Wrapper(state,callback,changed,watches));\r\n});\r\n\r\nreagent.ratom.make_wrapper = (function reagent$ratom$make_wrapper(value,callback_fn,args){\r\nreturn reagent.ratom.__GT_Wrapper(value,reagent.impl.util.make_partial_fn(callback_fn,args),false,null);\r\n});\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/ratom.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",18],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$with-let","~$reagent.ratom","~$dbg","~$reagent.debug","~$log","^F","~$warn","^F","~$error","^F","~$dev?","^F","~$time","^F"],"~:excludes",["~#set",["~$atom"]],"~:macros",["^ ","^C",["^ ","~:arglists",["~#list",[["~$bindings","~$&","~$body"]]],"^7",36,"^8",1,"^6","reagent/ratom.clj","~:name","~$reagent.ratom/with-let","~:ns","^D","~:macro",true],"~$reaction",["^ ","^P",["^Q",[["~$&","^S"]]],"^7",5,"^8",1,"^6","reagent/ratom.clj","^T","~$reagent.ratom/reaction","^V","^D","^W",true],"~$unchecked-aset",["^ ","^P",["^Q",[["~$array","~$idx","~$val"],["^[","^10","~$idx2","~$&","~$idxv"]]],"^7",28,"^8",1,"^6","reagent/ratom.clj","^T","~$reagent.ratom/unchecked-aset","^V","^D","^W",true],"~$unchecked-aget",["^ ","^P",["^Q",[["^[","^10"],["^[","^10","~$&","~$idxs"]]],"^7",19,"^8",1,"^6","reagent/ratom.clj","^T","~$reagent.ratom/unchecked-aget","^V","^D","^W",true],"~$run!",["^ ","^P",["^Q",[["~$&","^S"]]],"~:doc","Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.","^7",9,"^8",1,"^6","reagent/ratom.clj","^T","~$reagent.ratom/run!","^V","^D","^W",true]],"^T","^D","~:op","^V","~:imports",null,"~:requires",["^ ","~$reagent.impl.util","^1>","~$obj","~$goog.object","~$cljs.core","^1A","~$goog","^1B","^1@","^1@","~$reagent.impl.batching","^1C","~$clojure.set","^1D","~$util","^1>","~$s","^1D","~$batch","^1C","^F","^F"],"~:seen",["^M",["~:require","~:require-macros"]],"~:uses",null,"^1I",["^ ","^D","^D","^F","^F","^1A","^1A"],"~:form",["^Q",["~$ns","^D",["^Q",["~:refer-clojure","~:exclude",["^N"]]],["^Q",["^1I",["^D","~:refer",["^C"]]]],["^Q",["^1H",["^1>","~:as","^1E"],["^F","~:refer-macros",["^E","^G","^H","^I","^J","^K"]],["^1C","^1P","^1F"],["^1D","^1P","~$s"],["^1@","^1P","^1?"]]]]],"~:flags",["^ ","^1I",["^M",[]],"^1H",["^M",[]]],"~:js-deps",["^ "],"~:deps",["^1B","^1A","^1>","^F","^1C","^1D","^1@"]],"^V","^D","~:resource-id",["~:shadow.build.classpath/resource","reagent/ratom.cljs"],"~:compiled-at",1579687552425,"~:resource-name","reagent/ratom.cljs","~:warnings",[],"~:source","(ns reagent.ratom\n  (:refer-clojure :exclude [atom])\n  (:require-macros [reagent.ratom :refer [with-let]])\n  (:require [reagent.impl.util :as util]\n            [reagent.debug :refer-macros [dbg log warn error dev? time]]\n            [reagent.impl.batching :as batch]\n            [clojure.set :as s]\n            [goog.object :as obj]))\n\n(declare ^:dynamic *ratom-context*)\n(defonce ^boolean debug false)\n(defonce ^:private generation 0)\n(defonce ^:private -running (clojure.core/atom 0))\n\n(defn ^boolean reactive? []\n  (some? *ratom-context*))\n\n\n;;; Utilities\n\n(defn running []\n  (+ @-running))\n\n(defn- ^number arr-len [x]\n  (if (nil? x) 0 (alength x)))\n\n(defn- ^boolean arr-eq [x y]\n  (let [len (arr-len x)]\n    (and (== len (arr-len y))\n         (loop [i 0]\n           (or (== i len)\n               (if (identical? (aget x i) (aget y i))\n                 (recur (inc i))\n                 false))))))\n\n(defn- in-context [obj f]\n  \"When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n   See function notify-deref-watcher! to know how *ratom-context* is updated\"\n  (binding [*ratom-context* obj]\n    (f)))\n\n(defn- deref-capture\n  \"Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n   `deref`ed atoms captured during `in-context`, if any differ from the\n   `watching` field of r.  Clears the `dirty?` flag on r.\n\n   Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n   the reaction is also added to the list of watches on each ratoms f derefs.\"\n  [f ^clj r]\n  (set! (.-captured r) nil)\n  (when (dev?)\n    (set! (.-ratomGeneration r) (set! generation (inc generation))))\n  (let [res (in-context r f)\n        c (.-captured r)]\n    (set! (.-dirty? r) false)\n    ;; Optimize common case where derefs occur in same order\n    (when-not (arr-eq c (.-watching r))\n      (._update-watching r c))\n    res))\n\n(defn- notify-deref-watcher!\n  \"Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`\"\n  [derefed]\n  (when-some [r *ratom-context*]\n    (let [c (.-captured r)]\n      (if (nil? c)\n        (set! (.-captured r) (array derefed))\n        (.push c derefed)))))\n\n(defn- check-watches [old new]\n  (when debug\n    (swap! -running + (- (count new) (count old))))\n  new)\n\n(defn- add-w [^clj this key f]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (assoc w key f)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- remove-w [^clj this key]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (dissoc w key)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- notify-w [^clj this old new]\n  (let [w (.-watchesArr this)\n        a (if (nil? w)\n            ;; Copy watches to array for speed\n            (->> (.-watches this)\n                 (reduce-kv #(doto %1 (.push %2) (.push %3)) #js[])\n                 (set! (.-watchesArr this)))\n            w)]\n    (let [len (alength a)]\n      (loop [i 0]\n        (when (< i len)\n          (let [k (aget a i)\n                f (aget a (inc i))]\n            (f k this old new))\n          (recur (+ 2 i)))))))\n\n(defn- pr-atom [a writer opts s]\n  (-write writer (str \"#<\" s \" \"))\n  (pr-writer (binding [*ratom-context* nil] (-deref a)) writer opts)\n  (-write writer \">\"))\n\n\n;;; Queueing\n\n(defonce ^:private rea-queue nil)\n\n(defn- rea-enqueue [r]\n  (when (nil? rea-queue)\n    (set! rea-queue (array))\n    (batch/schedule))\n  (.push rea-queue r))\n\n(defn flush! []\n  (loop []\n    (let [q rea-queue]\n      (when-not (nil? q)\n        (set! rea-queue nil)\n        (dotimes [i (alength q)]\n          (._queued-run (aget q i)))\n        (recur)))))\n\n(set! batch/ratom-flush flush!)\n\n\n;;; Atom\n\n(defprotocol IReactiveAtom)\n\n(deftype RAtom [^:mutable state meta validator ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IDeref\n  (-deref [this]\n    (notify-deref-watcher! this)\n    state)\n\n  IReset\n  (-reset! [a new-value]\n    (when-not (nil? validator)\n      (assert (validator new-value) \"Validator rejected reference state\"))\n    (let [old-value state]\n      (set! state new-value)\n      (when-not (nil? watches)\n        (notify-w a old-value new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IWithMeta\n  (-with-meta [_ new-meta] (RAtom. state new-meta validator watches))\n\n  IMeta\n  (-meta [_] meta)\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Atom:\"))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n(defn atom\n  \"Like clojure.core/atom, except that it keeps track of derefs.\"\n  ([x] (->RAtom x nil nil nil))\n  ([x & {:keys [meta validator]}] (->RAtom x meta validator nil)))\n\n\n;;; track\n\n(declare make-reaction)\n\n(defn- cached-reaction [f ^clj o k ^clj obj destroy]\n  (let [m (.-reagReactionCache o)\n        m (if (nil? m) {} m)\n        r (m k nil)]\n    (cond\n      (some? r) (-deref r)\n      (nil? *ratom-context*) (f)\n      :else (let [r (make-reaction\n                     f :on-dispose (fn [x]\n                                     (when debug (swap! -running dec))\n                                     (as-> (.-reagReactionCache o) _\n                                       (dissoc _ k)\n                                       (set! (.-reagReactionCache o) _))\n                                     (when (some? obj)\n                                       (set! (.-reaction obj) nil))\n                                     (when (some? destroy)\n                                       (destroy x))))\n                  v (-deref r)]\n              (set! (.-reagReactionCache o) (assoc m k r))\n              (when debug (swap! -running inc))\n              (when (some? obj)\n                (set! (.-reaction obj) r))\n              v))))\n\n(deftype Track [f args ^:mutable reaction]\n  IReactiveAtom\n\n  IDeref\n  (-deref [this]\n    (if-some [r reaction]\n      (-deref r)\n      (cached-reaction #(apply f args) f args this nil)))\n\n  IEquiv\n  (-equiv [_ ^clj other]\n    (and (instance? Track other)\n         (= f (.-f other))\n         (= args (.-args other))))\n\n  IHash\n  (-hash [_] (hash [f args]))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Track:\")))\n\n(defn make-track [f args]\n  (Track. f args nil))\n\n(defn make-track! [f args]\n  (let [t (make-track f args)\n        r (make-reaction #(-deref t)\n                         :auto-run true)]\n    @r\n    r))\n\n(defn track [f & args]\n  {:pre [(ifn? f)]}\n  (make-track f args))\n\n(defn track! [f & args]\n  {:pre [(ifn? f)]}\n  (make-track! f args))\n\n;;; cursor\n\n(deftype RCursor [ratom path ^:mutable reaction\n                  ^:mutable state ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [_ ^clj other]\n    (and (instance? RCursor other)\n         (= path (.-path other))\n         (= ratom (.-ratom other))))\n\n  Object\n  (_peek [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_set-state [this oldstate newstate]\n    (when-not (identical? oldstate newstate)\n      (set! state newstate)\n      (when (some? watches)\n        (notify-w this oldstate newstate))))\n\n  IDeref\n  (-deref [this]\n    (let [oldstate state\n          newstate (if-some [r reaction]\n                     (-deref r)\n                     (let [f (if (satisfies? IDeref ratom)\n                               #(get-in @ratom path)\n                               #(ratom path))]\n                       (cached-reaction f ratom path this nil)))]\n      (._set-state this oldstate newstate)\n      newstate))\n\n  IReset\n  (-reset! [this new-value]\n    (let [oldstate state]\n      (._set-state this oldstate new-value)\n      (if (satisfies? IDeref ratom)\n        (if (= path [])\n          (reset! ratom new-value)\n          (swap! ratom assoc-in path new-value))\n        (ratom path new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek a))))\n  (-swap! [a f x]        (-reset! a (f (._peek a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek a) x y more)))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts (str \"Cursor: \" path)))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [_] (hash [ratom path])))\n\n(defn cursor\n  [^clj src path]\n  (assert (or (satisfies? IReactiveAtom src)\n              (and (ifn? src)\n                   (not (vector? src))))\n          (str \"src must be a reactive atom or a function, not \"\n               (pr-str src)\n               \" while attempting to get path: \"\n               (pr-str path)))\n  (->RCursor src path nil nil nil))\n\n\n;;; with-let support\n\n(defn with-let-destroy [v]\n  (when-some [f (.-destroy v)]\n    (f)))\n\n(defn with-let-values [key]\n  (if-some [c *ratom-context*]\n    (cached-reaction array c key\n                     nil with-let-destroy)\n    (array)))\n\n\n;;;; reaction\n\n(defprotocol IDisposable\n  (dispose! [this])\n  (add-on-dispose! [this f]))\n\n(defprotocol IRunnable\n  (run [this]))\n\n(defn- handle-reaction-change [^clj this sender old new]\n  (._handle-change this sender old new))\n\n;; Fields of a Reaction javascript object\n;; - auto_run\n;; - captured\n;; - caught\n;; - f\n;; - ratomGeneration\n;; - state\n;; - watches\n;; - watching\n(deftype Reaction [f ^:mutable state ^:mutable ^boolean dirty? ^boolean nocache?\n                   ^:mutable watching ^:mutable watches ^:mutable auto-run\n                   ^:mutable caught]\n  IAtom\n  IReactiveAtom\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]\n    (let [was-empty (empty? watches)]\n      (remove-w this key)\n      (when (and (not was-empty)\n                 (empty? watches)\n                 (nil? auto-run))\n        (dispose! this))))\n\n  IReset\n  (-reset! [a newval]\n    (assert (fn? (.-on-set a)) \"Reaction is read only; on-set is not allowed\")\n    (let [oldval state]\n      (set! state newval)\n      (.on-set a oldval newval)\n      (notify-w a oldval newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek-at a))))\n  (-swap! [a f x]        (-reset! a (f (._peek-at a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek-at a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek-at a) x y more)))\n\n  Object\n  (_peek-at [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_handle-change [this sender oldval newval]\n    (when-not (or (identical? oldval newval)\n                  dirty?)\n      (if (nil? auto-run)\n        (do\n          (set! dirty? true)\n          (rea-enqueue this))\n        (if (true? auto-run)\n          (._run this false)\n          (auto-run this)))))\n\n  (_update-watching [this derefed]\n    (let [new (set derefed)\n          old (set watching)]\n      (set! watching derefed)\n      (doseq [w (s/difference new old)]\n        (-add-watch w this handle-reaction-change))\n      (doseq [w (s/difference old new)]\n        (-remove-watch w this))))\n\n  (_queued-run [this]\n    (when (and dirty? (some? watching))\n      (._run this true)))\n\n  (_try-capture [this f]\n    (try\n      (set! caught nil)\n      (deref-capture f this)\n      (catch :default e\n        (set! state e)\n        (set! caught e)\n        (set! dirty? false))))\n\n  (_run [this check]\n    (let [oldstate state\n          res (if check\n                (._try-capture this f)\n                (deref-capture f this))]\n      (when-not nocache?\n        (set! state res)\n        ;; Use = to determine equality from reactions, since\n        ;; they are likely to produce new data structures.\n        (when-not (or (nil? watches)\n                      (= oldstate res))\n          (notify-w this oldstate res)))\n      res))\n\n  (_set-opts [this {:keys [auto-run on-set on-dispose no-cache]}]\n    (when (some? auto-run)\n      (set! (.-auto-run this) auto-run))\n    (when (some? on-set)\n      (set! (.-on-set this) on-set))\n    (when (some? on-dispose)\n      (set! (.-on-dispose this) on-dispose))\n    (when (some? no-cache)\n      (set! (.-nocache? this) no-cache)))\n\n  IRunnable\n  (run [this]\n    (flush!)\n    (._run this false))\n\n  IDeref\n  (-deref [this]\n    (when-some [e caught]\n      (throw e))\n    (let [non-reactive (nil? *ratom-context*)]\n      (when non-reactive\n        (flush!))\n      (if (and non-reactive (nil? auto-run))\n        (when dirty?\n          (let [oldstate state]\n            (set! state (f))\n            (when-not (or (nil? watches) (= oldstate state))\n              (notify-w this oldstate state))))\n        (do\n          (notify-deref-watcher! this)\n          (when dirty?\n            (._run this false)))))\n    state)\n\n  IDisposable\n  (dispose! [this]\n    (let [s state\n          wg watching]\n      (set! watching nil)\n      (set! state nil)\n      (set! auto-run nil)\n      (set! dirty? true)\n      (doseq [w (set wg)]\n        (-remove-watch w this))\n      (when (some? (.-on-dispose this))\n        (.on-dispose this s))\n      (when-some [a (.-on-dispose-arr this)]\n        (dotimes [i (alength a)]\n          ((aget a i) this)))))\n\n  (add-on-dispose! [this f]\n    ;; f is called with the reaction as argument when it is no longer active\n    (if-some [a (.-on-dispose-arr this)]\n      (.push a f)\n      (set! (.-on-dispose-arr this) (array f))))\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts (str \"Reaction \" (hash a) \":\")))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n\n(defn make-reaction [f & {:keys [auto-run on-set on-dispose]}]\n  (let [reaction (->Reaction f nil true false nil nil nil nil)]\n    (._set-opts reaction {:auto-run auto-run\n                          :on-set on-set\n                          :on-dispose on-dispose})\n    reaction))\n\n\n\n(def ^:private temp-reaction (make-reaction nil))\n\n\n(defn run-in-reaction\n  \"Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`.\"\n  [f obj key run opts]\n  (let [r temp-reaction\n        res (deref-capture f r)]\n    (when-not (nil? (.-watching r))\n      (set! temp-reaction (make-reaction nil))\n      (._set-opts r opts)\n      (set! (.-f r) f)\n      (set! (.-auto-run r) #(run obj))\n      (obj/set obj key r))\n    res))\n\n(defn check-derefs [f]\n  (let [ctx (js-obj)\n        res (in-context ctx f)]\n    [res (some? (.-captured ctx))]))\n\n\n;;; wrap\n\n(deftype Wrapper [^:mutable state callback ^:mutable ^boolean changed\n                  ^:mutable watches]\n\n  IAtom\n\n  IDeref\n  (-deref [this]\n    (when (dev?)\n      (when (and changed (some? *ratom-context*))\n        (warn \"derefing stale wrap: \"\n              (pr-str this))))\n    state)\n\n  IReset\n  (-reset! [this newval]\n    (let [oldval state]\n      (set! changed true)\n      (set! state newval)\n      (when (some? watches)\n        (notify-w this oldval newval))\n      (callback newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IEquiv\n  (-equiv [_ ^clj other]\n          (and (instance? Wrapper other)\n               ;; If either of the wrappers have changed, equality\n               ;; cannot be relied on.\n               (not changed)\n               (not (.-changed other))\n               (= state (.-state other))\n               (= callback (.-callback other))))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Wrap:\")))\n\n(defn make-wrapper [value callback-fn args]\n  (->Wrapper value\n             (util/make-partial-fn callback-fn args)\n             false nil))\n\n\n\n\n#_(do\n  (defn ratom-perf []\n    (set! debug false)\n    (dotimes [_ 10]\n      (let [nite 100000\n            a (atom 0)\n            f (fn []\n                (quot @a 10))\n            mid (make-reaction f)\n            res (track! (fn []\n                          ;; (with-let [x 1])\n                          ;; @(track f)\n                          (inc @mid)\n                          ))]\n        @res\n        (time (dotimes [x nite]\n                (swap! a inc)\n                (flush!)))\n        (dispose! res))))\n  (ratom-perf))\n","~:reader-features",["^M",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["js/reagent","js/reagent.ratom","js/reagent.ratom.debug","reagent.ratom/debug","js/reagent.ratom.generation","reagent.ratom/generation","js/reagent.ratom.-running","reagent.ratom/-running","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","reagent.ratom/reactive?","reagent.ratom/*ratom-context*","reagent.ratom/running","cljs.core/deref","reagent.ratom/arr-len","x","reagent.ratom/arr-eq","y","len","i","or__4185__auto__","reagent.ratom/in-context","obj","f","*ratom-context*-orig-val__35341","*ratom-context*-temp-val__35342","reagent.ratom/deref-capture","r","res","c","reagent.ratom/notify-deref-watcher!","derefed","temp__5739__auto__","reagent.ratom/check-watches","old","new","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","cljs.core/+","cljs.core/count","reagent.ratom/add-w","this","key","w","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","reagent.ratom/remove-w","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","reagent.ratom/notify-w","a","p1__35346#","p2__35347#","p3__35348#","cljs.core/reduce-kv","G__35349","k","reagent.ratom/pr-atom","writer","opts","s","cljs.core/-write","cljs.core/pr-writer","*ratom-context*-orig-val__35353","*ratom-context*-temp-val__35354","cljs.core/-deref","js/reagent.ratom.rea-queue","reagent.ratom/rea-queue","reagent.ratom/rea-enqueue","reagent.impl.batching/schedule","reagent.ratom/flush!","q","n__4666__auto__","reagent.impl.batching/ratom-flush","reagent.ratom/IReactiveAtom","cljs.core/PROTOCOL_SENTINEL","this__4428__auto__","writer__4429__auto__","opt__4430__auto__","reagent.ratom/RAtom","reagent.ratom/->RAtom","state","meta","validator","watches","o","other","new-value","js/Error","old-value","more","cljs.core.apply.cljs$core$IFn$_invoke$arity$5","_","new-meta","goog/getUid","var_args","G__35400","reagent.ratom/atom","args-arr__4810__auto__","len__4789__auto__","i__4790__auto__","argseq__4811__auto__","cljs.core/IndexedSeq","p__35401","map__35402","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","seq35398","G__35399","cljs.core/first","cljs.core/next","self__4776__auto__","reagent.ratom/cached-reaction","destroy","m","G__35407","G__35408","G__35409","reagent.ratom/make-reaction","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","cljs.core/dec","v","cljs.core/inc","reagent.ratom/Track","reagent.ratom/->Track","args","reaction","temp__5737__auto__","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/hash","reagent.ratom/make-track","reagent.ratom/make-track!","t","G__35424","G__35425","G__35426","args__4795__auto__","argseq__4796__auto__","reagent.ratom/track","seq35427","G__35428","cljs.core/ifn?","reagent.ratom/track!","seq35431","G__35432","reagent.ratom/RCursor","reagent.ratom/->RCursor","ratom","path","*ratom-context*-orig-val__35434","*ratom-context*-temp-val__35435","oldstate","newstate","cljs.core/native-satisfies?","cljs.core/IDeref","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","cljs.core/reset!","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc-in","G__35447","G__35448","G__35449","G__35452","G__35453","G__35454","reagent.ratom/cursor","src","cljs.core/vector?","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","reagent.ratom/with-let-destroy","reagent.ratom/with-let-values","cljs.core/array","x__4487__auto__","m__4488__auto__","reagent.ratom/dispose!","goog/typeOf","m__4485__auto__","cljs.core/missing-protocol","reagent.ratom/add-on-dispose!","reagent.ratom/IDisposable","reagent.ratom/run","reagent.ratom/IRunnable","reagent.ratom/handle-reaction-change","sender","p__35549","map__35550","reagent.ratom/Reaction","reagent.ratom/->Reaction","dirty?","nocache?","watching","auto-run","caught","was-empty","cljs.core/empty?","newval","cljs.core/fn?","oldval","G__35588","G__35590","G__35591","G__35592","G__35593","G__35594","*ratom-context*-orig-val__35521","*ratom-context*-temp-val__35522","cljs.core/set","seq__35532","cljs.core/seq","chunk__35533","count__35534","i__35535","temp__5735__auto__","cljs.core/chunked-seq?","c__4609__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","clojure.set.difference.cljs$core$IFn$_invoke$arity$2","cljs.core/-add-watch","seq__35539","chunk__35540","count__35541","i__35542","cljs.core/-remove-watch","e35548","e","check","on-set","on-dispose","no-cache","non-reactive","wg","seq__35558","chunk__35559","count__35560","i__35561","fexpr__35575","p__35617","map__35618","seq35610","G__35611","reagent.ratom/temp-reaction","reagent.ratom/run-in-reaction","run","goog.object/set","reagent.ratom/check-derefs","ctx","reagent.ratom/Wrapper","reagent.ratom/->Wrapper","callback","changed","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","cljs.core/not","reagent.ratom/make-wrapper","value","callback-fn","reagent.impl.util/make-partial-fn"]]],"~:cache-keys",["~#cmap",[["^1V","reagent/impl/batching.cljs"],[1579687470078,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^M",[]],"~:deps-syms",["^1B","^1A","^F","^1>"]]],["^1V","goog/dom/tagname.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","~$goog.dom.HtmlElement"]]],["^1V","goog/math/math.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","~$goog.array","~$goog.asserts"]]],["^1V","goog/html/trustedtypes.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B"]]],["^1V","goog/labs/useragent/browser.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^2<","~$goog.labs.userAgent.util","^1@","~$goog.string.internal"]]],["^1V","goog/html/safeurl.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^2=","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2?"]]],["^1V","goog/array/array.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^2="]]],["^1V","reagent/impl/util.cljs"],[1579687470078,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^1A","^F","~$clojure.string"]]],["^1V","goog/debug/error.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B"]]],["^1V","goog/dom/nodetype.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B"]]],["^1V","reagent/ratom.cljs"],[1579687470078,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^1A","^1>","^F","^1C","^1D","^1@"]]],["^1V","goog/string/typedstring.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B"]]],["^1V","goog/object/object.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B"]]],["^1V","goog/dom/asserts.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^2="]]],"~:SHADOW-TIMESTAMP",[1579687469000,1579687405000],["^1V","goog/math/long.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^2=","~$goog.reflect"]]],["^1V","goog/html/trustedresourceurl.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^2=","~$goog.html.trustedtypes","^2B","^2C","^2D","^2E"]]],["^1V","goog/string/internal.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B"]]],["^1V","goog/functions/functions.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B"]]],["^1V","goog/html/safestyle.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^2<","^2=","~$goog.html.SafeUrl","^2D","^2E","^2?"]]],["^1V","goog/dom/safe.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^2=","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^2J","^2A","~$goog.html.uncheckedconversions","^2D","^2?"]]],["^1V","goog/structs/map.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1V","goog/html/safehtml.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^2<","^2=","~$goog.dom.TagName","~$goog.dom.tags","^2N","^2O","~$goog.html.SafeStyleSheet","^2J","^2A","^2I","^2B","^2C","~$goog.labs.userAgent.browser","^1@","^2D","^2E","^2?"]]],["^1V","goog/dom/tags.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^1@"]]],["^1V","goog/asserts/asserts.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1V","goog/uri/uri.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^2<","^2=","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1V","goog/i18n/bidi.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B"]]],["^1V","goog/fs/url.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B"]]],["^1V","goog/base.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",[]]],["^1V","goog/structs/structs.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^2<","^1@"]]],["^1V","clojure/string.cljs"],[1579687405264,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^1A","^2Y","~$goog.string.StringBuffer"]]],["^1V","goog/string/string.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","~$goog.dom.safe","^2P","^2D","^2?"]]],["^1V","goog/reflect/reflect.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B"]]],["^1V","goog/labs/useragent/util.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^2?"]]],["^1V","goog/string/stringbuffer.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B"]]],["^1V","goog/iter/iter.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^2<","^2=","^2L","~$goog.math"]]],["^1V","goog/html/uncheckedconversions.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^2=","^2M","^2N","^2O","^2U","^2J","^2A","^2D","^2?"]]],["^1V","goog/dom/htmlelement.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B"]]],["^1V","cljs/core.cljs"],[1579687405264,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["~$goog.math.Long","~$goog.math.Integer","^2Y","^1@","^2<","~$goog.Uri","^33"]]],["^1V","goog/html/safescript.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^2=","^2I","^2D","^2E"]]],["^1V","reagent/debug.cljs"],[1579687470078,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^1A"]]],["^1V","goog/html/safestylesheet.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^2<","^2=","^2O","^1@","^2D","^2E","^2?"]]],["^1V","goog/math/integer.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^2H"]]],["^1V","clojure/set.cljs"],[1579687405264,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^1A"]]],["^1V","goog/uri/utils.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^2<","^2=","^2Y"]]],["^1V","goog/string/const.js"],[1579687410012,"^27",["^ ","^28",null,"^29",["^M",[]],"^2:",["^1B","^2=","^2E"]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map.clj",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/reagent/reagent/0.9.1/reagent-0.9.1.jar!/reagent/ratom.clj",1579687470000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1579687401000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64.clj",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1579687402000,"jar:file:/C:/Users/PC/.m2/repository/reagent/reagent/0.9.1/reagent-0.9.1.jar!/reagent/debug.clj",1579687470000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1579687402000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/analyzer.cljc",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1579687402000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/tagged_literals.cljc",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/util.cljc",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/compiler.cljc",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64_vlq.clj",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1579687402000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1579687401000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1579687401000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/externs.clj",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1579687401000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/js_deps.cljc",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1579687401000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1579687401000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1579687402000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1579687402000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1579687402000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/core.cljc",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/env.cljc",1579687405000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/ratom.cljs","^7",1,"^8",5,"^9",1,"^:",18],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"~:shadow/protocol-prefixes",["^M",["reagent$ratom$IRunnable$","reagent$ratom$IDisposable$"]],"^B",["^ ","^C","^D","^E","^F","^G","^F","^H","^F","^I","^F","^J","^F","^K","^F"],"^L",["^M",["^N"]],"^O",["^ ","^C",["^ ","^P",["^Q",[["^R","~$&","^S"]]],"^7",36,"^8",1,"^6","reagent/ratom.clj","^T","^U","^V","^D","^W",true],"^X",["^ ","^P",["^Q",[["~$&","^S"]]],"^7",5,"^8",1,"^6","reagent/ratom.clj","^T","^Y","^V","^D","^W",true],"^Z",["^ ","^P",["^Q",[["^[","^10","^11"],["^[","^10","^12","~$&","^13"]]],"^7",28,"^8",1,"^6","reagent/ratom.clj","^T","^14","^V","^D","^W",true],"^15",["^ ","^P",["^Q",[["^[","^10"],["^[","^10","~$&","^16"]]],"^7",19,"^8",1,"^6","reagent/ratom.clj","^T","^17","^V","^D","^W",true],"^18",["^ ","^P",["^Q",[["~$&","^S"]]],"^19","Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.","^7",9,"^8",1,"^6","reagent/ratom.clj","^T","^1:","^V","^D","^W",true]],"~:shadow/js-access-properties",["^M",["_peek-at","_update-watching","_queued-run","_set-opts","_peek","_set-state","_handle-change","_try-capture"]],"^T","^D","^1<",null,"^1=",["^ ","^1>","^1>","^1?","^1@","^1A","^1A","^1B","^1B","^1@","^1@","^1C","^1C","^1D","^1D","^1E","^1>","~$s","^1D","^1F","^1C","^F","^F"],"^1G",["^M",["^1H","^1I"]],"~:shadow/js-access-global",["^M",["Error"]],"^1J",null,"~:defs",["^ ","~$pr-atom",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",104,"^8",8,"^9",104,"^:",15,"~:private",true,"^P",["^Q",["~$quote",["^Q",[["~$a","~$writer","~$opts","~$s"]]]]]],"^3[",true,"^T","~$reagent.ratom/pr-atom","^6","reagent/ratom.cljs","^:",15,"~:method-params",["^Q",[["~$a","^41","^42","~$s"]]],"~:protocol-impl",null,"~:arglists-meta",["^Q",[null,null]],"^8",1,"~:variadic?",false,"^7",104,"~:ret-tag","~$any","^9",104,"~:max-fixed-arity",4,"~:fn-var",true,"^P",["^Q",["^40",["^Q",[["~$a","^41","^42","~$s"]]]]]],"~$->RCursor",["^ ","^3Z",null,"^5",["^ ","~:protocols",["^M",["~$cljs.core/IWatchable","~$cljs.core/IAtom","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/Object","~$cljs.core/IReset","~$cljs.core/ISwap","~$reagent.ratom/IReactiveAtom","~$cljs.core/IDeref","~$cljs.core/IPrintWithWriter"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"~:factory","~:positional","^7",256,"^9",256,"^P",["^Q",["^40",["^Q",[["~$ratom","~$path","^X","~$state","~$watches"]]]]],"~:skip-protocol-flag",["^M",["^4>","^4?","^4@","^4A","^4C","^4D","^4F","^4G"]],"^19","Positional factory function for reagent.ratom/RCursor."],"^4=",["^M",["^4>","^4?","^4@","^4A","^4B","^4C","^4D","^4E","^4F","^4G"]],"^T","~$reagent.ratom/->RCursor","^6","reagent/ratom.cljs","^:",17,"^44",["^Q",[["^4J","^4K","^X","^4L","^4M"]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^4H","^4I","^7",256,"^48","~$reagent.ratom/RCursor","^9",256,"^4:",5,"^4;",true,"^P",["^Q",["^40",["^Q",[["^4J","^4K","^X","^4L","^4M"]]]]],"^4N",["^M",["^4>","^4?","^4@","^4A","^4C","^4D","^4F","^4G"]],"^19","Positional factory function for reagent.ratom/RCursor."],"~$notify-deref-watcher!",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",62,"^8",8,"^9",62,"^:",29,"^3[",true,"^P",["^Q",["^40",["^Q",[["~$derefed"]]]]],"^19","Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`"],"^3[",true,"^T","~$reagent.ratom/notify-deref-watcher!","^6","reagent/ratom.cljs","^:",29,"^44",["^Q",[["^4R"]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^7",62,"^48",["^M",[null,"^49","~$clj-nil"]],"^9",62,"^4:",1,"^4;",true,"^P",["^Q",["^40",["^Q",[["^4R"]]]]],"^19","Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`"],"~$rea-enqueue",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",114,"^8",8,"^9",114,"^:",19,"^3[",true,"^P",["^Q",["^40",["^Q",[["~$r"]]]]]],"^3[",true,"^T","~$reagent.ratom/rea-enqueue","^6","reagent/ratom.cljs","^:",19,"^44",["^Q",[["~$r"]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^7",114,"^48","^49","^9",114,"^4:",1,"^4;",true,"^P",["^Q",["^40",["^Q",[["~$r"]]]]]],"~$in-context",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",36,"^8",8,"^9",36,"^:",18,"^3[",true,"^P",["^Q",["^40",["^Q",[["^1?","~$f"]]]]]],"^3[",true,"^T","~$reagent.ratom/in-context","^6","reagent/ratom.cljs","^:",18,"^44",["^Q",[["^1?","~$f"]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^7",36,"^9",36,"^4:",2,"^4;",true,"^P",["^Q",["^40",["^Q",[["^1?","~$f"]]]]]],"~$make-track",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",236,"^8",7,"^9",236,"^:",17,"^P",["^Q",["^40",["^Q",[["~$f","~$args"]]]]]],"^T","~$reagent.ratom/make-track","^6","reagent/ratom.cljs","^:",17,"^44",["^Q",[["~$f","^4Z"]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^7",236,"^48","~$reagent.ratom/Track","^9",236,"^4:",2,"^4;",true,"^P",["^Q",["^40",["^Q",[["~$f","^4Z"]]]]]],"~$RAtom",["^ ","~:num-fields",4,"^4=",["^M",["^4>","^4?","^4@","^4A","^4C","^4D","^4E","~$cljs.core/IMeta","^4F","^4G","~$cljs.core/IWithMeta"]],"^T","~$reagent.ratom/RAtom","^6","reagent/ratom.cljs","^:",15,"~:type",true,"^8",10,"^7",136,"~:record",false,"^9",136,"~:tag","~$function","^4N",["^M",["^4>","^4?","^4@","^4A","^4C","^4D","^53","^4F","^4G","^54"]]],"^N",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",181,"^8",7,"^9",181,"^:",11,"^P",["^Q",["^40",["^Q",[["~$x"],["~$x","~$&",["^ ","~:keys",["~$meta","~$validator"]]]]]]],"^19","Like clojure.core/atom, except that it keeps track of derefs.","~:top-fn",["^ ","^47",true,"~:fixed-arity",1,"^4:",1,"^44",["^Q",[["~$x"]]],"^P",["^Q",[["~$x"],["~$x","~$&",["^ ","^5:",["^5;","^5<"]]]]],"^46",["^Q",[null,null]]]],"^T","~$reagent.ratom/atom","^6","reagent/ratom.cljs","^:",11,"^5=",["^ ","^47",true,"^5>",1,"^4:",1,"^44",["^Q",[["~$x"]]],"^P",["^Q",[["~$x"],["~$x","~$&",["^ ","^5:",["^5;","^5<"]]]]],"^46",["^Q",[null,null]]],"^44",["^Q",[["~$x"]]],"^45",null,"^5>",1,"^46",["^Q",[null,null]],"^8",1,"^47",true,"~:methods",[["^ ","^5>",1,"^47",false,"^58","^55"],["^ ","^5>",1,"^47",true,"^58","^55"]],"^7",181,"^9",181,"^4:",1,"^4;",true,"^P",["^Q",[["~$x"],["~$x","~$&",["^ ","^5:",["^5;","^5<"]]]]],"^19","Like clojure.core/atom, except that it keeps track of derefs."],"~$notify-w",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",88,"^8",8,"^9",88,"^:",16,"^3[",true,"^P",["^Q",["^40",["^Q",[["~$this","~$old","~$new"]]]]]],"^3[",true,"^T","~$reagent.ratom/notify-w","^6","reagent/ratom.cljs","^:",16,"^44",["^Q",[["^5B","^5C","^5D"]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^7",88,"^48","^4T","^9",88,"^4:",3,"^4;",true,"^P",["^Q",["^40",["^Q",[["^5B","^5C","^5D"]]]]]],"~$->Reaction",["^ ","^3Z",null,"^5",["^ ","^4=",["^M",["^4>","^4?","^4@","^4A","^4B","^4C","^4D","^4E","~$reagent.ratom/IRunnable","~$reagent.ratom/IDisposable","^4F","^4G"]],"^6","reagent/ratom.cljs","^:",18,"^8",10,"^4H","^4I","^7",364,"^9",364,"^P",["^Q",["^40",["^Q",[["~$f","^4L","~$dirty?","~$nocache?","~$watching","^4M","~$auto-run","~$caught"]]]]],"^4N",["^M",["^4>","^4?","^4@","^4A","^4C","^4D","^4F","^4G"]],"^19","Positional factory function for reagent.ratom/Reaction."],"^4=",["^M",["^4>","^4?","^4@","^4A","^4B","^4C","^4D","^4E","^5G","^5H","^4F","^4G"]],"^T","~$reagent.ratom/->Reaction","^6","reagent/ratom.cljs","^:",18,"^44",["^Q",[["~$f","^4L","^5I","^5J","^5K","^4M","^5L","^5M"]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^4H","^4I","^7",364,"^48","~$reagent.ratom/Reaction","^9",364,"^4:",8,"^4;",true,"^P",["^Q",["^40",["^Q",[["~$f","^4L","^5I","^5J","^5K","^4M","^5L","^5M"]]]]],"^4N",["^M",["^4>","^4?","^4@","^4A","^4C","^4D","^4F","^4G"]],"^19","Positional factory function for reagent.ratom/Reaction."],"~$make-wrapper",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",600,"^8",7,"^9",600,"^:",19,"^P",["^Q",["^40",["^Q",[["~$value","~$callback-fn","^4Z"]]]]]],"^T","~$reagent.ratom/make-wrapper","^6","reagent/ratom.cljs","^:",19,"^44",["^Q",[["^5Q","^5R","^4Z"]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^7",600,"^48","~$reagent.ratom/Wrapper","^9",600,"^4:",3,"^4;",true,"^P",["^Q",["^40",["^Q",[["^5Q","^5R","^4Z"]]]]]],"~$IReactiveAtom",["^ ","^5",["^ ","~:protocol-symbol",true,"^6","reagent/ratom.cljs","^:",27,"^8",14,"^7",134,"~:protocol-info",["^ ","^5@",["^ "]],"^9",134,"~:sigs",["^ "],"~:jsdoc",["^Q",["@interface"]]],"^5V",true,"^T","^4E","^6","reagent/ratom.cljs","^:",27,"^8",1,"^7",134,"^5W",["^ ","^5@",["^ "]],"~:info",null,"^9",134,"^58","^49","^5X",["^ "],"~:impls",["^M",["^4P","^50","^5O","^55"]],"^5Y",["^Q",["@interface"]]],"~$track",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",246,"^8",7,"^9",246,"^:",12,"^P",["^Q",["^40",["^Q",[["~$f","~$&","^4Z"]]]]],"^5=",["^ ","^47",true,"^5>",1,"^4:",1,"^44",[["^Q",["~$f","^4Z"]]],"^P",["^Q",[["~$f","~$&","^4Z"]]],"^46",["^Q",[null]]]],"^T","~$reagent.ratom/track","^6","reagent/ratom.cljs","^:",12,"^5=",["^ ","^47",true,"^5>",1,"^4:",1,"^44",[["^Q",["~$f","^4Z"]]],"^P",["^Q",[["~$f","~$&","^4Z"]]],"^46",["^Q",[null]]],"^44",[["^Q",["~$f","^4Z"]]],"^45",null,"^5>",1,"^46",["^Q",[null]],"^8",1,"^47",true,"^5@",[["^ ","^5>",1,"^47",true,"^58","^50"]],"^7",246,"^48","^49","^9",246,"^4:",1,"^4;",true,"^P",["^Q",[["~$f","~$&","^4Z"]]]],"~$dispose!",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",346,"^8",4,"^9",346,"^:",12,"~:protocol","^5H","^19",null,"^P",["^Q",["^40",["^Q",[["^5B"]]]]]],"^63","^5H","^T","~$reagent.ratom/dispose!","^6","reagent/ratom.cljs","^:",12,"^44",["^Q",[["^5B"]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^7",345,"^48","^49","^9",346,"^4:",1,"^4;",true,"^P",["^Q",["^40",["^Q",[["^5B"]]]]],"^19",null],"~$arr-eq",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",27,"^8",17,"^9",27,"^:",23,"^58","~$boolean","^3[",true,"^P",["^Q",["^40",["^Q",[["~$x","~$y"]]]]]],"^3[",true,"^T","~$reagent.ratom/arr-eq","^6","reagent/ratom.cljs","^:",23,"^44",["^Q",[["~$x","~$y"]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^7",27,"^48","^66","^9",27,"^4:",2,"^58","^66","^4;",true,"^P",["^Q",["^40",["^Q",[["~$x","~$y"]]]]]],"~$handle-reaction-change",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",352,"^8",8,"^9",352,"^:",30,"^3[",true,"^P",["^Q",["^40",["^Q",[["^5B","~$sender","^5C","^5D"]]]]]],"^3[",true,"^T","~$reagent.ratom/handle-reaction-change","^6","reagent/ratom.cljs","^:",30,"^44",["^Q",[["^5B","^69","^5C","^5D"]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^7",352,"^48","^49","^9",352,"^4:",4,"^4;",true,"^P",["^Q",["^40",["^Q",[["^5B","^69","^5C","^5D"]]]]]],"~$run",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",350,"^8",4,"^9",350,"^:",7,"^63","^5G","^19",null,"^P",["^Q",["^40",["^Q",[["^5B"]]]]]],"^63","^5G","^T","~$reagent.ratom/run","^6","reagent/ratom.cljs","^:",7,"^44",["^Q",[["^5B"]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^7",349,"^48","^49","^9",350,"^4:",1,"^4;",true,"^P",["^Q",["^40",["^Q",[["^5B"]]]]],"^19",null],"~$add-on-dispose!",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",347,"^8",4,"^9",347,"^:",19,"^63","^5H","^19",null,"^P",["^Q",["^40",["^Q",[["^5B","~$f"]]]]]],"^63","^5H","^T","~$reagent.ratom/add-on-dispose!","^6","reagent/ratom.cljs","^:",19,"^44",["^Q",[["^5B","~$f"]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^7",345,"^48","^49","^9",347,"^4:",2,"^4;",true,"^P",["^Q",["^40",["^Q",[["^5B","~$f"]]]]],"^19",null],"~$temp-reaction",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",523,"^8",16,"^9",523,"^:",29,"^3[",true],"^3[",true,"^T","~$reagent.ratom/temp-reaction","^6","reagent/ratom.cljs","^:",29,"^8",1,"^7",523,"^9",523,"^58","^5O"],"~$make-track!",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",239,"^8",7,"^9",239,"^:",18,"^P",["^Q",["^40",["^Q",[["~$f","^4Z"]]]]]],"^T","~$reagent.ratom/make-track!","^6","reagent/ratom.cljs","^:",18,"^44",["^Q",[["~$f","^4Z"]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^7",239,"^48","^49","^9",239,"^4:",2,"^4;",true,"^P",["^Q",["^40",["^Q",[["~$f","^4Z"]]]]]],"~$generation",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",12,"^8",20,"^9",12,"^:",30,"^3[",true],"^3[",true,"^T","~$reagent.ratom/generation","^6","reagent/ratom.cljs","^:",30,"^8",1,"^7",12,"^9",12,"^58","~$number"],"~$run-in-reaction",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",526,"^8",7,"^9",526,"^:",22,"^P",["^Q",["^40",["^Q",[["~$f","^1?","~$key","^6;","^42"]]]]],"^19","Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`."],"^T","~$reagent.ratom/run-in-reaction","^6","reagent/ratom.cljs","^:",22,"^44",["^Q",[["~$f","^1?","^6G","^6;","^42"]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^7",526,"^48","^49","^9",526,"^4:",5,"^4;",true,"^P",["^Q",["^40",["^Q",[["~$f","^1?","^6G","^6;","^42"]]]]],"^19","Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`."],"~$IDisposable",["^ ","^5",["^ ","^5V",true,"^6","reagent/ratom.cljs","^:",25,"^8",14,"^7",345,"^5W",["^ ","^5@",["^ ","^62",[["^5B"]],"^6=",[["^5B","~$f"]]]],"^9",345,"^5X",["^ ","~:dispose!",["^ ","^T","^62","^P",["^Q",[["^5B"]]],"^19",null],"~:add-on-dispose!",["^ ","^T","^6=","^P",["^Q",[["^5B","~$f"]]],"^19",null]],"^5Y",["^Q",["@interface"]]],"^5V",true,"^T","^5H","^6","reagent/ratom.cljs","^:",25,"^8",1,"^7",345,"^5W",["^ ","^5@",["^ ","^62",[["^5B"]],"^6=",[["^5B","~$f"]]]],"^5Z",null,"^9",345,"^58","^49","^5X",["^ ","^6J",["^ ","^T","^62","^P",["^Q",[["^5B"]]],"^19",null],"^6K",["^ ","^T","^6=","^P",["^Q",[["^5B","~$f"]]],"^19",null]],"^5[",["^M",["^5O"]],"^5Y",["^Q",["@interface"]]],"~$check-watches",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",73,"^8",8,"^9",73,"^:",21,"^3[",true,"^P",["^Q",["^40",["^Q",[["^5C","^5D"]]]]]],"^3[",true,"^T","~$reagent.ratom/check-watches","^6","reagent/ratom.cljs","^:",21,"^44",["^Q",[["^5C","^5D"]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^7",73,"^9",73,"^4:",2,"^4;",true,"^P",["^Q",["^40",["^Q",[["^5C","^5D"]]]]]],"~$with-let-destroy",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",332,"^8",7,"^9",332,"^:",23,"^P",["^Q",["^40",["^Q",[["~$v"]]]]]],"^T","~$reagent.ratom/with-let-destroy","^6","reagent/ratom.cljs","^:",23,"^44",["^Q",[["~$v"]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^7",332,"^48",["^M",["^49","^4T"]],"^9",332,"^4:",1,"^4;",true,"^P",["^Q",["^40",["^Q",[["~$v"]]]]]],"~$make-reaction",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",514,"^8",7,"^9",514,"^:",20,"^P",["^Q",["^40",["^Q",[["~$f","~$&",["^ ","^5:",["^5L","~$on-set","~$on-dispose"]]]]]]],"^5=",["^ ","^47",true,"^5>",1,"^4:",1,"^44",[["^Q",["~$f",["^ ","^5:",["^5L","^6Q","^6R"]]]]],"^P",["^Q",[["~$f","~$&",["^ ","^5:",["^5L","^6Q","^6R"]]]]],"^46",["^Q",[null]]]],"^T","~$reagent.ratom/make-reaction","^6","reagent/ratom.cljs","^:",20,"^5=",["^ ","^47",true,"^5>",1,"^4:",1,"^44",[["^Q",["~$f",["^ ","^5:",["^5L","^6Q","^6R"]]]]],"^P",["^Q",[["~$f","~$&",["^ ","^5:",["^5L","^6Q","^6R"]]]]],"^46",["^Q",[null]]],"^44",[["^Q",["~$f",["^ ","^5:",["^5L","^6Q","^6R"]]]]],"^45",null,"^5>",1,"^46",["^Q",[null]],"^8",1,"^47",true,"^5@",[["^ ","^5>",1,"^47",true,"^58","^5O"]],"^7",514,"^48","^49","^9",514,"^4:",1,"^4;",true,"^P",["^Q",[["~$f","~$&",["^ ","^5:",["^5L","^6Q","^6R"]]]]]],"~$add-w",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",78,"^8",8,"^9",78,"^:",13,"^3[",true,"^P",["^Q",["^40",["^Q",[["^5B","^6G","~$f"]]]]]],"^3[",true,"^T","~$reagent.ratom/add-w","^6","reagent/ratom.cljs","^:",13,"^44",["^Q",[["^5B","^6G","~$f"]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^7",78,"^9",78,"^4:",3,"^4;",true,"^P",["^Q",["^40",["^Q",[["^5B","^6G","~$f"]]]]]],"~$Reaction",["^ ","^52",8,"^4=",["^M",["^4>","^4?","^4@","^4A","^4B","^4C","^4D","^4E","^5G","^5H","^4F","^4G"]],"^T","^5O","^6","reagent/ratom.cljs","^:",18,"^56",true,"^8",10,"^7",364,"^57",false,"^9",364,"^58","^59","^4N",["^M",["^4>","^4?","^4@","^4A","^4C","^4D","^4F","^4G"]]],"~$flush!",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",120,"^8",7,"^9",120,"^:",13,"^P",["^Q",["^40",["^Q",[[]]]]]],"^T","~$reagent.ratom/flush!","^6","reagent/ratom.cljs","^:",13,"^44",["^Q",[[]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^7",120,"^48","^4T","^9",120,"^4:",0,"^4;",true,"^P",["^Q",["^40",["^Q",[[]]]]]],"~$RCursor",["^ ","^52",5,"^4=",["^M",["^4>","^4?","^4@","^4A","^4B","^4C","^4D","^4E","^4F","^4G"]],"^T","^4P","^6","reagent/ratom.cljs","^:",17,"^56",true,"^8",10,"^7",256,"^57",false,"^9",256,"^58","^59","^4N",["^M",["^4>","^4?","^4@","^4A","^4C","^4D","^4F","^4G"]]],"~$cached-reaction",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",191,"^8",8,"^9",191,"^:",23,"^3[",true,"^P",["^Q",["^40",["^Q",[["~$f","~$o","~$k","^1?","~$destroy"]]]]]],"^3[",true,"^T","~$reagent.ratom/cached-reaction","^6","reagent/ratom.cljs","^:",23,"^44",["^Q",[["~$f","~$o","~$k","^1?","^6["]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^7",191,"^48","^49","^9",191,"^4:",5,"^4;",true,"^P",["^Q",["^40",["^Q",[["~$f","~$o","~$k","^1?","^6["]]]]]],"~$Track",["^ ","^52",3,"^4=",["^M",["^4@","^4A","^4E","^4F","^4G"]],"^T","^50","^6","reagent/ratom.cljs","^:",15,"^56",true,"^8",10,"^7",215,"^57",false,"^9",215,"^58","^59","^4N",["^M",["^4@","^4A","^4F","^4G"]]],"~$debug",["^ ","^T","~$reagent.ratom/debug","^6","reagent/ratom.cljs","^7",11,"^8",1,"^9",11,"^:",24,"^58","^66","^5",["^ ","^6","reagent/ratom.cljs","^7",11,"^8",19,"^9",11,"^:",24,"^58","^66"]],"~$-running",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",13,"^8",20,"^9",13,"^:",28,"^3[",true],"^3[",true,"^T","~$reagent.ratom/-running","^6","reagent/ratom.cljs","^:",28,"^8",1,"^7",13,"^9",13,"^58","~$cljs.core/Atom"],"~$cursor",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",318,"^8",7,"^9",318,"^:",13,"^P",["^Q",["^40",["^Q",[["~$src","^4K"]]]]]],"^T","~$reagent.ratom/cursor","^6","reagent/ratom.cljs","^:",13,"^44",["^Q",[["^78","^4K"]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^7",318,"^48","^4P","^9",318,"^4:",2,"^4;",true,"^P",["^Q",["^40",["^Q",[["^78","^4K"]]]]]],"~$Wrapper",["^ ","^52",4,"^4=",["^M",["^4>","^4?","^4@","^4C","^4D","^4F","^4G"]],"^T","^5T","^6","reagent/ratom.cljs","^:",17,"^56",true,"^8",10,"^7",553,"^57",false,"^9",553,"^58","^59","^4N",["^M",["^4>","^4?","^4@","^4C","^4D","^4F","^4G"]]],"~$running",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",21,"^8",7,"^9",21,"^:",14,"^P",["^Q",["^40",["^Q",[[]]]]]],"^T","~$reagent.ratom/running","^6","reagent/ratom.cljs","^:",14,"^44",["^Q",[[]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^7",21,"^48","^49","^9",21,"^4:",0,"^4;",true,"^P",["^Q",["^40",["^Q",[[]]]]]],"~$IRunnable",["^ ","^5",["^ ","^5V",true,"^6","reagent/ratom.cljs","^:",23,"^8",14,"^7",349,"^5W",["^ ","^5@",["^ ","^6;",[["^5B"]]]],"^9",349,"^5X",["^ ","~:run",["^ ","^T","^6;","^P",["^Q",[["^5B"]]],"^19",null]],"^5Y",["^Q",["@interface"]]],"^5V",true,"^T","^5G","^6","reagent/ratom.cljs","^:",23,"^8",1,"^7",349,"^5W",["^ ","^5@",["^ ","^6;",[["^5B"]]]],"^5Z",null,"^9",349,"^58","^49","^5X",["^ ","^7>",["^ ","^T","^6;","^P",["^Q",[["^5B"]]],"^19",null]],"^5[",["^M",["^5O"]],"^5Y",["^Q",["@interface"]]],"~$reactive?",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",15,"^8",16,"^9",15,"^:",25,"^58","^66","^P",["^Q",["^40",["^Q",[[]]]]]],"^T","~$reagent.ratom/reactive?","^6","reagent/ratom.cljs","^:",25,"^44",["^Q",[[]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^7",15,"^48","^66","^9",15,"^4:",0,"^58","^66","^4;",true,"^P",["^Q",["^40",["^Q",[[]]]]]],"~$deref-capture",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",43,"^8",8,"^9",43,"^:",21,"^3[",true,"^P",["^Q",["^40",["^Q",[["~$f","~$r"]]]]],"^19","Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n   `deref`ed atoms captured during `in-context`, if any differ from the\n   `watching` field of r.  Clears the `dirty?` flag on r.\n\n   Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n   the reaction is also added to the list of watches on each ratoms f derefs."],"^3[",true,"^T","~$reagent.ratom/deref-capture","^6","reagent/ratom.cljs","^:",21,"^44",["^Q",[["~$f","~$r"]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^7",43,"^48","^49","^9",43,"^4:",2,"^4;",true,"^P",["^Q",["^40",["^Q",[["~$f","~$r"]]]]],"^19","Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n   `deref`ed atoms captured during `in-context`, if any differ from the\n   `watching` field of r.  Clears the `dirty?` flag on r.\n\n   Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n   the reaction is also added to the list of watches on each ratoms f derefs."],"~$rea-queue",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",112,"^8",20,"^9",112,"^:",29,"^3[",true],"^3[",true,"^T","~$reagent.ratom/rea-queue","^6","reagent/ratom.cljs","^:",29,"^8",1,"^7",112,"^9",112,"^58","^4T"],"~$with-let-values",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",336,"^8",7,"^9",336,"^:",22,"^P",["^Q",["^40",["^Q",[["^6G"]]]]]],"^T","~$reagent.ratom/with-let-values","^6","reagent/ratom.cljs","^:",22,"^44",["^Q",[["^6G"]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^7",336,"^48",["^M",["^49","^["]],"^9",336,"^4:",1,"^4;",true,"^P",["^Q",["^40",["^Q",[["^6G"]]]]]],"~$track!",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",250,"^8",7,"^9",250,"^:",13,"^P",["^Q",["^40",["^Q",[["~$f","~$&","^4Z"]]]]],"^5=",["^ ","^47",true,"^5>",1,"^4:",1,"^44",[["^Q",["~$f","^4Z"]]],"^P",["^Q",[["~$f","~$&","^4Z"]]],"^46",["^Q",[null]]]],"^T","~$reagent.ratom/track!","^6","reagent/ratom.cljs","^:",13,"^5=",["^ ","^47",true,"^5>",1,"^4:",1,"^44",[["^Q",["~$f","^4Z"]]],"^P",["^Q",[["~$f","~$&","^4Z"]]],"^46",["^Q",[null]]],"^44",[["^Q",["~$f","^4Z"]]],"^45",null,"^5>",1,"^46",["^Q",[null]],"^8",1,"^47",true,"^5@",[["^ ","^5>",1,"^47",true,"^58","^49"]],"^7",250,"^48","^49","^9",250,"^4:",1,"^4;",true,"^P",["^Q",[["~$f","~$&","^4Z"]]]],"~$*ratom-context*",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",10,"^8",20,"^9",10,"^:",35,"~:dynamic",true,"~:declared",true],"^T","~$reagent.ratom/*ratom-context*","^6","reagent/ratom.cljs","^:",35,"^8",1,"^7J",true,"^7",10,"^7K",true,"^9",10,"^58","^49"],"~$check-derefs",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",545,"^8",7,"^9",545,"^:",19,"^P",["^Q",["^40",["^Q",[["~$f"]]]]]],"^T","~$reagent.ratom/check-derefs","^6","reagent/ratom.cljs","^:",19,"^44",["^Q",[["~$f"]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^7",545,"^48","~$cljs.core/IVector","^9",545,"^4:",1,"^4;",true,"^P",["^Q",["^40",["^Q",[["~$f"]]]]]],"~$remove-w",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",83,"^8",8,"^9",83,"^:",16,"^3[",true,"^P",["^Q",["^40",["^Q",[["^5B","^6G"]]]]]],"^3[",true,"^T","~$reagent.ratom/remove-w","^6","reagent/ratom.cljs","^:",16,"^44",["^Q",[["^5B","^6G"]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^7",83,"^9",83,"^4:",2,"^4;",true,"^P",["^Q",["^40",["^Q",[["^5B","^6G"]]]]]],"~$->Wrapper",["^ ","^3Z",null,"^5",["^ ","^4=",["^M",["^4>","^4?","^4@","^4C","^4D","^4F","^4G"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"^4H","^4I","^7",553,"^9",553,"^P",["^Q",["^40",["^Q",[["^4L","~$callback","~$changed","^4M"]]]]],"^4N",["^M",["^4>","^4?","^4@","^4C","^4D","^4F","^4G"]],"^19","Positional factory function for reagent.ratom/Wrapper."],"^4=",["^M",["^4>","^4?","^4@","^4C","^4D","^4F","^4G"]],"^T","~$reagent.ratom/->Wrapper","^6","reagent/ratom.cljs","^:",17,"^44",["^Q",[["^4L","^7S","^7T","^4M"]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^4H","^4I","^7",553,"^48","^5T","^9",553,"^4:",4,"^4;",true,"^P",["^Q",["^40",["^Q",[["^4L","^7S","^7T","^4M"]]]]],"^4N",["^M",["^4>","^4?","^4@","^4C","^4D","^4F","^4G"]],"^19","Positional factory function for reagent.ratom/Wrapper."],"~$arr-len",["^ ","^3Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",24,"^8",16,"^9",24,"^:",23,"^58","^6E","^3[",true,"^P",["^Q",["^40",["^Q",[["~$x"]]]]]],"^3[",true,"^T","~$reagent.ratom/arr-len","^6","reagent/ratom.cljs","^:",23,"^44",["^Q",[["~$x"]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^7",24,"^48","^6E","^9",24,"^4:",1,"^58","^6E","^4;",true,"^P",["^Q",["^40",["^Q",[["~$x"]]]]]],"~$->RAtom",["^ ","^3Z",null,"^5",["^ ","^4=",["^M",["^4>","^4?","^4@","^4A","^4C","^4D","^4E","^53","^4F","^4G","^54"]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^4H","^4I","^7",136,"^9",136,"^P",["^Q",["^40",["^Q",[["^4L","^5;","^5<","^4M"]]]]],"^4N",["^M",["^4>","^4?","^4@","^4A","^4C","^4D","^53","^4F","^4G","^54"]],"^19","Positional factory function for reagent.ratom/RAtom."],"^4=",["^M",["^4>","^4?","^4@","^4A","^4C","^4D","^4E","^53","^4F","^4G","^54"]],"^T","~$reagent.ratom/->RAtom","^6","reagent/ratom.cljs","^:",15,"^44",["^Q",[["^4L","^5;","^5<","^4M"]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^4H","^4I","^7",136,"^48","^55","^9",136,"^4:",4,"^4;",true,"^P",["^Q",["^40",["^Q",[["^4L","^5;","^5<","^4M"]]]]],"^4N",["^M",["^4>","^4?","^4@","^4A","^4C","^4D","^53","^4F","^4G","^54"]],"^19","Positional factory function for reagent.ratom/RAtom."],"~$->Track",["^ ","^3Z",null,"^5",["^ ","^4=",["^M",["^4@","^4A","^4E","^4F","^4G"]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^4H","^4I","^7",215,"^9",215,"^P",["^Q",["^40",["^Q",[["~$f","^4Z","^X"]]]]],"^4N",["^M",["^4@","^4A","^4F","^4G"]],"^19","Positional factory function for reagent.ratom/Track."],"^4=",["^M",["^4@","^4A","^4E","^4F","^4G"]],"^T","~$reagent.ratom/->Track","^6","reagent/ratom.cljs","^:",15,"^44",["^Q",[["~$f","^4Z","^X"]]],"^45",null,"^46",["^Q",[null,null]],"^8",1,"^47",false,"^4H","^4I","^7",215,"^48","^50","^9",215,"^4:",3,"^4;",true,"^P",["^Q",["^40",["^Q",[["~$f","^4Z","^X"]]]]],"^4N",["^M",["^4@","^4A","^4F","^4G"]],"^19","Positional factory function for reagent.ratom/Track."]],"^1I",["^ ","^D","^D","^F","^F","^1A","^1A"],"~:cljs.analyzer/constants",["^ ","^1G",["^M",["~:on-set","^5M","^5K","^66","^X","^7S","^5","~:else","^4K","^4Z","~:validator","^4M","^5;","^5<","^5I","~:no-cache","^4J","^4L","~:auto-run","~:on-dispose","^58","~:mutable","^7T","^5L","^5J","~$f"]],"~:order",["^4L","^87","^5;","^5<","^4M","^5","^83","^82","^86","~$f","^4Z","^X","^85","^4J","^4K","^81","^84","^5I","^58","^66","^5J","^5K","^5L","^5M","^7S","^7T"]],"^1R",["^ ","^1I",["^M",[]],"^1H",["^M",[]]],"^1S",["^ "],"^1T",["^1B","^1A","^1>","^F","^1C","^1D","^1@"]],"^V","^D","~:ns-specs",["^ "],"~:ns-spec-vars",["^M",[]],"~:compiler-options",["^26",[["^8;","~:static-fns"],true,["^8;","~:shadow-tweaks"],null,["^8;","~:elide-asserts"],false,["^8;","~:optimize-constants"],null,["^8;","^1Y"],null,["^8;","~:external-config"],null,["^8;","~:tooling-config"],null,["^8;","~:emit-constants"],null,["^8;","~:load-tests"],null,["^8;","~:form-size-threshold"],null,["^8;","~:infer-externs"],"~:auto",["^8;","^1["],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^8;","~:fn-invoke-direct"],null,["^8;","~:source-map"],"/dev/null"]]]