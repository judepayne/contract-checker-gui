["^ ","~:output",["^ ","~:js","goog.provide('reagent.impl.template');\r\ngoog.require('cljs.core');\r\nvar module$node_modules$react$index=shadow.js.require(\"module$node_modules$react$index\", {});\r\ngoog.require('clojure.string');\r\ngoog.require('clojure.walk');\r\ngoog.require('reagent.impl.util');\r\ngoog.require('reagent.impl.component');\r\ngoog.require('reagent.impl.batching');\r\ngoog.require('reagent.ratom');\r\ngoog.require('reagent.debug');\r\ngoog.require('goog.object');\r\n/**\r\n * Regular expression that parses a CSS-style id and class\r\n *           from a tag name.\r\n */\r\nreagent.impl.template.re_tag = /([^\\s\\.#]+)(?:#([^\\s\\.#]+))?(?:\\.([^\\s#]+))?/;\r\n\r\n/**\r\n* @constructor\r\n*/\r\nreagent.impl.template.NativeWrapper = (function (tag,id,className){\r\nthis.tag = tag;\r\nthis.id = id;\r\nthis.className = className;\r\n});\r\n\r\n(reagent.impl.template.NativeWrapper.getBasis = (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"tag\",\"tag\",350170304,null),new cljs.core.Symbol(null,\"id\",\"id\",252129435,null),new cljs.core.Symbol(null,\"className\",\"className\",-342755530,null)], null);\r\n}));\r\n\r\n(reagent.impl.template.NativeWrapper.cljs$lang$type = true);\r\n\r\n(reagent.impl.template.NativeWrapper.cljs$lang$ctorStr = \"reagent.impl.template/NativeWrapper\");\r\n\r\n(reagent.impl.template.NativeWrapper.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__,opt__4430__auto__){\r\nreturn cljs.core._write(writer__4429__auto__,\"reagent.impl.template/NativeWrapper\");\r\n}));\r\n\r\n/**\r\n * Positional factory function for reagent.impl.template/NativeWrapper.\r\n */\r\nreagent.impl.template.__GT_NativeWrapper = (function reagent$impl$template$__GT_NativeWrapper(tag,id,className){\r\nreturn (new reagent.impl.template.NativeWrapper(tag,id,className));\r\n});\r\n\r\nreagent.impl.template.hiccup_tag_QMARK_ = (function reagent$impl$template$hiccup_tag_QMARK_(x){\r\nreturn ((reagent.impl.util.named_QMARK_(x)) || (typeof x === 'string'));\r\n});\r\nreagent.impl.template.valid_tag_QMARK_ = (function reagent$impl$template$valid_tag_QMARK_(x){\r\nreturn ((reagent.impl.template.hiccup_tag_QMARK_(x)) || (cljs.core.ifn_QMARK_(x)) || ((x instanceof reagent.impl.template.NativeWrapper)));\r\n});\r\nreagent.impl.template.prop_name_cache = ({\"class\": \"className\", \"for\": \"htmlFor\", \"charset\": \"charSet\"});\r\nreagent.impl.template.cache_get = (function reagent$impl$template$cache_get(o,k){\r\nif(o.hasOwnProperty(k)){\r\nreturn goog.object.get(o,k);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nreagent.impl.template.cached_prop_name = (function reagent$impl$template$cached_prop_name(k){\r\nif(reagent.impl.util.named_QMARK_(k)){\r\nvar temp__5737__auto__ = reagent.impl.template.cache_get(reagent.impl.template.prop_name_cache,cljs.core.name(k));\r\nif((temp__5737__auto__ == null)){\r\nvar v = reagent.impl.util.dash_to_prop_name(k);\r\nvar G__35794_35929 = reagent.impl.template.prop_name_cache;\r\nvar G__35795_35930 = cljs.core.name(k);\r\nvar G__35796_35931 = v;\r\ngoog.object.set(G__35794_35929,G__35795_35930,G__35796_35931);\r\n\r\nreturn v;\r\n} else {\r\nvar k_SINGLEQUOTE_ = temp__5737__auto__;\r\nreturn k_SINGLEQUOTE_;\r\n}\r\n} else {\r\nreturn k;\r\n}\r\n});\r\nreagent.impl.template.js_val_QMARK_ = (function reagent$impl$template$js_val_QMARK_(x){\r\nreturn (!((\"object\" === goog.typeOf(x))));\r\n});\r\nreagent.impl.template.kv_conv = (function reagent$impl$template$kv_conv(o,k,v){\r\nvar G__35797 = o;\r\nvar G__35798_35932 = G__35797;\r\nvar G__35799_35933 = reagent.impl.template.cached_prop_name(k);\r\nvar G__35800_35934 = (reagent.impl.template.convert_prop_value.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.template.convert_prop_value.cljs$core$IFn$_invoke$arity$1(v) : reagent.impl.template.convert_prop_value.call(null,v));\r\ngoog.object.set(G__35798_35932,G__35799_35933,G__35800_35934);\r\n\r\nreturn G__35797;\r\n});\r\nreagent.impl.template.convert_prop_value = (function reagent$impl$template$convert_prop_value(x){\r\nif(reagent.impl.template.js_val_QMARK_(x)){\r\nreturn x;\r\n} else {\r\nif(reagent.impl.util.named_QMARK_(x)){\r\nreturn cljs.core.name(x);\r\n} else {\r\nif(cljs.core.map_QMARK_(x)){\r\nreturn cljs.core.reduce_kv(reagent.impl.template.kv_conv,({}),x);\r\n} else {\r\nif(cljs.core.coll_QMARK_(x)){\r\nreturn cljs.core.clj__GT_js(x);\r\n} else {\r\nif(cljs.core.ifn_QMARK_(x)){\r\nreturn (function() { \r\nvar G__35935__delegate = function (args){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(x,args);\r\n};\r\nvar G__35935 = function (var_args){\r\nvar args = null;\r\nif (arguments.length > 0) {\r\nvar G__35936__i = 0, G__35936__a = new Array(arguments.length -  0);\r\nwhile (G__35936__i < G__35936__a.length) {G__35936__a[G__35936__i] = arguments[G__35936__i + 0]; ++G__35936__i;}\r\n  args = new cljs.core.IndexedSeq(G__35936__a,0,null);\r\n} \r\nreturn G__35935__delegate.call(this,args);};\r\nG__35935.cljs$lang$maxFixedArity = 0;\r\nG__35935.cljs$lang$applyTo = (function (arglist__35937){\r\nvar args = cljs.core.seq(arglist__35937);\r\nreturn G__35935__delegate(args);\r\n});\r\nG__35935.cljs$core$IFn$_invoke$arity$variadic = G__35935__delegate;\r\nreturn G__35935;\r\n})()\r\n;\r\n} else {\r\nreturn cljs.core.clj__GT_js(x);\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\nreagent.impl.template.custom_prop_name_cache = ({});\r\nreagent.impl.template.cached_custom_prop_name = (function reagent$impl$template$cached_custom_prop_name(k){\r\nif(reagent.impl.util.named_QMARK_(k)){\r\nvar temp__5737__auto__ = reagent.impl.template.cache_get(reagent.impl.template.custom_prop_name_cache,cljs.core.name(k));\r\nif((temp__5737__auto__ == null)){\r\nvar v = reagent.impl.util.dash_to_prop_name(k);\r\nvar G__35805_35938 = reagent.impl.template.custom_prop_name_cache;\r\nvar G__35806_35939 = cljs.core.name(k);\r\nvar G__35807_35940 = v;\r\ngoog.object.set(G__35805_35938,G__35806_35939,G__35807_35940);\r\n\r\nreturn v;\r\n} else {\r\nvar k_SINGLEQUOTE_ = temp__5737__auto__;\r\nreturn k_SINGLEQUOTE_;\r\n}\r\n} else {\r\nreturn k;\r\n}\r\n});\r\nreagent.impl.template.custom_kv_conv = (function reagent$impl$template$custom_kv_conv(o,k,v){\r\nvar G__35808 = o;\r\nvar G__35809_35946 = G__35808;\r\nvar G__35810_35947 = reagent.impl.template.cached_custom_prop_name(k);\r\nvar G__35811_35948 = reagent.impl.template.convert_prop_value(v);\r\ngoog.object.set(G__35809_35946,G__35810_35947,G__35811_35948);\r\n\r\nreturn G__35808;\r\n});\r\nreagent.impl.template.convert_custom_prop_value = (function reagent$impl$template$convert_custom_prop_value(x){\r\nif(reagent.impl.template.js_val_QMARK_(x)){\r\nreturn x;\r\n} else {\r\nif(reagent.impl.util.named_QMARK_(x)){\r\nreturn cljs.core.name(x);\r\n} else {\r\nif(cljs.core.map_QMARK_(x)){\r\nreturn cljs.core.reduce_kv(reagent.impl.template.custom_kv_conv,({}),x);\r\n} else {\r\nif(cljs.core.coll_QMARK_(x)){\r\nreturn cljs.core.clj__GT_js(x);\r\n} else {\r\nif(cljs.core.ifn_QMARK_(x)){\r\nreturn (function() { \r\nvar G__35962__delegate = function (args){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(x,args);\r\n};\r\nvar G__35962 = function (var_args){\r\nvar args = null;\r\nif (arguments.length > 0) {\r\nvar G__35963__i = 0, G__35963__a = new Array(arguments.length -  0);\r\nwhile (G__35963__i < G__35963__a.length) {G__35963__a[G__35963__i] = arguments[G__35963__i + 0]; ++G__35963__i;}\r\n  args = new cljs.core.IndexedSeq(G__35963__a,0,null);\r\n} \r\nreturn G__35962__delegate.call(this,args);};\r\nG__35962.cljs$lang$maxFixedArity = 0;\r\nG__35962.cljs$lang$applyTo = (function (arglist__35964){\r\nvar args = cljs.core.seq(arglist__35964);\r\nreturn G__35962__delegate(args);\r\n});\r\nG__35962.cljs$core$IFn$_invoke$arity$variadic = G__35962__delegate;\r\nreturn G__35962;\r\n})()\r\n;\r\n} else {\r\nreturn cljs.core.clj__GT_js(x);\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\n/**\r\n * Takes the id and class from tag keyword, and adds them to the\r\n *   other props. Parsed tag is JS object with :id and :class properties.\r\n */\r\nreagent.impl.template.set_id_class = (function reagent$impl$template$set_id_class(props,id_class){\r\nvar id = id_class.id;\r\nvar class$ = id_class.className;\r\nvar G__35822 = props;\r\nvar G__35822__$1 = (((((!((id == null)))) && ((new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(props) == null))))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__35822,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),id):G__35822);\r\nif(cljs.core.truth_(class$)){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__35822__$1,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$2(class$,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996).cljs$core$IFn$_invoke$arity$1(props)));\r\n} else {\r\nreturn G__35822__$1;\r\n}\r\n});\r\nreagent.impl.template.convert_props = (function reagent$impl$template$convert_props(props,id_class){\r\nvar class$ = new cljs.core.Keyword(null,\"class\",\"class\",-2030961996).cljs$core$IFn$_invoke$arity$1(props);\r\nvar props__$1 = reagent.impl.template.set_id_class((function (){var G__35824 = props;\r\nif(cljs.core.truth_(class$)){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__35824,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$1(class$));\r\n} else {\r\nreturn G__35824;\r\n}\r\n})(),id_class);\r\nif(cljs.core.truth_(id_class.custom)){\r\nreturn reagent.impl.template.convert_custom_prop_value(props__$1);\r\n} else {\r\nreturn reagent.impl.template.convert_prop_value(props__$1);\r\n}\r\n});\r\nif((typeof reagent !== 'undefined') && (typeof reagent.impl !== 'undefined') && (typeof reagent.impl.template !== 'undefined') && (typeof reagent.impl.template.find_dom_node !== 'undefined')){\r\n} else {\r\nreagent.impl.template.find_dom_node = null;\r\n}\r\nreagent.impl.template.these_inputs_have_selection_api = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [\"url\",null,\"tel\",null,\"text\",null,\"textarea\",null,\"password\",null,\"search\",null], null), null);\r\nreagent.impl.template.has_selection_api_QMARK_ = (function reagent$impl$template$has_selection_api_QMARK_(input_type){\r\nreturn cljs.core.contains_QMARK_(reagent.impl.template.these_inputs_have_selection_api,input_type);\r\n});\r\nreagent.impl.template.input_node_set_value = (function reagent$impl$template$input_node_set_value(node,rendered_value,dom_value,component,p__35825){\r\nvar map__35826 = p__35825;\r\nvar map__35826__$1 = (((((!((map__35826 == null))))?(((((map__35826.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__35826.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__35826):map__35826);\r\nvar on_write = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__35826__$1,new cljs.core.Keyword(null,\"on-write\",\"on-write\",31519475));\r\nif((!((((node === document.activeElement)) && (reagent.impl.template.has_selection_api_QMARK_(node.type)) && (typeof rendered_value === 'string') && (typeof dom_value === 'string'))))){\r\n(component.cljsDOMValue = rendered_value);\r\n\r\n(node.value = rendered_value);\r\n\r\nif(cljs.core.fn_QMARK_(on_write)){\r\nreturn (on_write.cljs$core$IFn$_invoke$arity$1 ? on_write.cljs$core$IFn$_invoke$arity$1(rendered_value) : on_write.call(null,rendered_value));\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nvar node_value = node.value;\r\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(node_value,dom_value)){\r\nreturn reagent.impl.batching.do_after_render((function (){\r\nreturn (reagent.impl.template.input_component_set_value.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.template.input_component_set_value.cljs$core$IFn$_invoke$arity$1(component) : reagent.impl.template.input_component_set_value.call(null,component));\r\n}));\r\n} else {\r\nvar existing_offset_from_end = (cljs.core.count(node_value) - node.selectionStart);\r\nvar new_cursor_offset = (cljs.core.count(rendered_value) - existing_offset_from_end);\r\n(component.cljsDOMValue = rendered_value);\r\n\r\n(node.value = rendered_value);\r\n\r\nif(cljs.core.fn_QMARK_(on_write)){\r\n(on_write.cljs$core$IFn$_invoke$arity$1 ? on_write.cljs$core$IFn$_invoke$arity$1(rendered_value) : on_write.call(null,rendered_value));\r\n} else {\r\n}\r\n\r\n(node.selectionStart = new_cursor_offset);\r\n\r\nreturn (node.selectionEnd = new_cursor_offset);\r\n}\r\n}\r\n});\r\nreagent.impl.template.input_component_set_value = (function reagent$impl$template$input_component_set_value(this$){\r\nif(cljs.core.truth_(this$.cljsInputLive)){\r\n(this$.cljsInputDirty = false);\r\n\r\nvar rendered_value = this$.cljsRenderedValue;\r\nvar dom_value = this$.cljsDOMValue;\r\nvar node = (reagent.impl.template.find_dom_node.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.template.find_dom_node.cljs$core$IFn$_invoke$arity$1(this$) : reagent.impl.template.find_dom_node.call(null,this$));\r\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(rendered_value,dom_value)){\r\nreturn reagent.impl.template.input_node_set_value(node,rendered_value,dom_value,this$,cljs.core.PersistentArrayMap.EMPTY);\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nreagent.impl.template.input_handle_change = (function reagent$impl$template$input_handle_change(this$,on_change,e){\r\n(this$.cljsDOMValue = e.target.value);\r\n\r\nif(cljs.core.truth_(this$.cljsInputDirty)){\r\n} else {\r\n(this$.cljsInputDirty = true);\r\n\r\nreagent.impl.batching.do_after_render((function (){\r\nreturn reagent.impl.template.input_component_set_value(this$);\r\n}));\r\n}\r\n\r\nreturn (on_change.cljs$core$IFn$_invoke$arity$1 ? on_change.cljs$core$IFn$_invoke$arity$1(e) : on_change.call(null,e));\r\n});\r\nreagent.impl.template.input_render_setup = (function reagent$impl$template$input_render_setup(this$,jsprops){\r\nif(cljs.core.truth_((((!((jsprops == null))))?(function (){var and__4174__auto__ = jsprops.hasOwnProperty(\"onChange\");\r\nif(cljs.core.truth_(and__4174__auto__)){\r\nreturn jsprops.hasOwnProperty(\"value\");\r\n} else {\r\nreturn and__4174__auto__;\r\n}\r\n})():false))){\r\nif(cljs.core.truth_(reagent.impl.template.find_dom_node)){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",\"reagent.dom needs to be loaded for controlled input to work\",\"\\n\",\"find-dom-node\"].join('')));\r\n}\r\n\r\nvar v = jsprops.value;\r\nvar value = (((v == null))?\"\":v);\r\nvar on_change = jsprops.onChange;\r\nif(cljs.core.truth_(this$.cljsInputLive)){\r\n} else {\r\n(this$.cljsInputLive = true);\r\n\r\n(this$.cljsDOMValue = value);\r\n}\r\n\r\n(this$.cljsRenderedValue = value);\r\n\r\ndelete jsprops[\"value\"];\r\n\r\n(jsprops.defaultValue = value);\r\n\r\nreturn (jsprops.onChange = (function (p1__35828_SHARP_){\r\nreturn reagent.impl.template.input_handle_change(this$,on_change,p1__35828_SHARP_);\r\n}));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nreagent.impl.template.input_unmount = (function reagent$impl$template$input_unmount(this$){\r\nreturn (this$.cljsInputLive = null);\r\n});\r\nreagent.impl.template.input_component_QMARK_ = (function reagent$impl$template$input_component_QMARK_(x){\r\nvar G__35837 = x;\r\nswitch (G__35837) {\r\ncase \"input\":\r\ncase \"textarea\":\r\nreturn true;\r\n\r\nbreak;\r\ndefault:\r\nreturn false;\r\n\r\n}\r\n});\r\nreagent.impl.template.reagent_input_class = null;\r\nreagent.impl.template.input_spec = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"display-name\",\"display-name\",694513143),\"ReagentInput\",new cljs.core.Keyword(null,\"component-did-update\",\"component-did-update\",-1468549173),reagent.impl.template.input_component_set_value,new cljs.core.Keyword(null,\"component-will-unmount\",\"component-will-unmount\",-2058314698),reagent.impl.template.input_unmount,new cljs.core.Keyword(null,\"reagent-render\",\"reagent-render\",-985383853),(function (argv,component,jsprops,first_child){\r\nvar this$ = reagent.impl.component._STAR_current_component_STAR_;\r\nreagent.impl.template.input_render_setup(this$,jsprops);\r\n\r\nreturn (reagent.impl.template.make_element.cljs$core$IFn$_invoke$arity$4 ? reagent.impl.template.make_element.cljs$core$IFn$_invoke$arity$4(argv,component,jsprops,first_child) : reagent.impl.template.make_element.call(null,argv,component,jsprops,first_child));\r\n})], null);\r\nreagent.impl.template.reagent_input = (function reagent$impl$template$reagent_input(){\r\nif((reagent.impl.template.reagent_input_class == null)){\r\n(reagent.impl.template.reagent_input_class = reagent.impl.component.create_class(reagent.impl.template.input_spec));\r\n} else {\r\n}\r\n\r\nreturn reagent.impl.template.reagent_input_class;\r\n});\r\n\r\n/**\r\n* @constructor\r\n*/\r\nreagent.impl.template.HiccupTag = (function (tag,id,className,custom){\r\nthis.tag = tag;\r\nthis.id = id;\r\nthis.className = className;\r\nthis.custom = custom;\r\n});\r\n\r\n(reagent.impl.template.HiccupTag.getBasis = (function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"tag\",\"tag\",350170304,null),new cljs.core.Symbol(null,\"id\",\"id\",252129435,null),new cljs.core.Symbol(null,\"className\",\"className\",-342755530,null),new cljs.core.Symbol(null,\"custom\",\"custom\",1980683475,null)], null);\r\n}));\r\n\r\n(reagent.impl.template.HiccupTag.cljs$lang$type = true);\r\n\r\n(reagent.impl.template.HiccupTag.cljs$lang$ctorStr = \"reagent.impl.template/HiccupTag\");\r\n\r\n(reagent.impl.template.HiccupTag.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__,opt__4430__auto__){\r\nreturn cljs.core._write(writer__4429__auto__,\"reagent.impl.template/HiccupTag\");\r\n}));\r\n\r\n/**\r\n * Positional factory function for reagent.impl.template/HiccupTag.\r\n */\r\nreagent.impl.template.__GT_HiccupTag = (function reagent$impl$template$__GT_HiccupTag(tag,id,className,custom){\r\nreturn (new reagent.impl.template.HiccupTag(tag,id,className,custom));\r\n});\r\n\r\nreagent.impl.template.parse_tag = (function reagent$impl$template$parse_tag(hiccup_tag){\r\nvar vec__35841 = cljs.core.next(cljs.core.re_matches(reagent.impl.template.re_tag,cljs.core.name(hiccup_tag)));\r\nvar tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35841,(0),null);\r\nvar id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35841,(1),null);\r\nvar className = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35841,(2),null);\r\nvar className__$1 = (((className == null))?null:clojure.string.replace(className,/\\./,\" \"));\r\nif(cljs.core.truth_(tag)){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",[\"Invalid tag: '\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccup_tag),\"'\",reagent.impl.component.comp_name()].join(''),\"\\n\",\"tag\"].join('')));\r\n}\r\n\r\nreturn reagent.impl.template.__GT_HiccupTag(tag,id,className__$1,cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((-1),tag.indexOf(\"-\")));\r\n});\r\nreagent.impl.template.try_get_key = (function reagent$impl$template$try_get_key(x){\r\ntry{return cljs.core.get.cljs$core$IFn$_invoke$arity$2(x,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\r\n}catch (e35848){var e = e35848;\r\nreturn null;\r\n}});\r\nreagent.impl.template.get_key = (function reagent$impl$template$get_key(x){\r\nif(cljs.core.map_QMARK_(x)){\r\nreturn reagent.impl.template.try_get_key(x);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nreagent.impl.template.key_from_vec = (function reagent$impl$template$key_from_vec(v){\r\nvar temp__5737__auto__ = reagent.impl.template.get_key(cljs.core.meta(v));\r\nif((temp__5737__auto__ == null)){\r\nreturn reagent.impl.template.get_key(cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null));\r\n} else {\r\nvar k = temp__5737__auto__;\r\nreturn k;\r\n}\r\n});\r\nreagent.impl.template.reag_element = (function reagent$impl$template$reag_element(tag,v){\r\nvar c = reagent.impl.component.as_class(tag);\r\nvar jsprops = ({});\r\n(jsprops.argv = v);\r\n\r\nvar temp__5739__auto___36103 = reagent.impl.template.key_from_vec(v);\r\nif((temp__5739__auto___36103 == null)){\r\n} else {\r\nvar key_36108 = temp__5739__auto___36103;\r\n(jsprops.key = key_36108);\r\n}\r\n\r\nreturn module$node_modules$react$index.createElement(c,jsprops);\r\n});\r\nreagent.impl.template.fragment_element = (function reagent$impl$template$fragment_element(argv){\r\nvar props = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(argv,(1),null);\r\nvar hasprops = (((props == null)) || (cljs.core.map_QMARK_(props)));\r\nvar jsprops = (function (){var or__4185__auto__ = reagent.impl.template.convert_prop_value(((hasprops)?props:null));\r\nif(cljs.core.truth_(or__4185__auto__)){\r\nreturn or__4185__auto__;\r\n} else {\r\nreturn ({});\r\n}\r\n})();\r\nvar first_child = ((1) + ((hasprops)?(1):(0)));\r\nvar temp__5739__auto___36109 = reagent.impl.template.key_from_vec(argv);\r\nif((temp__5739__auto___36109 == null)){\r\n} else {\r\nvar key_36110 = temp__5739__auto___36109;\r\n(jsprops.key = key_36110);\r\n}\r\n\r\nreturn (reagent.impl.template.make_element.cljs$core$IFn$_invoke$arity$4 ? reagent.impl.template.make_element.cljs$core$IFn$_invoke$arity$4(argv,module$node_modules$react$index.Fragment,jsprops,first_child) : reagent.impl.template.make_element.call(null,argv,module$node_modules$react$index.Fragment,jsprops,first_child));\r\n});\r\nreagent.impl.template.adapt_react_class = (function reagent$impl$template$adapt_react_class(c){\r\nreturn reagent.impl.template.__GT_NativeWrapper(c,null,null);\r\n});\r\nreagent.impl.template.tag_name_cache = ({});\r\nreagent.impl.template.cached_parse = (function reagent$impl$template$cached_parse(x){\r\nvar temp__5737__auto__ = reagent.impl.template.cache_get(reagent.impl.template.tag_name_cache,x);\r\nif((temp__5737__auto__ == null)){\r\nvar v = reagent.impl.template.parse_tag(x);\r\ngoog.object.set(reagent.impl.template.tag_name_cache,x,v);\r\n\r\nreturn v;\r\n} else {\r\nvar s = temp__5737__auto__;\r\nreturn s;\r\n}\r\n});\r\nreagent.impl.template.native_element = (function reagent$impl$template$native_element(parsed,argv,first){\r\nvar component = parsed.tag;\r\nvar props = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(argv,first,null);\r\nvar hasprops = (((props == null)) || (cljs.core.map_QMARK_(props)));\r\nvar jsprops = (function (){var or__4185__auto__ = reagent.impl.template.convert_props(((hasprops)?props:null),parsed);\r\nif(cljs.core.truth_(or__4185__auto__)){\r\nreturn or__4185__auto__;\r\n} else {\r\nreturn ({});\r\n}\r\n})();\r\nvar first_child = (first + ((hasprops)?(1):(0)));\r\nif(reagent.impl.template.input_component_QMARK_(component)){\r\nvar G__35878 = cljs.core.with_meta(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [reagent.impl.template.reagent_input(),argv,component,jsprops,first_child], null),cljs.core.meta(argv));\r\nreturn (reagent.impl.template.as_element.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.template.as_element.cljs$core$IFn$_invoke$arity$1(G__35878) : reagent.impl.template.as_element.call(null,G__35878));\r\n} else {\r\nvar temp__5739__auto___36130 = reagent.impl.template.get_key(cljs.core.meta(argv));\r\nif((temp__5739__auto___36130 == null)){\r\n} else {\r\nvar key_36133 = temp__5739__auto___36130;\r\n(jsprops.key = key_36133);\r\n}\r\n\r\nreturn (reagent.impl.template.make_element.cljs$core$IFn$_invoke$arity$4 ? reagent.impl.template.make_element.cljs$core$IFn$_invoke$arity$4(argv,component,jsprops,first_child) : reagent.impl.template.make_element.call(null,argv,component,jsprops,first_child));\r\n}\r\n});\r\nreagent.impl.template.str_coll = (function reagent$impl$template$str_coll(coll){\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.walk.prewalk((function (x){\r\nif(cljs.core.fn_QMARK_(x)){\r\nvar n = reagent.impl.util.fun_name(x);\r\nvar G__35880 = n;\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"\",G__35880)){\r\nreturn x;\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(null,G__35880)){\r\nreturn x;\r\n} else {\r\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(n);\r\n\r\n}\r\n}\r\n} else {\r\nreturn x;\r\n}\r\n}),coll));\r\n\r\n});\r\nreagent.impl.template.hiccup_err = (function reagent$impl$template$hiccup_err(var_args){\r\nvar args__4795__auto__ = [];\r\nvar len__4789__auto___36148 = arguments.length;\r\nvar i__4790__auto___36149 = (0);\r\nwhile(true){\r\nif((i__4790__auto___36149 < len__4789__auto___36148)){\r\nargs__4795__auto__.push((arguments[i__4790__auto___36149]));\r\n\r\nvar G__36151 = (i__4790__auto___36149 + (1));\r\ni__4790__auto___36149 = G__36151;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4796__auto__ = ((((1) < args__4795__auto__.length))?(new cljs.core.IndexedSeq(args__4795__auto__.slice((1)),(0),null)):null);\r\nreturn reagent.impl.template.hiccup_err.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4796__auto__);\r\n});\r\n\r\n(reagent.impl.template.hiccup_err.cljs$core$IFn$_invoke$arity$variadic = (function (v,msg){\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,msg)),\": \",reagent.impl.template.str_coll(v),\"\\n\",reagent.impl.component.comp_name()].join('');\r\n}));\r\n\r\n(reagent.impl.template.hiccup_err.cljs$lang$maxFixedArity = (1));\r\n\r\n/** @this {Function} */\r\n(reagent.impl.template.hiccup_err.cljs$lang$applyTo = (function (seq35881){\r\nvar G__35882 = cljs.core.first(seq35881);\r\nvar seq35881__$1 = cljs.core.next(seq35881);\r\nvar self__4776__auto__ = this;\r\nreturn self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__35882,seq35881__$1);\r\n}));\r\n\r\nreagent.impl.template.vec_to_elem = (function reagent$impl$template$vec_to_elem(v){\r\nwhile(true){\r\nif((cljs.core.count(v) > (0))){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",reagent.impl.template.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(v,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Hiccup form should not be empty\"], 0)),\"\\n\",\"(pos? (count v))\"].join('')));\r\n}\r\n\r\nvar tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(0),null);\r\nif(reagent.impl.template.valid_tag_QMARK_(tag)){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",reagent.impl.template.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(v,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Invalid Hiccup form\"], 0)),\"\\n\",\"(valid-tag? tag)\"].join('')));\r\n}\r\n\r\nif(cljs.core.keyword_identical_QMARK_(new cljs.core.Keyword(null,\"<>\",\"<>\",1280186386),tag)){\r\nreturn reagent.impl.template.fragment_element(v);\r\n} else {\r\nif(reagent.impl.template.hiccup_tag_QMARK_(tag)){\r\nvar n = cljs.core.name(tag);\r\nvar pos = n.indexOf(\">\");\r\nvar G__35891 = pos;\r\nswitch (G__35891) {\r\ncase (-1):\r\nreturn reagent.impl.template.native_element(reagent.impl.template.cached_parse(n),v,(1));\r\n\r\nbreak;\r\ncase (0):\r\nvar component = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null);\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\">\",n)){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",reagent.impl.template.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(v,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Invalid Hiccup tag\"], 0)),\"\\n\",\"(= \\\">\\\" n)\"].join('')));\r\n}\r\n\r\nreturn reagent.impl.template.native_element(reagent.impl.template.__GT_HiccupTag(component,null,null,null),v,(2));\r\n\r\nbreak;\r\ndefault:\r\nvar G__36206 = cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.cljs$core$IFn$_invoke$arity$3(n,(0),pos),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.with_meta(v,null),(0),cljs.core.subs.cljs$core$IFn$_invoke$arity$2(n,(pos + (1))))], null),cljs.core.meta(v));\r\nv = G__36206;\r\ncontinue;\r\n\r\n}\r\n} else {\r\nif((tag instanceof reagent.impl.template.NativeWrapper)){\r\nreturn reagent.impl.template.native_element(tag,v,(1));\r\n} else {\r\nreturn reagent.impl.template.reag_element(tag,v);\r\n\r\n}\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\nreagent.impl.template.as_element = (function reagent$impl$template$as_element(x){\r\nif(reagent.impl.template.js_val_QMARK_(x)){\r\nreturn x;\r\n} else {\r\nif(cljs.core.vector_QMARK_(x)){\r\nreturn reagent.impl.template.vec_to_elem(x);\r\n} else {\r\nif(cljs.core.seq_QMARK_(x)){\r\nreturn (reagent.impl.template.expand_seq_check.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.template.expand_seq_check.cljs$core$IFn$_invoke$arity$1(x) : reagent.impl.template.expand_seq_check.call(null,x));\r\n\r\n} else {\r\nif(reagent.impl.util.named_QMARK_(x)){\r\nreturn cljs.core.name(x);\r\n} else {\r\nif((((!((x == null))))?(((((x.cljs$lang$protocol_mask$partition0$ & (2147483648))) || ((cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IPrintWithWriter$))))?true:(((!x.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,x):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,x))){\r\nreturn cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([x], 0));\r\n} else {\r\nreturn x;\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\n(reagent.impl.component.as_element = reagent.impl.template.as_element);\r\nreagent.impl.template.expand_seq = (function reagent$impl$template$expand_seq(s){\r\nreturn cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(reagent.impl.template.as_element,s));\r\n});\r\nreagent.impl.template.expand_seq_dev = (function reagent$impl$template$expand_seq_dev(s,o){\r\nreturn cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (val){\r\nif(((cljs.core.vector_QMARK_(val)) && ((reagent.impl.template.key_from_vec(val) == null)))){\r\n(o.no_key = true);\r\n} else {\r\n}\r\n\r\nreturn reagent.impl.template.as_element(val);\r\n}),s));\r\n});\r\nreagent.impl.template.expand_seq_check = (function reagent$impl$template$expand_seq_check(x){\r\nvar ctx = ({});\r\nvar vec__35913 = reagent.ratom.check_derefs((function (){\r\nreturn reagent.impl.template.expand_seq_dev(x,ctx);\r\n}));\r\nvar res = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35913,(0),null);\r\nvar derefed = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35913,(1),null);\r\nif(cljs.core.truth_(derefed)){\r\nif(reagent.debug.has_console){\r\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\"Warning: \",reagent.impl.template.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Reactive deref not supported in lazy seq, \",\"it should be wrapped in doall\"], 0))].join(''));\r\n} else {\r\n}\r\n} else {\r\n}\r\n\r\nif(cljs.core.truth_(ctx.no_key)){\r\nif(reagent.debug.has_console){\r\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\"Warning: \",reagent.impl.template.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Every element in a seq should have a unique :key\"], 0))].join(''));\r\n} else {\r\n}\r\n} else {\r\n}\r\n\r\nreturn res;\r\n});\r\nreagent.impl.template.make_element = (function reagent$impl$template$make_element(argv,component,jsprops,first_child){\r\nvar G__35922 = (cljs.core.count(argv) - first_child);\r\nswitch (G__35922) {\r\ncase (0):\r\nreturn module$node_modules$react$index.createElement(component,jsprops);\r\n\r\nbreak;\r\ncase (1):\r\nvar G__35924 = component;\r\nvar G__35925 = jsprops;\r\nvar G__35926 = reagent.impl.template.as_element(cljs.core.nth.cljs$core$IFn$_invoke$arity$3(argv,first_child,null));\r\nreturn module$node_modules$react$index.createElement(G__35924,G__35925,G__35926);\r\n\r\nbreak;\r\ndefault:\r\nreturn module$node_modules$react$index.createElement.apply(null,cljs.core.reduce_kv((function (a,k,v){\r\nif((k >= first_child)){\r\na.push(reagent.impl.template.as_element(v));\r\n} else {\r\n}\r\n\r\nreturn a;\r\n}),[component,jsprops],argv));\r\n\r\n}\r\n});\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/impl/template.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",26],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$dbg","~$reagent.debug","~$prn","^D","~$println","^D","~$log","^D","~$dev?","^D","~$warn","^D","~$warn-unless","^D"],"~:excludes",["~#set",[]],"~:name","~$reagent.impl.template","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$reagent.impl.util","^S","~$comp","~$reagent.impl.component","~$reagent.ratom","^V","^>","^?","~$cljs.core","^W","^?","^?","~$gobj","~$goog.object","~$goog","^Z","^Y","^Y","~$reagent.impl.batching","^[","^U","^U","~$util","^S","~$ratom","^V","~$string","~$clojure.string","~$batch","^[","^D","^D","^13","^13","~$clojure.walk","^15"],"~:seen",["^L",["~:require"]],"~:uses",["^ ","~$prewalk","^15","~$is-client","^S","~$named?","^S"],"~:require-macros",["^ ","^D","^D","^W","^W","^V","^V","^11","^V"],"~:form",["~#list",["~$ns","^N",["^1>",["^17",["^>","~:as","^>"],["^13","^1@","^12"],["^15","~:refer",["^19"]],["^S","^1@","^10","^1A",["^1:","^1;"]],["^U","^1@","^T"],["^[","^1@","^14"],["^V","^1@","^11"],["^D","~:refer-macros",["^C","^E","^F","^G","^H","^I","^J"]],["^Y","^1@","^X"]]]]],"~:flags",["^ ","^17",["^L",[]]],"~:js-deps",["^ "],"~:deps",["^Z","^W","^?","^13","^15","^S","^U","^[","^V","^D","^Y"]],"^P","^N","~:resource-id",["~:shadow.build.classpath/resource","reagent/impl/template.cljs"],"~:compiled-at",1579687552744,"~:resource-name","reagent/impl/template.cljs","~:warnings",[],"~:source","(ns reagent.impl.template\n  (:require [react :as react]\n            [clojure.string :as string]\n            [clojure.walk :refer [prewalk]]\n            [reagent.impl.util :as util :refer [is-client named?]]\n            [reagent.impl.component :as comp]\n            [reagent.impl.batching :as batch]\n            [reagent.ratom :as ratom]\n            [reagent.debug :refer-macros [dbg prn println log dev?\n                                          warn warn-unless]]\n            [goog.object :as gobj]))\n\n(declare as-element)\n\n;; From Weavejester's Hiccup, via pump:\n(def ^{:doc \"Regular expression that parses a CSS-style id and class\n             from a tag name.\"}\n  re-tag #\"([^\\s\\.#]+)(?:#([^\\s\\.#]+))?(?:\\.([^\\s#]+))?\")\n\n(deftype NativeWrapper [tag id className])\n\n\n;;; Common utilities\n\n(defn ^boolean hiccup-tag? [x]\n  (or (named? x)\n      (string? x)))\n\n(defn ^boolean valid-tag? [x]\n  (or (hiccup-tag? x)\n      (ifn? x)\n      (instance? NativeWrapper x)))\n\n\n;;; Props conversion\n\n(def prop-name-cache #js{:class \"className\"\n                         :for \"htmlFor\"\n                         :charset \"charSet\"})\n\n(defn cache-get [o k]\n  (when ^boolean (.hasOwnProperty o k)\n    (gobj/get o k)))\n\n(defn cached-prop-name [k]\n  (if (named? k)\n    (if-some [k' (cache-get prop-name-cache (name k))]\n      k'\n      (let [v (util/dash-to-prop-name k)]\n        (gobj/set prop-name-cache (name k) v)\n        v))\n    k))\n\n(defn ^boolean js-val? [x]\n  (not (identical? \"object\" (goog/typeOf x))))\n\n(declare convert-prop-value)\n\n(defn kv-conv [o k v]\n  (doto o\n    (gobj/set (cached-prop-name k) (convert-prop-value v))))\n\n(defn convert-prop-value [x]\n  (cond (js-val? x) x\n        (named? x) (name x)\n        (map? x) (reduce-kv kv-conv #js{} x)\n        (coll? x) (clj->js x)\n        (ifn? x) (fn [& args]\n                   (apply x args))\n        :else (clj->js x)))\n\n;; Previous few functions copied for custom elements,\n;; without mapping from class to className etc.\n\n(def custom-prop-name-cache #js{})\n\n(defn cached-custom-prop-name [k]\n  (if (named? k)\n    (if-some [k' (cache-get custom-prop-name-cache (name k))]\n      k'\n      (let [v (util/dash-to-prop-name k)]\n        (gobj/set custom-prop-name-cache (name k) v)\n        v))\n    k))\n\n(defn custom-kv-conv [o k v]\n  (doto o\n    (gobj/set (cached-custom-prop-name k) (convert-prop-value v))))\n\n(defn convert-custom-prop-value [x]\n  (cond (js-val? x) x\n        (named? x) (name x)\n        (map? x) (reduce-kv custom-kv-conv #js{} x)\n        (coll? x) (clj->js x)\n        (ifn? x) (fn [& args]\n                   (apply x args))\n        :else (clj->js x)))\n\n(defn set-id-class\n  \"Takes the id and class from tag keyword, and adds them to the\n  other props. Parsed tag is JS object with :id and :class properties.\"\n  [props id-class]\n  (let [id (.-id id-class)\n        class (.-className id-class)]\n    (cond-> props\n      ;; Only use ID from tag keyword if no :id in props already\n      (and (some? id)\n           (nil? (:id props)))\n      (assoc :id id)\n\n      ;; Merge classes\n      class\n      (assoc :class (util/class-names class (:class props))))))\n\n(defn convert-props [props ^clj id-class]\n  (let [class (:class props)\n        props (-> props\n                  (cond-> class (assoc :class (util/class-names class)))\n                  (set-id-class id-class))]\n    (if (.-custom id-class)\n      (convert-custom-prop-value props)\n      (convert-prop-value props))))\n\n;;; Specialization for input components\n\n;; This gets set from reagent.dom\n(defonce find-dom-node nil)\n\n;; <input type=\"??\" >\n;; The properites 'selectionStart' and 'selectionEnd' only exist on some inputs\n;; See: https://html.spec.whatwg.org/multipage/forms.html#do-not-apply\n(def these-inputs-have-selection-api #{\"text\" \"textarea\" \"password\" \"search\"\n                                       \"tel\" \"url\"})\n\n(defn ^boolean has-selection-api?\n  [input-type]\n  (contains? these-inputs-have-selection-api input-type))\n\n(declare input-component-set-value)\n\n(defn input-node-set-value\n  [node rendered-value dom-value ^clj component {:keys [on-write]}]\n  (if-not (and (identical? node (.-activeElement js/document))\n            (has-selection-api? (.-type node))\n            (string? rendered-value)\n            (string? dom-value))\n    ;; just set the value, no need to worry about a cursor\n    (do\n      (set! (.-cljsDOMValue component) rendered-value)\n      (set! (.-value node) rendered-value)\n      (when (fn? on-write)\n        (on-write rendered-value)))\n\n    ;; Setting \"value\" (below) moves the cursor position to the\n    ;; end which gives the user a jarring experience.\n    ;;\n    ;; But repositioning the cursor within the text, turns out to\n    ;; be quite a challenge because changes in the text can be\n    ;; triggered by various events like:\n    ;; - a validation function rejecting a user inputted char\n    ;; - the user enters a lower case char, but is transformed to\n    ;;   upper.\n    ;; - the user selects multiple chars and deletes text\n    ;; - the user pastes in multiple chars, and some of them are\n    ;;   rejected by a validator.\n    ;; - the user selects multiple chars and then types in a\n    ;;   single new char to repalce them all.\n    ;; Coming up with a sane cursor repositioning strategy hasn't\n    ;; been easy ALTHOUGH in the end, it kinda fell out nicely,\n    ;; and it appears to sanely handle all the cases we could\n    ;; think of.\n    ;; So this is just a warning. The code below is simple\n    ;; enough, but if you are tempted to change it, be aware of\n    ;; all the scenarios you have handle.\n    (let [node-value (.-value node)]\n      (if (not= node-value dom-value)\n        ;; IE has not notified us of the change yet, so check again later\n        (batch/do-after-render #(input-component-set-value component))\n        (let [existing-offset-from-end (- (count node-value)\n                                         (.-selectionStart node))\n              new-cursor-offset        (- (count rendered-value)\n                                         existing-offset-from-end)]\n          (set! (.-cljsDOMValue component) rendered-value)\n          (set! (.-value node) rendered-value)\n          (when (fn? on-write)\n            (on-write rendered-value))\n          (set! (.-selectionStart node) new-cursor-offset)\n          (set! (.-selectionEnd node) new-cursor-offset))))))\n\n(defn input-component-set-value [^clj this]\n  (when (.-cljsInputLive this)\n    (set! (.-cljsInputDirty this) false)\n    (let [rendered-value (.-cljsRenderedValue this)\n          dom-value (.-cljsDOMValue this)\n          ;; Default to the root node within this component\n          node (find-dom-node this)]\n      (when (not= rendered-value dom-value)\n        (input-node-set-value node rendered-value dom-value this {})))))\n\n(defn input-handle-change [^clj this on-change e]\n  (set! (.-cljsDOMValue this) (-> e .-target .-value))\n  ;; Make sure the input is re-rendered, in case on-change\n  ;; wants to keep the value unchanged\n  (when-not (.-cljsInputDirty this)\n    (set! (.-cljsInputDirty this) true)\n    (batch/do-after-render #(input-component-set-value this)))\n  (on-change e))\n\n(defn input-render-setup\n  [^clj this ^js jsprops]\n  ;; Don't rely on React for updating \"controlled inputs\", since it\n  ;; doesn't play well with async rendering (misses keystrokes).\n  (when (and (some? jsprops)\n             (.hasOwnProperty jsprops \"onChange\")\n             (.hasOwnProperty jsprops \"value\"))\n    (assert find-dom-node\n            \"reagent.dom needs to be loaded for controlled input to work\")\n    (let [v (.-value jsprops)\n          value (if (nil? v) \"\" v)\n          on-change (.-onChange jsprops)]\n      (when-not (.-cljsInputLive this)\n        ;; set initial value\n        (set! (.-cljsInputLive this) true)\n        (set! (.-cljsDOMValue this) value))\n      (set! (.-cljsRenderedValue this) value)\n      (js-delete jsprops \"value\")\n      (set! (.-defaultValue jsprops) value)\n      (set! (.-onChange jsprops) #(input-handle-change this on-change %)))))\n\n(defn input-unmount [^clj this]\n  (set! (.-cljsInputLive this) nil))\n\n(defn ^boolean input-component? [x]\n  (case x\n    (\"input\" \"textarea\") true\n    false))\n\n(def reagent-input-class nil)\n\n(declare make-element)\n\n(def input-spec\n  {:display-name \"ReagentInput\"\n   :component-did-update input-component-set-value\n   :component-will-unmount input-unmount\n   :reagent-render\n   (fn [argv component jsprops first-child]\n     (let [this comp/*current-component*]\n       (input-render-setup this jsprops)\n       (make-element argv component jsprops first-child)))})\n\n(defn reagent-input\n  []\n  (when (nil? reagent-input-class)\n    (set! reagent-input-class (comp/create-class input-spec)))\n  reagent-input-class)\n\n\n;;; Conversion from Hiccup forms\n\n(deftype HiccupTag [tag id className custom])\n\n(defn parse-tag [hiccup-tag]\n  (let [[tag id className] (->> hiccup-tag name (re-matches re-tag) next)\n        className (when-not (nil? className)\n                    (string/replace className #\"\\.\" \" \"))]\n    (assert tag (str \"Invalid tag: '\" hiccup-tag \"'\" (comp/comp-name)))\n    (->HiccupTag tag\n                 id\n                 className\n                 ;; Custom element names must contain hyphen\n                 ;; https://www.w3.org/TR/custom-elements/#custom-elements-core-concepts\n                 (not= -1 (.indexOf tag \"-\")))))\n\n(defn try-get-key [x]\n  ;; try catch to avoid clojurescript peculiarity with\n  ;; sorted-maps with keys that are numbers\n  (try (get x :key)\n       (catch :default e)))\n\n(defn get-key [x]\n  (when (map? x)\n    (try-get-key x)))\n\n(defn key-from-vec [v]\n  (if-some [k (-> (meta v) get-key)]\n    k\n    (-> v (nth 1 nil) get-key)))\n\n(defn reag-element [tag v]\n  (let [c (comp/as-class tag)\n        jsprops #js {}]\n    (set! (.-argv jsprops) v)\n    (when-some [key (key-from-vec v)]\n      (set! (.-key jsprops) key))\n    (react/createElement c jsprops)))\n\n(defn fragment-element [argv]\n  (let [props (nth argv 1 nil)\n        hasprops (or (nil? props) (map? props))\n        jsprops (or (convert-prop-value (if hasprops props))\n                    #js {})\n        first-child (+ 1 (if hasprops 1 0))]\n    (when-some [key (key-from-vec argv)]\n      (set! (.-key jsprops) key))\n    (make-element argv react/Fragment jsprops first-child)))\n\n(defn adapt-react-class\n  [c]\n  (->NativeWrapper c nil nil))\n\n(def tag-name-cache #js{})\n\n(defn cached-parse [x]\n  (if-some [s (cache-get tag-name-cache x)]\n    s\n    (let [v (parse-tag x)]\n      (gobj/set tag-name-cache x v)\n      v)))\n\n(defn native-element [parsed argv first]\n  (let [component (.-tag parsed)\n        props (nth argv first nil)\n        hasprops (or (nil? props) (map? props))\n        jsprops (or (convert-props (if hasprops props) parsed)\n                    #js {})\n        first-child (+ first (if hasprops 1 0))]\n    (if (input-component? component)\n      (-> [(reagent-input) argv component jsprops first-child]\n          (with-meta (meta argv))\n          as-element)\n      (do\n        (when-some [key (-> (meta argv) get-key)]\n          (set! (.-key jsprops) key))\n        (make-element argv component jsprops first-child)))))\n\n(defn str-coll [coll]\n  (if (dev?)\n    (str (prewalk (fn [x]\n                    (if (fn? x)\n                      (let [n (util/fun-name x)]\n                        (case n\n                          (\"\" nil) x\n                          (symbol n)))\n                      x)) coll))\n    (str coll)))\n\n(defn hiccup-err [v & msg]\n  (str (apply str msg) \": \" (str-coll v) \"\\n\" (comp/comp-name)))\n\n(defn vec-to-elem [v]\n  (assert (pos? (count v)) (hiccup-err v \"Hiccup form should not be empty\"))\n  (let [tag (nth v 0 nil)]\n    (assert (valid-tag? tag) (hiccup-err v \"Invalid Hiccup form\"))\n    (cond\n      (keyword-identical? :<> tag)\n      (fragment-element v)\n\n      (hiccup-tag? tag)\n      (let [n (name tag)\n            pos (.indexOf n \">\")]\n        (case pos\n          -1 (native-element (cached-parse n) v 1)\n          0 (let [component (nth v 1 nil)]\n              ;; Support [:> component ...]\n              (assert (= \">\" n) (hiccup-err v \"Invalid Hiccup tag\"))\n              (native-element (->HiccupTag component nil nil nil) v 2))\n          ;; Support extended hiccup syntax, i.e :div.bar>a.foo\n          ;; Apply metadata (e.g. :key) to the outermost element.\n          ;; Metadata is probably used only with sequeneces, and in that case\n          ;; only the key of the outermost element matters.\n          (recur (with-meta [(subs n 0 pos)\n                             (assoc (with-meta v nil) 0 (subs n (inc pos)))]\n                            (meta v)))))\n\n      (instance? NativeWrapper tag)\n      (native-element tag v 1)\n\n      :else (reag-element tag v))))\n\n(declare expand-seq)\n(declare expand-seq-check)\n\n(defn as-element [x]\n  (cond (js-val? x) x\n        (vector? x) (vec-to-elem x)\n        (seq? x) (if (dev?)\n                   (expand-seq-check x)\n                   (expand-seq x))\n        (named? x) (name x)\n        (satisfies? IPrintWithWriter x) (pr-str x)\n        :else x))\n\n(set! comp/as-element as-element)\n\n(defn expand-seq [s]\n  (into-array (map as-element s)))\n\n(defn expand-seq-dev [s ^clj o]\n  (into-array (map (fn [val]\n                     (when (and (vector? val)\n                                (nil? (key-from-vec val)))\n                       (set! (.-no-key o) true))\n                     (as-element val))\n                   s)))\n\n(defn expand-seq-check [x]\n  (let [ctx #js{}\n        [res derefed] (ratom/check-derefs #(expand-seq-dev x ctx))]\n    (when derefed\n      (warn (hiccup-err x \"Reactive deref not supported in lazy seq, \"\n                        \"it should be wrapped in doall\")))\n    (when (.-no-key ctx)\n      (warn (hiccup-err x \"Every element in a seq should have a unique :key\")))\n    res))\n\n;; From https://github.com/babel/babel/commit/1d0e68f5a19d721fe8799b1ea331041d8bf9120e\n;; (def react-element-type (or (and (exists? js/Symbol)\n;;                                  ($ js/Symbol :for)\n;;                                  ($ js/Symbol for \"react.element\"))\n;;                             60103))\n\n;; (defn make-element-fast [argv comp jsprops first-child]\n;;   (let [key (some-> jsprops ($ :key))\n;;         ref (some-> jsprops ($ :ref))\n;;         props (if (nil? jsprops) (js-obj) jsprops)]\n;;     ($! props :children\n;;         (case (- (count argv) first-child)\n;;           0 nil\n;;           1 (as-element (nth argv first-child))\n;;           (reduce-kv (fn [a k v]\n;;                        (when (>= k first-child)\n;;                          (.push a (as-element v)))\n;;                        a)\n;;                      #js[] argv)))\n;;     (js-obj \"key\" key\n;;             \"ref\" ref\n;;             \"props\" props\n;;             \"$$typeof\" react-element-type\n;;             \"type\" comp\n;;             ;; \"_store\" (js-obj)\n;;             )))\n\n(defn make-element [argv component jsprops first-child]\n  (case (- (count argv) first-child)\n    ;; Optimize cases of zero or one child\n    0 (react/createElement component jsprops)\n\n    1 (react/createElement component jsprops\n          (as-element (nth argv first-child nil)))\n\n    (.apply react/createElement nil\n            (reduce-kv (fn [a k v]\n                         (when (>= k first-child)\n                           (.push a (as-element v)))\n                         a)\n                       #js[component jsprops] argv))))\n","~:reader-features",["^L",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["reagent.impl.template/re-tag","this__4428__auto__","writer__4429__auto__","opt__4430__auto__","cljs.core/-write","reagent.impl.template/NativeWrapper","reagent.impl.template/->NativeWrapper","tag","id","className","reagent.impl.template/hiccup-tag?","x","reagent.impl.util/named?","reagent.impl.template/valid-tag?","cljs.core/ifn?","reagent.impl.template/prop-name-cache","reagent.impl.template/cache-get","o","k","goog.object/get","reagent.impl.template/cached-prop-name","temp__5737__auto__","k'","cljs.core/name","v","reagent.impl.util/dash-to-prop-name","G__35794","G__35795","G__35796","goog.object/set","reagent.impl.template/js-val?","goog/typeOf","reagent.impl.template/kv-conv","G__35797","G__35798","G__35799","G__35800","reagent.impl.template/convert-prop-value","cljs.core/map?","cljs.core/reduce-kv","cljs.core/coll?","cljs.core/clj->js","args","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","reagent.impl.template/custom-prop-name-cache","reagent.impl.template/cached-custom-prop-name","G__35805","G__35806","G__35807","reagent.impl.template/custom-kv-conv","G__35808","G__35809","G__35810","G__35811","reagent.impl.template/convert-custom-prop-value","reagent.impl.template/set-id-class","props","id-class","class","G__35822","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$2","reagent.impl.template/convert-props","G__35824","reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$1","js/reagent","js/reagent.impl","js/reagent.impl.template","js/reagent.impl.template.find-dom-node","reagent.impl.template/find-dom-node","reagent.impl.template/these-inputs-have-selection-api","reagent.impl.template/has-selection-api?","input-type","cljs.core/contains?","p__35825","map__35826","cljs.core/PROTOCOL_SENTINEL","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","reagent.impl.template/input-node-set-value","node","rendered-value","dom-value","component","on-write","js/document","cljs.core/fn?","node-value","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2","reagent.impl.batching/do-after-render","reagent.impl.template/input-component-set-value","existing-offset-from-end","cljs.core/count","new-cursor-offset","this","reagent.impl.template/input-handle-change","on-change","e","reagent.impl.template/input-render-setup","jsprops","and__4174__auto__","js/Error","value","p1__35828#","reagent.impl.template/input-unmount","reagent.impl.template/input-component?","G__35837","reagent.impl.template/reagent-input-class","reagent.impl.template/input-spec","argv","first-child","reagent.impl.component/*current-component*","reagent.impl.template/make-element","reagent.impl.template/reagent-input","reagent.impl.component/create-class","reagent.impl.template/HiccupTag","reagent.impl.template/->HiccupTag","custom","reagent.impl.template/parse-tag","hiccup-tag","vec__35841","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","cljs.core/re-matches","cljs.core/next","clojure.string/replace","reagent.impl.component/comp-name","reagent.impl.template/try-get-key","e35848","reagent.impl.template/get-key","reagent.impl.template/key-from-vec","cljs.core/meta","reagent.impl.template/reag-element","c","reagent.impl.component/as-class","temp__5739__auto__","key","js/module$node_modules$react$index.createElement","reagent.impl.template/fragment-element","hasprops","or__4185__auto__","js/module$node_modules$react$index.Fragment","reagent.impl.template/adapt-react-class","reagent.impl.template/tag-name-cache","reagent.impl.template/cached-parse","s","reagent.impl.template/native-element","parsed","first","G__35878","cljs.core/with-meta","reagent.impl.template/as-element","reagent.impl.template/str-coll","coll","clojure.walk/prewalk","n","reagent.impl.util/fun-name","G__35880","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core.symbol.cljs$core$IFn$_invoke$arity$1","var_args","args__4795__auto__","len__4789__auto__","i__4790__auto__","argseq__4796__auto__","cljs.core/IndexedSeq","reagent.impl.template/hiccup-err","seq35881","G__35882","cljs.core/first","self__4776__auto__","msg","cljs.core/str","reagent.impl.template/vec-to-elem","reagent.impl.template.hiccup_err.cljs$core$IFn$_invoke$arity$variadic","cljs.core/keyword-identical?","pos","G__35891","cljs.core.subs.cljs$core$IFn$_invoke$arity$3","cljs.core.subs.cljs$core$IFn$_invoke$arity$2","cljs.core/vector?","cljs.core/seq?","reagent.impl.template/expand-seq-check","cljs.core/native-satisfies?","cljs.core/IPrintWithWriter","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","reagent.impl.component/as-element","reagent.impl.template/expand-seq","cljs.core.into_array.cljs$core$IFn$_invoke$arity$1","cljs.core.map.cljs$core$IFn$_invoke$arity$2","reagent.impl.template/expand-seq-dev","val","vec__35913","ctx","res","derefed","reagent.ratom/check-derefs","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","G__35922","G__35924","G__35925","G__35926","a"]]],"~:cache-keys",["~#cmap",[["^1G","reagent/impl/batching.cljs"],[1579687470078,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^L",[]],"~:deps-syms",["^Z","^W","^D","^S"]]],["^1G","goog/dom/tagname.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","~$goog.dom.HtmlElement"]]],["^1G","goog/math/math.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","~$goog.array","~$goog.asserts"]]],["^1G","goog/html/trustedtypes.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z"]]],["^1G","goog/labs/useragent/browser.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","^1Y","~$goog.labs.userAgent.util","^Y","~$goog.string.internal"]]],["^1G","goog/html/safeurl.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","^1Z","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^20"]]],["^1G","goog/array/array.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","^1Z"]]],["~:shadow.build.npm/resource","node_modules/prop-types/checkPropTypes.js"],[1579687469000,1579687469000,1579640166244,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["~$shadow.js","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^1G","reagent/impl/util.cljs"],[1579687470078,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","^W","^D","^13"]]],["^1G","goog/debug/error.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z"]]],["^1G","goog/dom/nodetype.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z"]]],["^1G","reagent/ratom.cljs"],[1579687470078,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","^W","^S","^D","^[","~$clojure.set","^Y"]]],["^1G","goog/string/typedstring.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z"]]],["^27","node_modules/react/index.js"],[1579687469000,1579687469000,499162500000,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^28","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1G","shadow/js.js"],[1579687469605,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z"]]],["^1G","goog/object/object.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z"]]],["^1G","reagent/impl/template.cljs"],[1579687470078,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","^W","^?","^13","^15","^S","^U","^[","^V","^D","^Y"]]],["^1G","goog/dom/asserts.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","^1Z"]]],"~:SHADOW-TIMESTAMP",[1579687469000,1579687405000],["^27","node_modules/react/cjs/react.development.js"],[1579687469000,1579687469000,499162500000,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^28","~$module$node_modules$object_assign$index","~$module$node_modules$prop_types$checkPropTypes"]]],["^1G","goog/math/long.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","^1Z","~$goog.reflect"]]],["^1G","goog/html/trustedresourceurl.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","^1Z","~$goog.html.trustedtypes","^23","^24","^25","^26"]]],["^1G","goog/string/internal.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z"]]],["^1G","goog/functions/functions.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z"]]],["^1G","goog/html/safestyle.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","^1Y","^1Z","~$goog.html.SafeUrl","^25","^26","^20"]]],["^1G","goog/dom/safe.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","^1Z","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^2B","^22","~$goog.html.uncheckedconversions","^25","^20"]]],["^1G","reagent/impl/component.cljs"],[1579687470078,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","^W","^Y","^?","^S","^[","^V","^D"]]],["^1G","clojure/walk.cljs"],[1579687405264,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","^W"]]],["^1G","goog/structs/map.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1G","goog/html/safehtml.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","^1Y","^1Z","~$goog.dom.TagName","~$goog.dom.tags","^2F","^2G","~$goog.html.SafeStyleSheet","^2B","^22","^2A","^23","^24","~$goog.labs.userAgent.browser","^Y","^25","^26","^20"]]],["^1G","goog/dom/tags.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","^Y"]]],["^1G","goog/asserts/asserts.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1G","goog/uri/uri.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","^1Y","^1Z","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1G","goog/i18n/bidi.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z"]]],["^27","node_modules/object-assign/index.js"],[1579687469000,1579687469000,1579640166228,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^28"]]],["^1G","goog/fs/url.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z"]]],["^1G","goog/base.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",[]]],["^1G","goog/structs/structs.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","^1Y","^Y"]]],["^1G","clojure/string.cljs"],[1579687405264,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","^W","^2Q","~$goog.string.StringBuffer"]]],["^27","node_modules/react/cjs/react.production.min.js"],[1579687469000,1579687469000,499162500000,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^28","^2>"]]],["^1G","goog/string/string.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","~$goog.dom.safe","^2H","^25","^20"]]],["^1G","goog/reflect/reflect.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z"]]],["^1G","goog/labs/useragent/util.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","^20"]]],["^1G","goog/string/stringbuffer.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z"]]],["^1G","goog/iter/iter.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","^1Y","^1Z","^2D","~$goog.math"]]],["^1G","goog/html/uncheckedconversions.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","^1Z","^2E","^2F","^2G","^2M","^2B","^22","^25","^20"]]],["^27","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1579687469000,1579687469000,1579640166249,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^28"]]],["^1G","goog/dom/htmlelement.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z"]]],["^1G","cljs/core.cljs"],[1579687405264,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["~$goog.math.Long","~$goog.math.Integer","^2Q","^Y","^1Y","~$goog.Uri","^2W"]]],["^1G","goog/html/safescript.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","^1Z","^2A","^25","^26"]]],["^1G","reagent/debug.cljs"],[1579687470078,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","^W"]]],["^1G","goog/html/safestylesheet.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","^1Y","^1Z","^2G","^Y","^25","^26","^20"]]],["^1G","goog/math/integer.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","^2@"]]],["^1G","clojure/set.cljs"],[1579687405264,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","^W"]]],["^1G","goog/uri/utils.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","^1Y","^1Z","^2Q"]]],["^1G","goog/string/const.js"],[1579687410012,"^1T",["^ ","^1U",null,"^1V",["^L",[]],"^1W",["^Z","^1Z","^26"]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map.clj",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/reagent/reagent/0.9.1/reagent-0.9.1.jar!/reagent/ratom.clj",1579687470000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1579687401000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64.clj",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1579687402000,"jar:file:/C:/Users/PC/.m2/repository/reagent/reagent/0.9.1/reagent-0.9.1.jar!/reagent/debug.clj",1579687470000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1579687402000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/analyzer.cljc",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1579687402000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/tagged_literals.cljc",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/util.cljc",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/compiler.cljc",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64_vlq.clj",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1579687402000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1579687401000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1579687401000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/externs.clj",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1579687401000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/js_deps.cljc",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1579687401000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1579687401000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1579687402000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1579687402000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1579687402000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/core.cljc",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/env.cljc",1579687405000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/impl/template.cljs","^7",1,"^8",5,"^9",1,"^:",26],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",["^ ","^C","^D","^E","^D","^F","^D","^G","^D","^H","^D","^I","^D","^J","^D"],"^K",["^L",[]],"~:shadow/js-access-properties",["^L",["onChange","createElement","Fragment"]],"^M","^N","^Q",null,"^R",["^ ","^S","^S","^T","^U","^V","^V","^>","^?","^W","^W","^?","^?","^X","^Y","^Z","^Z","^Y","^Y","^[","^[","^U","^U","^10","^S","^11","^V","^12","^13","^14","^[","^D","^D","^13","^13","^15","^15"],"^16",["^L",["^17"]],"~:shadow/js-access-global",["^L",["document","Error"]],"^18",["^ ","^19","^15","^1:","^S","^1;","^S"],"~:defs",["^ ","~$valid-tag?",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",29,"^8",16,"^9",29,"^:",26,"~:tag","~$boolean","~:arglists",["^1>",["~$quote",["^1>",[["~$x"]]]]]],"^M","~$reagent.impl.template/valid-tag?","^6","reagent/impl/template.cljs","^:",26,"~:method-params",["^1>",[["~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^1>",[null,null]],"^8",1,"~:variadic?",false,"^7",29,"~:ret-tag","^3S","^9",29,"~:max-fixed-arity",1,"^3R","^3S","~:fn-var",true,"^3T",["^1>",["^3U",["^1>",[["~$x"]]]]]],"~$adapt-react-class",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",308,"^8",7,"^9",308,"^:",24,"^3T",["^1>",["^3U",["^1>",[["~$c"]]]]]],"^M","~$reagent.impl.template/adapt-react-class","^6","reagent/impl/template.cljs","^:",24,"^3W",["^1>",[["~$c"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",308,"^3[","~$reagent.impl.template/NativeWrapper","^9",308,"^40",1,"^41",true,"^3T",["^1>",["^3U",["^1>",[["~$c"]]]]]],"~$has-selection-api?",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",135,"^8",16,"^9",135,"^:",34,"^3R","^3S","^3T",["^1>",["^3U",["^1>",[["~$input-type"]]]]]],"^M","~$reagent.impl.template/has-selection-api?","^6","reagent/impl/template.cljs","^:",34,"^3W",["^1>",[["^46"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",135,"^3[","^3S","^9",135,"^40",1,"^3R","^3S","^41",true,"^3T",["^1>",["^3U",["^1>",[["^46"]]]]]],"~$str-coll",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",337,"^8",7,"^9",337,"^:",15,"^3T",["^1>",["^3U",["^1>",[["~$coll"]]]]]],"^M","~$reagent.impl.template/str-coll","^6","reagent/impl/template.cljs","^:",15,"^3W",["^1>",[["^49"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",337,"^3[","^12","^9",337,"^40",1,"^41",true,"^3T",["^1>",["^3U",["^1>",[["^49"]]]]]],"~$get-key",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",281,"^8",7,"^9",281,"^:",14,"^3T",["^1>",["^3U",["^1>",[["~$x"]]]]]],"^M","~$reagent.impl.template/get-key","^6","reagent/impl/template.cljs","^:",14,"^3W",["^1>",[["~$x"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",281,"^3[",["^L",["~$any","~$clj-nil"]],"^9",281,"^40",1,"^41",true,"^3T",["^1>",["^3U",["^1>",[["~$x"]]]]]],"~$re-tag",["^ ","^5",["^ ","^6","reagent/impl/template.cljs","^7",18,"^8",3,"^9",18,"^:",9,"~:doc","Regular expression that parses a CSS-style id and class\n             from a tag name."],"^M","~$reagent.impl.template/re-tag","^6","reagent/impl/template.cljs","^:",9,"^8",1,"^7",16,"^9",18,"^3R","^4=","^4@","Regular expression that parses a CSS-style id and class\n             from a tag name."],"~$reag-element",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",290,"^8",7,"^9",290,"^:",19,"^3T",["^1>",["^3U",["^1>",[["~$tag","~$v"]]]]]],"^M","~$reagent.impl.template/reag-element","^6","reagent/impl/template.cljs","^:",19,"^3W",["^1>",[["^4C","~$v"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",290,"^3[","~$js","^9",290,"^40",2,"^41",true,"^3T",["^1>",["^3U",["^1>",[["^4C","~$v"]]]]]],"~$as-element",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",384,"^8",7,"^9",384,"^:",17,"^3T",["^1>",["^3U",["^1>",[["~$x"]]]]]],"^M","~$reagent.impl.template/as-element","^6","reagent/impl/template.cljs","^:",17,"^3W",["^1>",[["~$x"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",384,"^3[",["^L",[null,"^4=","^4E","^12"]],"^9",384,"^40",1,"^41",true,"^3T",["^1>",["^3U",["^1>",[["~$x"]]]]]],"~$input-component?",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",233,"^8",16,"^9",233,"^:",32,"^3R","^3S","^3T",["^1>",["^3U",["^1>",[["~$x"]]]]]],"^M","~$reagent.impl.template/input-component?","^6","reagent/impl/template.cljs","^:",32,"^3W",["^1>",[["~$x"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",233,"^3[","^3S","^9",233,"^40",1,"^3R","^3S","^41",true,"^3T",["^1>",["^3U",["^1>",[["~$x"]]]]]],"~$HiccupTag",["^ ","~:num-fields",4,"~:protocols",["^L",[]],"^M","~$reagent.impl.template/HiccupTag","^6","reagent/impl/template.cljs","^:",19,"~:type",true,"^8",10,"^7",261,"~:record",false,"^9",261,"^3R","~$function","~:skip-protocol-flag",null],"~$NativeWrapper",["^ ","^4K",3,"^4L",["^L",[]],"^M","^44","^6","reagent/impl/template.cljs","^:",23,"^4N",true,"^8",10,"^7",20,"^4O",false,"^9",20,"^3R","^4P","^4Q",null],"~$->NativeWrapper",["^ ","^3Q",null,"^5",["^ ","^4L",["^L",[]],"^6","reagent/impl/template.cljs","^:",23,"^8",10,"~:factory","~:positional","^7",20,"^9",20,"^3T",["^1>",["^3U",["^1>",[["^4C","~$id","~$className"]]]]],"^4Q",null,"^4@","Positional factory function for reagent.impl.template/NativeWrapper."],"^4L",["^L",[]],"^M","~$reagent.impl.template/->NativeWrapper","^6","reagent/impl/template.cljs","^:",23,"^3W",["^1>",[["^4C","^4V","^4W"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^4T","^4U","^7",20,"^3[","^44","^9",20,"^40",3,"^41",true,"^3T",["^1>",["^3U",["^1>",[["^4C","^4V","^4W"]]]]],"^4Q",null,"^4@","Positional factory function for reagent.impl.template/NativeWrapper."],"~$custom-kv-conv",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",86,"^8",7,"^9",86,"^:",21,"^3T",["^1>",["^3U",["^1>",[["~$o","~$k","~$v"]]]]]],"^M","~$reagent.impl.template/custom-kv-conv","^6","reagent/impl/template.cljs","^:",21,"^3W",["^1>",[["~$o","~$k","~$v"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",86,"^9",86,"^40",3,"^41",true,"^3T",["^1>",["^3U",["^1>",[["~$o","~$k","~$v"]]]]]],"~$input-render-setup",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",209,"^8",7,"^9",209,"^:",25,"^3T",["^1>",["^3U",["^1>",[["~$this","~$jsprops"]]]]]],"^M","~$reagent.impl.template/input-render-setup","^6","reagent/impl/template.cljs","^:",25,"^3W",["^1>",[["^50","^51"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",209,"^3[",["^L",[null,"^4>"]],"^9",209,"^40",2,"^41",true,"^3T",["^1>",["^3U",["^1>",[["^50","^51"]]]]]],"~$input-component-set-value",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",190,"^8",7,"^9",190,"^:",32,"^3T",["^1>",["^3U",["^1>",[["^50"]]]]]],"^M","~$reagent.impl.template/input-component-set-value","^6","reagent/impl/template.cljs","^:",32,"^3W",["^1>",[["^50"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",190,"^3[",["^L",[null,"^4=","^4>"]],"^9",190,"^40",1,"^41",true,"^3T",["^1>",["^3U",["^1>",[["^50"]]]]]],"~$hiccup-tag?",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",25,"^8",16,"^9",25,"^:",27,"^3R","^3S","^3T",["^1>",["^3U",["^1>",[["~$x"]]]]]],"^M","~$reagent.impl.template/hiccup-tag?","^6","reagent/impl/template.cljs","^:",27,"^3W",["^1>",[["~$x"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",25,"^3[","^3S","^9",25,"^40",1,"^3R","^3S","^41",true,"^3T",["^1>",["^3U",["^1>",[["~$x"]]]]]],"~$set-id-class",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",99,"^8",7,"^9",99,"^:",19,"^3T",["^1>",["^3U",["^1>",[["~$props","~$id-class"]]]]],"^4@","Takes the id and class from tag keyword, and adds them to the\n  other props. Parsed tag is JS object with :id and :class properties."],"^M","~$reagent.impl.template/set-id-class","^6","reagent/impl/template.cljs","^:",19,"^3W",["^1>",[["^58","^59"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",99,"^3[",["^L",[null,"~$clj","^4="]],"^9",99,"^40",2,"^41",true,"^3T",["^1>",["^3U",["^1>",[["^58","^59"]]]]],"^4@","Takes the id and class from tag keyword, and adds them to the\n  other props. Parsed tag is JS object with :id and :class properties."],"~$tag-name-cache",["^ ","^M","~$reagent.impl.template/tag-name-cache","^6","reagent/impl/template.cljs","^7",312,"^8",1,"^9",312,"^:",20,"^5",["^ ","^6","reagent/impl/template.cljs","^7",312,"^8",6,"^9",312,"^:",20],"^3R","~$object"],"~$prop-name-cache",["^ ","^M","~$reagent.impl.template/prop-name-cache","^6","reagent/impl/template.cljs","^7",37,"^8",1,"^9",37,"^:",21,"^5",["^ ","^6","reagent/impl/template.cljs","^7",37,"^8",6,"^9",37,"^:",21],"^3R","^5>"],"~$input-node-set-value",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",141,"^8",7,"^9",141,"^:",27,"^3T",["^1>",["^3U",["^1>",[["~$node","~$rendered-value","~$dom-value","~$component",["^ ","~:keys",["~$on-write"]]]]]]]],"^M","~$reagent.impl.template/input-node-set-value","^6","reagent/impl/template.cljs","^:",27,"^3W",["^1>",[["^5B","^5C","^5D","^5E","~$p__35825"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",141,"^3[",["^L",[null,"^4=","^4>"]],"^9",141,"^40",5,"^41",true,"^3T",["^1>",["^3U",["^1>",[["^5B","^5C","^5D","^5E",["^ ","^5F",["^5G"]]]]]]]],"~$convert-props",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",115,"^8",7,"^9",115,"^:",20,"^3T",["^1>",["^3U",["^1>",[["^58","^59"]]]]]],"^M","~$reagent.impl.template/convert-props","^6","reagent/impl/template.cljs","^:",20,"^3W",["^1>",[["^58","^59"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",115,"^3[",["^L",[null,"^4=","^12","^4P"]],"^9",115,"^40",2,"^41",true,"^3T",["^1>",["^3U",["^1>",[["^58","^59"]]]]]],"~$hiccup-err",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",348,"^8",7,"^9",348,"^:",17,"^3T",["^1>",["^3U",["^1>",[["~$v","~$&","~$msg"]]]]],"~:top-fn",["^ ","^3Z",true,"~:fixed-arity",1,"^40",1,"^3W",[["^1>",["~$v","^5M"]]],"^3T",["^1>",[["~$v","~$&","^5M"]]],"^3Y",["^1>",[null]]]],"^M","~$reagent.impl.template/hiccup-err","^6","reagent/impl/template.cljs","^:",17,"^5N",["^ ","^3Z",true,"^5O",1,"^40",1,"^3W",[["^1>",["~$v","^5M"]]],"^3T",["^1>",[["~$v","~$&","^5M"]]],"^3Y",["^1>",[null]]],"^3W",[["^1>",["~$v","^5M"]]],"^3X",null,"^5O",1,"^3Y",["^1>",[null]],"^8",1,"^3Z",true,"~:methods",[["^ ","^5O",1,"^3Z",true,"^3R","^12"]],"^7",348,"^3[","^4=","^9",348,"^40",1,"^41",true,"^3T",["^1>",[["~$v","~$&","^5M"]]]],"~$custom-prop-name-cache",["^ ","^M","~$reagent.impl.template/custom-prop-name-cache","^6","reagent/impl/template.cljs","^7",75,"^8",1,"^9",75,"^:",28,"^5",["^ ","^6","reagent/impl/template.cljs","^7",75,"^8",6,"^9",75,"^:",28],"^3R","^5>"],"~$parse-tag",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",263,"^8",7,"^9",263,"^:",16,"^3T",["^1>",["^3U",["^1>",[["~$hiccup-tag"]]]]]],"^M","~$reagent.impl.template/parse-tag","^6","reagent/impl/template.cljs","^:",16,"^3W",["^1>",[["^5U"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",263,"^3[","^4M","^9",263,"^40",1,"^41",true,"^3T",["^1>",["^3U",["^1>",[["^5U"]]]]]],"~$kv-conv",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",59,"^8",7,"^9",59,"^:",14,"^3T",["^1>",["^3U",["^1>",[["~$o","~$k","~$v"]]]]]],"^M","~$reagent.impl.template/kv-conv","^6","reagent/impl/template.cljs","^:",14,"^3W",["^1>",[["~$o","~$k","~$v"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",59,"^9",59,"^40",3,"^41",true,"^3T",["^1>",["^3U",["^1>",[["~$o","~$k","~$v"]]]]]],"~$key-from-vec",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",285,"^8",7,"^9",285,"^:",19,"^3T",["^1>",["^3U",["^1>",[["~$v"]]]]]],"^M","~$reagent.impl.template/key-from-vec","^6","reagent/impl/template.cljs","^:",19,"^3W",["^1>",[["~$v"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",285,"^3[",["^L",["^4=","^4>"]],"^9",285,"^40",1,"^41",true,"^3T",["^1>",["^3U",["^1>",[["~$v"]]]]]],"~$js-val?",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",54,"^8",16,"^9",54,"^:",23,"^3R","^3S","^3T",["^1>",["^3U",["^1>",[["~$x"]]]]]],"^M","~$reagent.impl.template/js-val?","^6","reagent/impl/template.cljs","^:",23,"^3W",["^1>",[["~$x"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",54,"^3[","^3S","^9",54,"^40",1,"^3R","^3S","^41",true,"^3T",["^1>",["^3U",["^1>",[["~$x"]]]]]],"~$input-unmount",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",230,"^8",7,"^9",230,"^:",20,"^3T",["^1>",["^3U",["^1>",[["^50"]]]]]],"^M","~$reagent.impl.template/input-unmount","^6","reagent/impl/template.cljs","^:",20,"^3W",["^1>",[["^50"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",230,"^9",230,"^40",1,"^41",true,"^3T",["^1>",["^3U",["^1>",[["^50"]]]]]],"~$convert-custom-prop-value",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",90,"^8",7,"^9",90,"^:",32,"^3T",["^1>",["^3U",["^1>",[["~$x"]]]]]],"^M","~$reagent.impl.template/convert-custom-prop-value","^6","reagent/impl/template.cljs","^:",32,"^3W",["^1>",[["~$x"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",90,"^3[",["^L",[null,"^4=","^12","^4P"]],"^9",90,"^40",1,"^41",true,"^3T",["^1>",["^3U",["^1>",[["~$x"]]]]]],"~$reagent-input-class",["^ ","^M","~$reagent.impl.template/reagent-input-class","^6","reagent/impl/template.cljs","^7",238,"^8",1,"^9",238,"^:",25,"^5",["^ ","^6","reagent/impl/template.cljs","^7",238,"^8",6,"^9",238,"^:",25],"^3R","^4>"],"~$native-element",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",321,"^8",7,"^9",321,"^:",21,"^3T",["^1>",["^3U",["^1>",[["~$parsed","~$argv","~$first"]]]]]],"^M","~$reagent.impl.template/native-element","^6","reagent/impl/template.cljs","^:",21,"^3W",["^1>",[["^68","^69","^6:"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",321,"^3[","^4=","^9",321,"^40",3,"^41",true,"^3T",["^1>",["^3U",["^1>",[["^68","^69","^6:"]]]]]],"~$reagent-input",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",252,"^8",7,"^9",252,"^:",20,"^3T",["^1>",["^3U",["^1>",[[]]]]]],"^M","~$reagent.impl.template/reagent-input","^6","reagent/impl/template.cljs","^:",20,"^3W",["^1>",[[]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",252,"^3[","^4>","^9",252,"^40",0,"^41",true,"^3T",["^1>",["^3U",["^1>",[[]]]]]],"~$fragment-element",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",298,"^8",7,"^9",298,"^:",23,"^3T",["^1>",["^3U",["^1>",[["^69"]]]]]],"^M","~$reagent.impl.template/fragment-element","^6","reagent/impl/template.cljs","^:",23,"^3W",["^1>",[["^69"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",298,"^3[","^4=","^9",298,"^40",1,"^41",true,"^3T",["^1>",["^3U",["^1>",[["^69"]]]]]],"~$vec-to-elem",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",351,"^8",7,"^9",351,"^:",18,"^3T",["^1>",["^3U",["^1>",[["~$v"]]]]]],"^M","~$reagent.impl.template/vec-to-elem","^6","reagent/impl/template.cljs","^:",18,"^3W",["^1>",[["~$v"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",351,"^3[",["^L",[null,"^4=","^4E"]],"^9",351,"^40",1,"^41",true,"^3T",["^1>",["^3U",["^1>",[["~$v"]]]]]],"~$cache-get",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",41,"^8",7,"^9",41,"^:",16,"^3T",["^1>",["^3U",["^1>",[["~$o","~$k"]]]]]],"^M","~$reagent.impl.template/cache-get","^6","reagent/impl/template.cljs","^:",16,"^3W",["^1>",[["~$o","~$k"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",41,"^3[",["^L",["^4=","^4>"]],"^9",41,"^40",2,"^41",true,"^3T",["^1>",["^3U",["^1>",[["~$o","~$k"]]]]]],"~$input-handle-change",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",200,"^8",7,"^9",200,"^:",26,"^3T",["^1>",["^3U",["^1>",[["^50","~$on-change","~$e"]]]]]],"^M","~$reagent.impl.template/input-handle-change","^6","reagent/impl/template.cljs","^:",26,"^3W",["^1>",[["^50","^6E","~$e"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",200,"^3[","^4=","^9",200,"^40",3,"^41",true,"^3T",["^1>",["^3U",["^1>",[["^50","^6E","~$e"]]]]]],"~$make-element",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",444,"^8",7,"^9",444,"^:",19,"^3T",["^1>",["^3U",["^1>",[["^69","^5E","^51","~$first-child"]]]]]],"^M","~$reagent.impl.template/make-element","^6","reagent/impl/template.cljs","^:",19,"^3W",["^1>",[["^69","^5E","^51","^6H"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",444,"^9",444,"^40",4,"^41",true,"^3T",["^1>",["^3U",["^1>",[["^69","^5E","^51","^6H"]]]]]],"~$input-spec",["^ ","^M","~$reagent.impl.template/input-spec","^6","reagent/impl/template.cljs","^7",242,"^8",1,"^9",242,"^:",16,"^5",["^ ","^6","reagent/impl/template.cljs","^7",242,"^8",6,"^9",242,"^:",16],"^3R","~$cljs.core/IMap"],"~$expand-seq-dev",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",399,"^8",7,"^9",399,"^:",21,"^3T",["^1>",["^3U",["^1>",[["~$s","~$o"]]]]]],"^M","~$reagent.impl.template/expand-seq-dev","^6","reagent/impl/template.cljs","^:",21,"^3W",["^1>",[["~$s","~$o"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",399,"^3[","~$array","^9",399,"^40",2,"^41",true,"^3T",["^1>",["^3U",["^1>",[["~$s","~$o"]]]]]],"~$convert-prop-value",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",63,"^8",7,"^9",63,"^:",25,"^3T",["^1>",["^3U",["^1>",[["~$x"]]]]]],"^M","~$reagent.impl.template/convert-prop-value","^6","reagent/impl/template.cljs","^:",25,"^3W",["^1>",[["~$x"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",63,"^3[",["^L",[null,"^4=","^12","^4P"]],"^9",63,"^40",1,"^41",true,"^3T",["^1>",["^3U",["^1>",[["~$x"]]]]]],"~$cached-prop-name",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",45,"^8",7,"^9",45,"^:",23,"^3T",["^1>",["^3U",["^1>",[["~$k"]]]]]],"^M","~$reagent.impl.template/cached-prop-name","^6","reagent/impl/template.cljs","^:",23,"^3W",["^1>",[["~$k"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",45,"^3[",["^L",[null,"^4=","^12","^4>"]],"^9",45,"^40",1,"^41",true,"^3T",["^1>",["^3U",["^1>",[["~$k"]]]]]],"~$cached-custom-prop-name",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",77,"^8",7,"^9",77,"^:",30,"^3T",["^1>",["^3U",["^1>",[["~$k"]]]]]],"^M","~$reagent.impl.template/cached-custom-prop-name","^6","reagent/impl/template.cljs","^:",30,"^3W",["^1>",[["~$k"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",77,"^3[",["^L",[null,"^4=","^12","^4>"]],"^9",77,"^40",1,"^41",true,"^3T",["^1>",["^3U",["^1>",[["~$k"]]]]]],"~$these-inputs-have-selection-api",["^ ","^M","~$reagent.impl.template/these-inputs-have-selection-api","^6","reagent/impl/template.cljs","^7",132,"^8",1,"^9",132,"^:",37,"^5",["^ ","^6","reagent/impl/template.cljs","^7",132,"^8",6,"^9",132,"^:",37],"^3R","~$cljs.core/ISet"],"~$expand-seq",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",396,"^8",7,"^9",396,"^:",17,"^3T",["^1>",["^3U",["^1>",[["~$s"]]]]]],"^M","~$reagent.impl.template/expand-seq","^6","reagent/impl/template.cljs","^:",17,"^3W",["^1>",[["~$s"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",396,"^3[","^6O","^9",396,"^40",1,"^41",true,"^3T",["^1>",["^3U",["^1>",[["~$s"]]]]]],"~$->HiccupTag",["^ ","^3Q",null,"^5",["^ ","^4L",["^L",[]],"^6","reagent/impl/template.cljs","^:",19,"^8",10,"^4T","^4U","^7",261,"^9",261,"^3T",["^1>",["^3U",["^1>",[["^4C","^4V","^4W","~$custom"]]]]],"^4Q",null,"^4@","Positional factory function for reagent.impl.template/HiccupTag."],"^4L",["^L",[]],"^M","~$reagent.impl.template/->HiccupTag","^6","reagent/impl/template.cljs","^:",19,"^3W",["^1>",[["^4C","^4V","^4W","^70"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^4T","^4U","^7",261,"^3[","^4M","^9",261,"^40",4,"^41",true,"^3T",["^1>",["^3U",["^1>",[["^4C","^4V","^4W","^70"]]]]],"^4Q",null,"^4@","Positional factory function for reagent.impl.template/HiccupTag."],"~$expand-seq-check",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",407,"^8",7,"^9",407,"^:",23,"^3T",["^1>",["^3U",["^1>",[["~$x"]]]]]],"^M","~$reagent.impl.template/expand-seq-check","^6","reagent/impl/template.cljs","^:",23,"^3W",["^1>",[["~$x"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",407,"^3[",["^L",[null,"^4=","^4>"]],"^9",407,"^40",1,"^41",true,"^3T",["^1>",["^3U",["^1>",[["~$x"]]]]]],"~$find-dom-node",["^ ","^M","~$reagent.impl.template/find-dom-node","^6","reagent/impl/template.cljs","^7",127,"^8",1,"^9",127,"^:",23,"^5",["^ ","^6","reagent/impl/template.cljs","^7",127,"^8",10,"^9",127,"^:",23],"^3R","^4>"],"~$cached-parse",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",314,"^8",7,"^9",314,"^:",19,"^3T",["^1>",["^3U",["^1>",[["~$x"]]]]]],"^M","~$reagent.impl.template/cached-parse","^6","reagent/impl/template.cljs","^:",19,"^3W",["^1>",[["~$x"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",314,"^3[",["^L",["^4=","^4M","^4>"]],"^9",314,"^40",1,"^41",true,"^3T",["^1>",["^3U",["^1>",[["~$x"]]]]]],"~$try-get-key",["^ ","^3Q",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",275,"^8",7,"^9",275,"^:",18,"^3T",["^1>",["^3U",["^1>",[["~$x"]]]]]],"^M","~$reagent.impl.template/try-get-key","^6","reagent/impl/template.cljs","^:",18,"^3W",["^1>",[["~$x"]]],"^3X",null,"^3Y",["^1>",[null,null]],"^8",1,"^3Z",false,"^7",275,"^9",275,"^40",1,"^41",true,"^3T",["^1>",["^3U",["^1>",[["~$x"]]]]]]],"^1<",["^ ","^D","^D","^W","^W","^V","^V","^11","^V"],"~:cljs.analyzer/constants",["^ ","^16",["^L",["^4C","~:key","~:else","~:component-did-update","~:<>","~:reagent-render","^70","~:on-write","~:id","~:class","~:component-will-unmount","^4W","~:display-name","^4V"]],"~:order",["^4C","^4V","^4W","^7<","^7A","^7B","^7@","^7D","^7=","^7C","^7?","^70","^7;","^7>"]],"^1C",["^ ","^17",["^L",[]]],"^1D",["^ "],"^1E",["^Z","^W","^?","^13","^15","^S","^U","^[","^V","^D","^Y"]],"^P","^N","~:ns-specs",["^ "],"~:ns-spec-vars",["^L",[]],"~:compiler-options",["^1S",[["^7H","~:static-fns"],true,["^7H","~:shadow-tweaks"],null,["^7H","~:elide-asserts"],false,["^7H","~:optimize-constants"],null,["^7H","^1J"],null,["^7H","~:external-config"],null,["^7H","~:tooling-config"],null,["^7H","~:emit-constants"],null,["^7H","~:load-tests"],null,["^7H","~:form-size-threshold"],null,["^7H","~:infer-externs"],"~:auto",["^7H","^1L"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^7H","~:fn-invoke-direct"],null,["^7H","~:source-map"],"/dev/null"]]]