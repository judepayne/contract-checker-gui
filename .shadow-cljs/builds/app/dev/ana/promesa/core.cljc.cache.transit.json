["^ ","~:output",["^ ","~:js","goog.provide('promesa.core');\r\ngoog.require('cljs.core');\r\ngoog.require('promesa.impl.promise');\r\ngoog.require('promesa.impl.proto');\r\ngoog.require('promesa.impl.scheduler');\r\npromesa.core.Promise = promesa.impl.promise.Promise;\r\n/**\r\n * Schedule a callable to be executed after the `ms` delay\r\n *   is reached.\r\n * \r\n *   In JVM it uses a scheduled executor service and in JS\r\n *   it uses the `setTimeout` function.\r\n */\r\npromesa.core.schedule = (function promesa$core$schedule(ms,func){\r\nreturn promesa.impl.scheduler.schedule(ms,func);\r\n});\r\n/**\r\n * Return a resolved promise with provided value.\r\n */\r\npromesa.core.resolved = (function promesa$core$resolved(v){\r\nreturn promesa.impl.promise.resolved(v);\r\n});\r\n/**\r\n * Return a rejected promise with provided reason.\r\n */\r\npromesa.core.rejected = (function promesa$core$rejected(v){\r\nreturn promesa.impl.promise.rejected(v);\r\n});\r\n/**\r\n * The promise constructor.\r\n */\r\npromesa.core.promise = (function promesa$core$promise(v){\r\nreturn promesa.impl.proto._promise(v);\r\n});\r\n/**\r\n * Return true if `v` is a promise instance.\r\n */\r\npromesa.core.promise_QMARK_ = (function promesa$core$promise_QMARK_(v){\r\nreturn (v instanceof promesa.core.Promise);\r\n});\r\n/**\r\n * Returns true if promise `p` is already fulfilled.\r\n */\r\npromesa.core.resolved_QMARK_ = (function promesa$core$resolved_QMARK_(p){\r\nreturn promesa.impl.proto._resolved_QMARK_(p);\r\n});\r\n/**\r\n * Returns true if promise `p` is already rejected.\r\n */\r\npromesa.core.rejected_QMARK_ = (function promesa$core$rejected_QMARK_(p){\r\nreturn promesa.impl.proto._rejected_QMARK_(p);\r\n});\r\n/**\r\n * Returns true if promise `p` is stil pending.\r\n */\r\npromesa.core.pending_QMARK_ = (function promesa$core$pending_QMARK_(p){\r\nreturn promesa.impl.proto._pending_QMARK_(p);\r\n});\r\n/**\r\n * Returns the current promise value.\r\n */\r\npromesa.core.extract = (function promesa$core$extract(p){\r\nreturn promesa.impl.proto._extract(p);\r\n});\r\n/**\r\n * Returns true if promise `p` is already done.\r\n */\r\npromesa.core.done_QMARK_ = cljs.core.complement(promesa.core.pending_QMARK_);\r\n/**\r\n * Apply a function to the promise value and\r\n *   return a new promise with the result.\r\n */\r\npromesa.core.map = (function promesa$core$map(f,p){\r\nreturn promesa.impl.proto._map(p,f);\r\n});\r\n/**\r\n * Same as `map` but removes one level of\r\n *   promise neesting. Useful when the map function\r\n *   returns a promise instead of value.\r\n * \r\n *   In JS environment this function is analogous\r\n *   to `map` because the promise abstraction overloads\r\n *   the `map` operator.\r\n */\r\npromesa.core.mapcat = (function promesa$core$mapcat(f,p){\r\nreturn promesa.impl.proto._bind(p,f);\r\n});\r\n/**\r\n * A chain helper for promises.\r\n */\r\npromesa.core.bind = (function promesa$core$bind(p,f){\r\nreturn promesa.impl.proto._bind(p,f);\r\n});\r\n/**\r\n * Same as `map` but with parameters inverted\r\n *   for convenience and for familiarity with\r\n *   javascript's promises `.then` operator.\r\n */\r\npromesa.core.then = (function promesa$core$then(p,f){\r\nreturn promesa.impl.proto._map(p,f);\r\n});\r\n/**\r\n * Like then but accepts multiple parameters.\r\n */\r\npromesa.core.chain = (function promesa$core$chain(var_args){\r\nvar args__4795__auto__ = [];\r\nvar len__4789__auto___38693 = arguments.length;\r\nvar i__4790__auto___38694 = (0);\r\nwhile(true){\r\nif((i__4790__auto___38694 < len__4789__auto___38693)){\r\nargs__4795__auto__.push((arguments[i__4790__auto___38694]));\r\n\r\nvar G__38695 = (i__4790__auto___38694 + (1));\r\ni__4790__auto___38694 = G__38695;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4796__auto__ = ((((1) < args__4795__auto__.length))?(new cljs.core.IndexedSeq(args__4795__auto__.slice((1)),(0),null)):null);\r\nreturn promesa.core.chain.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4796__auto__);\r\n});\r\n\r\n(promesa.core.chain.cljs$core$IFn$_invoke$arity$variadic = (function (p,funcs){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__38674_SHARP_,p2__38675_SHARP_){\r\nreturn promesa.core.then(p1__38674_SHARP_,p2__38675_SHARP_);\r\n}),p,funcs);\r\n}));\r\n\r\n(promesa.core.chain.cljs$lang$maxFixedArity = (1));\r\n\r\n/** @this {Function} */\r\n(promesa.core.chain.cljs$lang$applyTo = (function (seq38676){\r\nvar G__38677 = cljs.core.first(seq38676);\r\nvar seq38676__$1 = cljs.core.next(seq38676);\r\nvar self__4776__auto__ = this;\r\nreturn self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__38677,seq38676__$1);\r\n}));\r\n\r\npromesa.core.branch = (function promesa$core$branch(p,success,failure){\r\nreturn promesa.impl.proto._catch(promesa.impl.proto._map(p,success),failure);\r\n});\r\n/**\r\n * Catch all promise chain helper.\r\n */\r\npromesa.core.catch$ = (function promesa$core$catch(var_args){\r\nvar G__38680 = arguments.length;\r\nswitch (G__38680) {\r\ncase 2:\r\nreturn promesa.core.catch$.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn promesa.core.catch$.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(promesa.core.catch$.cljs$core$IFn$_invoke$arity$2 = (function (p,f){\r\nreturn promesa.impl.proto._catch(p,f);\r\n}));\r\n\r\n(promesa.core.catch$.cljs$core$IFn$_invoke$arity$3 = (function (p,pred_or_type,f){\r\nvar accept_QMARK_ = ((cljs.core.ifn_QMARK_(pred_or_type))?pred_or_type:(function (p1__38678_SHARP_){\r\nreturn (p1__38678_SHARP_ instanceof pred_or_type);\r\n}));\r\nreturn promesa.impl.proto._catch(p,(function (e){\r\nif(cljs.core.truth_((accept_QMARK_.cljs$core$IFn$_invoke$arity$1 ? accept_QMARK_.cljs$core$IFn$_invoke$arity$1(e) : accept_QMARK_.call(null,e)))){\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(e) : f.call(null,e));\r\n} else {\r\nreturn promesa.impl.promise.rejected(e);\r\n}\r\n}));\r\n}));\r\n\r\n(promesa.core.catch$.cljs$lang$maxFixedArity = 3);\r\n\r\n/**\r\n * Same as `catch` but with parameters inverted.\r\n */\r\npromesa.core.error = (function promesa$core$error(var_args){\r\nvar G__38682 = arguments.length;\r\nswitch (G__38682) {\r\ncase 2:\r\nreturn promesa.core.error.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn promesa.core.error.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(promesa.core.error.cljs$core$IFn$_invoke$arity$2 = (function (f,p){\r\nreturn promesa.core.catch$.cljs$core$IFn$_invoke$arity$2(p,f);\r\n}));\r\n\r\n(promesa.core.error.cljs$core$IFn$_invoke$arity$3 = (function (f,type,p){\r\nreturn promesa.core.catch$.cljs$core$IFn$_invoke$arity$3(p,type,f);\r\n}));\r\n\r\n(promesa.core.error.cljs$lang$maxFixedArity = 3);\r\n\r\n/**\r\n * A short alias for `error` function.\r\n */\r\npromesa.core.err = promesa.core.error;\r\n/**\r\n * Attach handler to promise that will be\r\n *   executed independently if promise is\r\n *   resolved or rejected.\r\n */\r\npromesa.core.finally$ = (function promesa$core$finally(p,callback){\r\nreturn p.finally(callback);\r\n});\r\n/**\r\n * Given an array of promises, return a promise\r\n *   that is fulfilled  when all the items in the\r\n *   array are fulfilled.\r\n */\r\npromesa.core.all = (function promesa$core$all(promises){\r\nreturn promesa.core.then(promesa.core.Promise.all(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(promises)),cljs.core.vec);\r\n});\r\n/**\r\n * Given an array of promises, return a promise\r\n *   that is fulfilled when first one item in the\r\n *   array is fulfilled.\r\n */\r\npromesa.core.any = (function promesa$core$any(promises){\r\nreturn promesa.core.Promise.any(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(promises));\r\n});\r\n/**\r\n * Cancel the promise.\r\n */\r\npromesa.core.cancel_BANG_ = (function promesa$core$cancel_BANG_(p){\r\npromesa.impl.proto._cancel(p);\r\n\r\nreturn p;\r\n});\r\n/**\r\n * Return true if `v` is a cancelled promise.\r\n */\r\npromesa.core.cancelled_QMARK_ = (function promesa$core$cancelled_QMARK_(v){\r\nreturn promesa.impl.proto._cancelled_QMARK_(v);\r\n});\r\n/**\r\n * Given a function that accepts a callback as the last argument return other\r\n *   function that returns a promise. Callback is expected to take single\r\n *   parameter (result of a computation).\r\n */\r\npromesa.core.promisify = (function promesa$core$promisify(callable){\r\nreturn (function() { \r\nvar G__38698__delegate = function (args){\r\nreturn promesa.core.promise((function (resolve,reject){\r\nvar args__$1 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(args),resolve);\r\ntry{return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(callable,args__$1);\r\n}catch (e38683){if((e38683 instanceof Error)){\r\nvar e = e38683;\r\nreturn (reject.cljs$core$IFn$_invoke$arity$1 ? reject.cljs$core$IFn$_invoke$arity$1(e) : reject.call(null,e));\r\n} else {\r\nthrow e38683;\r\n\r\n}\r\n}}));\r\n};\r\nvar G__38698 = function (var_args){\r\nvar args = null;\r\nif (arguments.length > 0) {\r\nvar G__38699__i = 0, G__38699__a = new Array(arguments.length -  0);\r\nwhile (G__38699__i < G__38699__a.length) {G__38699__a[G__38699__i] = arguments[G__38699__i + 0]; ++G__38699__i;}\r\n  args = new cljs.core.IndexedSeq(G__38699__a,0,null);\r\n} \r\nreturn G__38698__delegate.call(this,args);};\r\nG__38698.cljs$lang$maxFixedArity = 0;\r\nG__38698.cljs$lang$applyTo = (function (arglist__38700){\r\nvar args = cljs.core.seq(arglist__38700);\r\nreturn G__38698__delegate(args);\r\n});\r\nG__38698.cljs$core$IFn$_invoke$arity$variadic = G__38698__delegate;\r\nreturn G__38698;\r\n})()\r\n;\r\n});\r\n/**\r\n * Returns a cancellable promise that will be fulfilled\r\n *   with this promise's fulfillment value or rejection reason.\r\n *   However, if this promise is not fulfilled or rejected\r\n *   within `ms` milliseconds, the returned promise is cancelled\r\n *   with a TimeoutError\r\n */\r\npromesa.core.timeout = (function promesa$core$timeout(var_args){\r\nvar G__38686 = arguments.length;\r\nswitch (G__38686) {\r\ncase 2:\r\nreturn promesa.core.timeout.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn promesa.core.timeout.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(promesa.core.timeout.cljs$core$IFn$_invoke$arity$2 = (function (p,t){\r\nreturn p.timeout(t);\r\n}));\r\n\r\n(promesa.core.timeout.cljs$core$IFn$_invoke$arity$3 = (function (p,t,v){\r\nreturn p.timeout(t,v);\r\n}));\r\n\r\n(promesa.core.timeout.cljs$lang$maxFixedArity = 3);\r\n\r\n/**\r\n * Given a timeout in miliseconds and optional\r\n *   value, returns a promise that will fulfilled\r\n *   with provided value (or nil) after the\r\n *   time is reached.\r\n */\r\npromesa.core.delay = (function promesa$core$delay(var_args){\r\nvar G__38690 = arguments.length;\r\nswitch (G__38690) {\r\ncase 1:\r\nreturn promesa.core.delay.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn promesa.core.delay.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(promesa.core.delay.cljs$core$IFn$_invoke$arity$1 = (function (t){\r\nreturn promesa.core.delay.cljs$core$IFn$_invoke$arity$2(t,null);\r\n}));\r\n\r\n(promesa.core.delay.cljs$core$IFn$_invoke$arity$2 = (function (t,v){\r\nreturn promesa.core.Promise.delay(t).then(cljs.core.constantly(v));\r\n}));\r\n\r\n(promesa.core.delay.cljs$lang$maxFixedArity = 2);\r\n\r\n/**\r\n * A helper for start promise chain without worry about\r\n *   synchronous or asynchronous exceptions. Returns a promise\r\n *   resolved with the return value of the callback.\r\n */\r\npromesa.core.attempt = (function promesa$core$attempt(callback){\r\nreturn promesa.core.promise((function (resolve){\r\nvar G__38691 = (callback.cljs$core$IFn$_invoke$arity$0 ? callback.cljs$core$IFn$_invoke$arity$0() : callback.call(null));\r\nreturn (resolve.cljs$core$IFn$_invoke$arity$1 ? resolve.cljs$core$IFn$_invoke$arity$1(G__38691) : resolve.call(null,G__38691));\r\n}));\r\n});\r\npromesa.core.await$ = (function promesa$core$await(var_args){\r\nvar args__4795__auto__ = [];\r\nvar len__4789__auto___38705 = arguments.length;\r\nvar i__4790__auto___38706 = (0);\r\nwhile(true){\r\nif((i__4790__auto___38706 < len__4789__auto___38705)){\r\nargs__4795__auto__.push((arguments[i__4790__auto___38706]));\r\n\r\nvar G__38707 = (i__4790__auto___38706 + (1));\r\ni__4790__auto___38706 = G__38707;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4796__auto__ = ((((0) < args__4795__auto__.length))?(new cljs.core.IndexedSeq(args__4795__auto__.slice((0)),(0),null)):null);\r\nreturn promesa.core.await$.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);\r\n});\r\n\r\n(promesa.core.await$.cljs$core$IFn$_invoke$arity$variadic = (function (args){\r\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Should be only used in alet macro.\",cljs.core.PersistentArrayMap.EMPTY);\r\n}));\r\n\r\n(promesa.core.await$.cljs$lang$maxFixedArity = (0));\r\n\r\n/** @this {Function} */\r\n(promesa.core.await$.cljs$lang$applyTo = (function (seq38692){\r\nvar self__4777__auto__ = this;\r\nreturn self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq38692));\r\n}));\r\n\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","promesa/core.cljc","~:line",25,"~:column",5,"~:end-line",25,"~:end-column",17],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",null,"~:excludes",["~#set",["~$map","~$delay","~$mapcat","~$await","~$spread","~$promise"]],"~:name","~$promesa.core","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$promesa.impl.promise","^Q","~$pm","^Q","~$promesa.impl.proto","^S","~$pt","^S","~$promesa.impl.scheduler","^U","~$ps","^U","~$cljs.core","^W","~$goog","^X"],"~:seen",["^D",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^W","^W"],"~:form",["~#list",["~$ns","^L",["^12",["~:refer-clojure","~:exclude",["^F","^I","^J","^H","^E","^G"]]],["^12",["^Z",["^Q","~:as","^R"],["^S","^16","^T"],["^U","^16","^V"]]]]],"~:flags",["^ ","^Z",["^D",[]]],"~:js-deps",["^ "],"~:deps",["^X","^W","^Q","^S","^U"]],"^N","^L","~:resource-id",["~:shadow.build.classpath/resource","promesa/core.cljc"],"~:compiled-at",1579687555439,"~:resource-name","promesa/core.cljc","~:warnings",[],"~:source",";; Copyright (c) 2015-2016 Andrey Antukh <niwi@niwi.nz>\n;; All rights reserved.\n;;\n;; Redistribution and use in source and binary forms, with or without\n;; modification, are permitted provided that the following conditions\n;; are met:\n;;\n;; 1. Redistributions of source code must retain the above copyright\n;;    notice, this list of conditions and the following disclaimer.\n;; 2. Redistributions in binary form must reproduce the above copyright\n;;    notice, this list of conditions and the following disclaimer in the\n;;    documentation and/or other materials provided with the distribution.\n;;\n;; THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n;; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n;; OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n;; IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n;; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n;; NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n;; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n;; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n;; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n;; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n(ns promesa.core\n  (:refer-clojure :exclude [delay spread promise await map mapcat])\n  (:require [promesa.impl.promise :as pm]\n            [promesa.impl.proto :as pt]\n            [promesa.impl.scheduler :as ps])\n  #?(:clj\n     (:import java.util.concurrent.CompletableFuture\n              java.util.concurrent.CompletionStage)))\n\n;; --- Global Constants\n\n#?(:cljs (def ^:const Promise pm/Promise))\n\n#?(:clj\n   (defn set-executor!\n     \"Replace the default executor instance with\n     your own instance.\"\n     [executor]\n     (alter-var-root #'pm/+executor+ (constantly executor))))\n\n;; --- Scheduling helpers\n\n(defn schedule\n  \"Schedule a callable to be executed after the `ms` delay\n  is reached.\n\n  In JVM it uses a scheduled executor service and in JS\n  it uses the `setTimeout` function.\"\n  [ms func]\n  (ps/schedule ms func))\n\n;; --- Promise\n\n(defn resolved\n  \"Return a resolved promise with provided value.\"\n  [v]\n  (pm/resolved v))\n\n(defn rejected\n  \"Return a rejected promise with provided reason.\"\n  [v]\n  (pm/rejected v))\n\n(defn promise\n  \"The promise constructor.\"\n  [v]\n  (pt/-promise v))\n\n(defn promise?\n  \"Return true if `v` is a promise instance.\"\n  [v]\n  #?(:clj (instance? CompletionStage v)\n     :cljs (instance? Promise v)))\n\n;; Predicates\n\n(defn resolved?\n  \"Returns true if promise `p` is already fulfilled.\"\n  [p]\n  (pt/-resolved? p))\n\n(defn rejected?\n  \"Returns true if promise `p` is already rejected.\"\n  [p]\n  (pt/-rejected? p))\n\n(defn pending?\n  \"Returns true if promise `p` is stil pending.\"\n  [p]\n  (pt/-pending? p))\n\n(defn extract\n  \"Returns the current promise value.\"\n  [p]\n  (pt/-extract p))\n\n(def done?\n  \"Returns true if promise `p` is already done.\"\n  (complement pending?))\n\n;; Chaining\n\n(defn map\n  \"Apply a function to the promise value and\n  return a new promise with the result.\"\n  [f p]\n  (pt/-map p f))\n\n(defn mapcat\n  \"Same as `map` but removes one level of\n  promise neesting. Useful when the map function\n  returns a promise instead of value.\n\n  In JS environment this function is analogous\n  to `map` because the promise abstraction overloads\n  the `map` operator.\"\n  [f p]\n  (pt/-bind p f))\n\n(defn bind\n  \"A chain helper for promises.\"\n  [p f]\n  (pt/-bind p f))\n\n(defn then\n  \"Same as `map` but with parameters inverted\n  for convenience and for familiarity with\n  javascript's promises `.then` operator.\"\n  [p f]\n  (pt/-map p f))\n\n(defn chain\n  \"Like then but accepts multiple parameters.\"\n  [p & funcs]\n  (reduce #(then %1 %2) p funcs))\n\n(defn branch\n  [p success failure]\n  (-> p\n      (pt/-map success)\n      (pt/-catch failure)))\n\n(defn catch\n  \"Catch all promise chain helper.\"\n  ([p f]\n   (pt/-catch p f))\n  ([p pred-or-type f]\n   (let [accept? (if (ifn? pred-or-type)\n                   pred-or-type\n                   #(instance? pred-or-type %))]\n     (pt/-catch p (fn [e]\n                    (if (accept? e)\n                      (f e)\n                      (pm/rejected e)))))))\n\n(defn error\n  \"Same as `catch` but with parameters inverted.\"\n  ([f p] (catch p f))\n  ([f type p] (catch p type f)))\n\n(def err\n  \"A short alias for `error` function.\"\n  error)\n\n(defn finally\n  \"Attach handler to promise that will be\n  executed independently if promise is\n  resolved or rejected.\"\n  [p callback]\n  #?(:clj (-> p\n              (then #(callback))\n              (catch #(callback)))\n     :cljs (.finally p callback)))\n\n(defn all\n  \"Given an array of promises, return a promise\n  that is fulfilled  when all the items in the\n  array are fulfilled.\"\n  [promises]\n  #?(:cljs (then (.all Promise (into-array promises)) vec)\n     :clj (let [promises (clojure.core/map pt/-promise promises)]\n            (then (->> (into-array CompletableFuture promises)\n                       (CompletableFuture/allOf))\n                  (fn [_]\n                    (mapv pt/-extract promises))))))\n\n(defn any\n  \"Given an array of promises, return a promise\n  that is fulfilled when first one item in the\n  array is fulfilled.\"\n  [promises]\n  #?(:cljs (.any Promise (into-array promises))\n     :clj (->> (clojure.core/map pt/-promise promises)\n               (into-array CompletableFuture)\n               (CompletableFuture/anyOf))))\n\n;; Cancellation\n\n(defn cancel!\n  \"Cancel the promise.\"\n  [p]\n  (pt/-cancel p)\n  p)\n\n(defn cancelled?\n  \"Return true if `v` is a cancelled promise.\"\n  [v]\n  (pt/-cancelled? v))\n\n;; Utils\n\n(defn promisify\n  \"Given a function that accepts a callback as the last argument return other\n  function that returns a promise. Callback is expected to take single\n  parameter (result of a computation).\"\n  [callable]\n  (fn [& args]\n    (promise (fn [resolve reject]\n               (let [args (-> (vec args)\n                              (conj resolve))]\n                 (try\n                   (apply callable args)\n                   (catch #?(:clj Throwable :cljs js/Error) e\n                     (reject e))))))))\n\n#?(:cljs\n   (defn timeout\n     \"Returns a cancellable promise that will be fulfilled\n     with this promise's fulfillment value or rejection reason.\n     However, if this promise is not fulfilled or rejected\n     within `ms` milliseconds, the returned promise is cancelled\n     with a TimeoutError\"\n     ([p t] (.timeout p t))\n     ([p t v] (.timeout p t v))))\n\n(defn delay\n  \"Given a timeout in miliseconds and optional\n  value, returns a promise that will fulfilled\n  with provided value (or nil) after the\n  time is reached.\"\n  ([t] (delay t nil))\n  ([t v]\n   #?(:cljs (.then (.delay Promise t)\n                   (constantly v))\n      :clj (let [p (CompletableFuture.)]\n             (schedule t #(.complete p v))\n             p))))\n\n(defn attempt\n  \"A helper for start promise chain without worry about\n  synchronous or asynchronous exceptions. Returns a promise\n  resolved with the return value of the callback.\"\n  [callback]\n  #?(:cljs (promise (fn [resolve] (resolve (callback))))\n     :clj  (promise (fn [resolve reject]\n                      (let [result (callback)]\n                        (if (promise? result)\n                          (then result resolve)\n                          (resolve result)))))))\n\n#?(:clj\n   (defmacro do*\n     \"A sugar syntax on top of `attempt`.\"\n     [& body]\n     `(attempt #(do ~@body))))\n\n(defn await\n  [& args]\n  (throw (ex-info \"Should be only used in alet macro.\" {})))\n\n#?(:clj\n   (defmacro alet\n     \"A `let` alternative that always returns promise and allows\n     use `await` marker function in order to emulate the async/await\n     syntax and make the let expression look like synchronous where\n     async operations are performed.\"\n     [bindings & body]\n     (->> (reverse (partition 2 bindings))\n          (reduce (fn [acc [l r]]\n                    (if (and (coll? r) (symbol? (first r)))\n                      (let [mark (name (first r))]\n                        (if (= mark \"await\")\n                          `(bind ~(second r) (fn [~l] ~acc))\n                          `(let [~l ~r] ~acc)))\n                      `(let [~l ~r] ~acc)))\n                  `(promise (do ~@body))))))\n\n","~:reader-features",["^D",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings",";;;;;AAmCS,AAAaA,AAAQC;AAW9B;;;;;;;AAAA,AAAMC,AAMHC,AAAGC;AANN,AAOE,AAACC,AAAYF,AAAGC;;AAIlB;;;AAAA,AAAME,AAEHC;AAFH,AAGE,AAACC,AAAYD;;AAEf;;;AAAA,AAAME,AAEHF;AAFH,AAGE,AAACG,AAAYH;;AAEf;;;AAAA,AAAMI,AAEHJ;AAFH,AAGE,AAACK,AAAYL;;AAEf;;;AAAA,AAAMM,AAEHN;AAFH,AAIW,AAAWP,AAAQO;;AAI9B;;;AAAA,AAAMO,AAEHC;AAFH,AAGE,AAACC,AAAcD;;AAEjB;;;AAAA,AAAME,AAEHF;AAFH,AAGE,AAACG,AAAcH;;AAEjB;;;AAAA,AAAMI,AAEHJ;AAFH,AAGE,AAACK,AAAaL;;AAEhB;;;AAAA,AAAMM,AAEHN;AAFH,AAGE,AAACO,AAAYP;;AAEf;;;AAAKQ,AAEH,AAACC,AAAWL;AAId;;;;AAAA,AAAMM,AAGHC,AAAEX;AAHL,AAIE,AAACY,AAAQZ,AAAEW;;AAEb;;;;;;;;;AAAA,AAAME,AAQHF,AAAEX;AARL,AASE,AAACc,AAASd,AAAEW;;AAEd;;;AAAA,AAAMI,AAEHf,AAAEW;AAFL,AAGE,AAACG,AAASd,AAAEW;;AAEd;;;;;AAAA,AAAMK,AAIHhB,AAAEW;AAJL,AAKE,AAACC,AAAQZ,AAAEW;;AAEb,AAAA;;;AAAA,AAAAM,AAAMM;AAAN,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAK,AAAA,AAAA,AAAA,AAAAF;;;AAAA,AAAA,AAAA,AAAA,AAAME,AAEHvB,AAAI6B;AAFP,AAGE,AAAA,AAAAC,AAAAC,AAACC;AAAD,AAAS,AAAAF,AAAAC,AAACf;AAAYhB,AAAE6B;;;AAH1B,AAAA,AAAA,AAAMN;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAE,AAAA,AAAAC,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAA,AAAA,AAAAI,AAAA;AAAA,AAAA,AAAAA,AAAAH,AAAAD;;;AAAA,AAKA,AAAA,AAAMS,AACHjC,AAAEkC,AAAQC;AADb,AAEMnC,AACA,AAACY,AAAQsB,AACT,AAACE,AAAUD;;AAEjB,AAAA;;;AAAA,AAAAlB,AAAMqB;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMD,AAEFtC,AAAEW;AAFN,AAGG,AAACyB,AAAUpC,AAAEW;;;AAHhB,AAAA,AAAA,AAAM2B,AAIFtC,AAAEwC,AAAa7B;AAJnB,AAKG,AAAM8B,AAAQ,AAAA,AAAAC,AAAI,AAACC,AAAKH,AACRA;AADF,AAEG,AAAAE,AAAWF;;AAF5B,AAGE,AAACJ,AAAUpC,AAAE,AAAK4C;AAAL,AACE,AAAI,AAACH,AAAAA,AAAAA,AAAQG,AAAAA;AACX,AAACjC,AAAAA,AAAAA,AAAEiC,AAAAA;;AACH,AAACjD,AAAYiD;;;;;AAXnC,AAAA,AAAA,AAAMN;;AAAN,AAaA,AAAA;;;AAAA,AAAArB,AAAM6B;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAP,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMO,AAEFnC,AAAEX;AAFN,AAES,AAAC+C,AAAM/C,AAAEW;;;AAFlB,AAAA,AAAA,AAAMmC,AAGFnC,AAAEqC,AAAKhD;AAHX,AAGc,AAACiD,AAAMjD,AAAEgD,AAAKrC;;;AAH5B,AAAA,AAAA,AAAMmC;;AAAN,AAKA;;;AAAKI,AAEHJ;AAEF;;;;;AAAA,AAAMK,AAIHnD,AAAEoD;AAJL,AAQW,AAAUpD,AAAEoD;;AAEvB;;;;;AAAA,AAAMC,AAIHC;AAJH,AAKW,AAACtC,AAAK,AAAM/B,AAAQ,AAACsE,AAAWD,AAAWE;;AAOtD;;;;;AAAA,AAAMC,AAIHH;AAJH,AAKW,AAAMrE,AAAQ,AAACsE,AAAWD;;AAOrC;;;AAAA,AAAMI,AAEH1D;AAFH,AAGE,AAAC2D,AAAW3D;;AACZA;;AAEF;;;AAAA,AAAM4D,AAEHpE;AAFH,AAGE,AAACqE,AAAerE;;AAIlB;;;;;AAAA,AAAMsE,AAIHC;AAJH,AAKE;AAAOC;AAAP,AACE,AAACpE,AAAQ,AAAKqE,AAAQC;AAAb,AACE,AAAMF,AAAS,AAACR,AAAIQ,AACL,AAACG,AAAKF;AADrB,AAEE,AAAA,AACE,AAACI,AAAMN,AAASC;AADlB,AAAA,AAAAI,AAEiC7B;AAFjC,AAAA6B,AAE2CxB;AAF3C,AAGI,AAACsB,AAAAA,AAAAA,AAAOtB,AAAAA;;AAHZ,AAAA,AAAAwB;;;;;;AAJRJ;;;;AAAAA;;AAAAA;;;AAAAA;AAAAA;;;;;;;AAUN,AAAA;;;;;;;AAAA,AAAA/C,AAAMsD;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAhC,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMgC,AAMFvE,AAAEwE;AANN,AAMS,AAAUxE,AAAEwE;;;AANrB,AAAA,AAAA,AAAMD,AAOFvE,AAAEwE,AAAEhF;AAPR,AAOW,AAAUQ,AAAEwE,AAAEhF;;;AAPzB,AAAA,AAAA,AAAM+E;;AAAN,AASH,AAAA;;;;;;AAAA,AAAAtD,AAAMyD;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAnC,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMmC,AAKFF;AALJ,AAKO,AAAA,AAACG,AAAMH;;;AALd,AAAA,AAAA,AAAME,AAMFF,AAAEhF;AANN,AAOY,AAAO,AAAQP,AAAQuF,AAChB,AAACI,AAAWpF;;;AAR/B,AAAA,AAAA,AAAMkF;;AAAN,AAaA;;;;;AAAA,AAAMG,AAIHzB;AAJH,AAKW,AAACxD,AAAQ,AAAKqE;AAAL,AAAc,AAAAa,AAAS,AAAC1B,AAAAA,AAAAA;AAAV,AAAA,AAAA0B,AAAAA,AAACb,AAAAA,AAAAA;;;AAanC,AAAA,AAAA,AAAAhD,AAAM8D;AAAN,AAAA,AAAA7D,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAA6D,AAAA1D;;;AAAA,AAAA,AAAA,AAAA,AAAM0D,AACDf;AADL,AAEE,AAAO,AAAA,AAAA,AAACmB;;;AAFV,AAAA,AAAA,AAAMJ;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAE,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC,AAAAF;;;AAAA","names",["promesa.core/Promise","promesa.impl.promise/Promise","promesa.core/schedule","ms","func","promesa.impl.scheduler/schedule","promesa.core/resolved","v","promesa.impl.promise/resolved","promesa.core/rejected","promesa.impl.promise/rejected","promesa.core/promise","promesa.impl.proto/-promise","promesa.core/promise?","promesa.core/resolved?","p","promesa.impl.proto/-resolved?","promesa.core/rejected?","promesa.impl.proto/-rejected?","promesa.core/pending?","promesa.impl.proto/-pending?","promesa.core/extract","promesa.impl.proto/-extract","promesa.core/done?","cljs.core/complement","promesa.core/map","f","promesa.impl.proto/-map","promesa.core/mapcat","promesa.impl.proto/-bind","promesa.core/bind","promesa.core/then","var_args","args__4795__auto__","len__4789__auto__","i__4790__auto__","argseq__4796__auto__","cljs.core/IndexedSeq","promesa.core/chain","seq38676","G__38677","cljs.core/first","cljs.core/next","self__4776__auto__","funcs","p1__38674#","p2__38675#","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","promesa.core/branch","success","failure","promesa.impl.proto/-catch","G__38680","promesa.core/catch","js/Error","pred-or-type","accept?","p1__38678#","cljs.core/ifn?","e","G__38682","promesa.core/error","promesa.core.catch$.cljs$core$IFn$_invoke$arity$2","type","promesa.core.catch$.cljs$core$IFn$_invoke$arity$3","promesa.core/err","promesa.core/finally","callback","promesa.core/all","promises","cljs.core.into_array.cljs$core$IFn$_invoke$arity$1","cljs.core/vec","promesa.core/any","promesa.core/cancel!","promesa.impl.proto/-cancel","promesa.core/cancelled?","promesa.impl.proto/-cancelled?","promesa.core/promisify","callable","args","resolve","reject","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","e38683","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","G__38686","promesa.core/timeout","t","G__38690","promesa.core/delay","promesa.core.delay.cljs$core$IFn$_invoke$arity$2","cljs.core/constantly","promesa.core/attempt","G__38691","promesa.core/await","seq38692","self__4777__auto__","cljs.core/seq","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2"]]],"~:cache-keys",["~#cmap",[["^1;","goog/dom/tagname.js"],[1579687410012,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^D",[]],"~:deps-syms",["^X","~$goog.dom.HtmlElement"]]],["^1;","goog/math/math.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X","~$goog.array","~$goog.asserts"]]],["^1;","goog/html/trustedtypes.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X"]]],["^1;","goog/labs/useragent/browser.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X","^1M","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1;","goog/html/safeurl.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X","^1N","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^1Q"]]],["^1;","goog/array/array.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X","^1N"]]],["~:shadow.build.npm/resource","node_modules/bluebird/js/browser/bluebird.js"],[1579687469000,1579687469000,1579640166173,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["~$shadow.js","~$module$node_modules$process$browser"]]],["^1;","goog/debug/error.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X"]]],["^1;","promesa/impl/scheduler.cljc"],[1579687471777,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X","^W","^S"]]],["^1;","goog/dom/nodetype.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X"]]],["^1;","goog/string/typedstring.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X"]]],["^1;","shadow/js.js"],[1579687469605,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X"]]],["^1;","goog/object/object.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X"]]],["^1;","goog/dom/asserts.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X","^1N"]]],"~:SHADOW-TIMESTAMP",[1579687469000,1579687405000],["^1;","goog/math/long.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X","^1N","~$goog.reflect"]]],["^1;","goog/html/trustedresourceurl.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X","^1N","~$goog.html.trustedtypes","^1T","^1U","^1V","^1W"]]],["^1;","goog/string/internal.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X"]]],["^1;","goog/functions/functions.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X"]]],["^1;","goog/html/safestyle.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X","^1M","^1N","~$goog.html.SafeUrl","^1V","^1W","^1Q"]]],["^1;","goog/dom/safe.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X","^1N","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^22","^1S","~$goog.html.uncheckedconversions","^1V","^1Q"]]],["^1;","goog/structs/map.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1;","goog/html/safehtml.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X","^1M","^1N","~$goog.dom.TagName","~$goog.dom.tags","^26","^27","~$goog.html.SafeStyleSheet","^22","^1S","^21","^1T","^1U","~$goog.labs.userAgent.browser","^1P","^1V","^1W","^1Q"]]],["^1;","goog/dom/tags.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X","^1P"]]],["^1;","promesa/impl/proto.cljc"],[1579687471777,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X","^W"]]],["^1;","goog/asserts/asserts.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1;","goog/uri/uri.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X","^1M","^1N","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1;","goog/i18n/bidi.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X"]]],["^1X","node_modules/process/browser.js"],[1579687469000,1579687469000,1579640166236,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^1Y"]]],["^1;","goog/fs/url.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X"]]],["^1;","goog/base.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",[]]],["^1;","promesa/core.cljc"],[1579687471777,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X","^W","^Q","^S","^U"]]],["^1;","goog/structs/structs.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X","^1M","^1P"]]],["^1;","org/bluebird.cljs"],[1579687470322,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X","^W","~$module$node_modules$bluebird$js$browser$bluebird"]]],["^1;","goog/string/string.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X","~$goog.dom.safe","^28","^1V","^1Q"]]],["^1;","goog/reflect/reflect.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X"]]],["^1;","goog/labs/useragent/util.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X","^1Q"]]],["^1;","goog/string/stringbuffer.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X"]]],["^1;","goog/iter/iter.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X","^1M","^1N","^24","~$goog.math"]]],["^1;","goog/html/uncheckedconversions.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X","^1N","^25","^26","^27","^2=","^22","^1S","^1V","^1Q"]]],["^1;","goog/dom/htmlelement.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X"]]],["^1;","cljs/core.cljs"],[1579687405264,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["~$goog.math.Long","~$goog.math.Integer","^2A","^1P","^1M","~$goog.Uri","~$goog.string.StringBuffer"]]],["^1;","goog/html/safescript.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X","^1N","^21","^1V","^1W"]]],["^1;","goog/html/safestylesheet.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X","^1M","^1N","^27","^1P","^1V","^1W","^1Q"]]],["^1;","goog/math/integer.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X","^20"]]],["^1;","goog/uri/utils.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X","^1M","^1N","^2A"]]],["^1;","goog/string/const.js"],[1579687410012,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X","^1N","^1W"]]],["^1;","promesa/impl/promise.cljc"],[1579687471777,"^1H",["^ ","^1I",null,"^1J",["^D",[]],"^1K",["^X","^W","~$org.bluebird","^S"]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map.clj",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1579687401000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64.clj",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1579687402000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1579687402000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/analyzer.cljc",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1579687402000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/tagged_literals.cljc",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/util.cljc",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/compiler.cljc",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64_vlq.clj",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1579687402000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1579687401000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1579687401000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/externs.clj",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1579687401000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/js_deps.cljc",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1579687401000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1579687401000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1579687402000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1579687402000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1579687402000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/core.cljc",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/env.cljc",1579687405000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","promesa/core.cljc","^7",25,"^8",5,"^9",25,"^:",17],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",null,"^C",["^D",["^E","^F","^G","^H","^I","^J"]],"^K","^L","^O",null,"^P",["^ ","^Q","^Q","^R","^Q","^S","^S","^T","^S","^U","^U","^V","^U","^W","^W","^X","^X"],"^Y",["^D",["^Z"]],"~:shadow/js-access-global",["^D",["Error"]],"^[",null,"~:defs",["^ ","~$timeout",["^ ","~:protocol-inline",null,"^5",["^ ","^6","promesa/core.cljc","^7",231,"^8",10,"^9",231,"^:",17,"~:arglists",["^12",["~$quote",["^12",[["~$p","~$t"],["~$p","~$t","~$v"]]]]],"~:doc","Returns a cancellable promise that will be fulfilled\n     with this promise's fulfillment value or rejection reason.\n     However, if this promise is not fulfilled or rejected\n     within `ms` milliseconds, the returned promise is cancelled\n     with a TimeoutError","~:top-fn",["^ ","~:variadic?",false,"~:fixed-arity",3,"~:max-fixed-arity",3,"~:method-params",["^12",[["~$p","~$t"],["~$p","~$t","~$v"]]],"^3A",["^12",[["~$p","~$t"],["~$p","~$t","~$v"]]],"~:arglists-meta",["^12",[null,null]]]],"^K","~$promesa.core/timeout","^6","promesa/core.cljc","^:",17,"^3D",["^ ","^3E",false,"^3F",3,"^3G",3,"^3H",["^12",[["~$p","~$t"],["~$p","~$t","~$v"]]],"^3A",["^12",[["~$p","~$t"],["~$p","~$t","~$v"]]],"^3I",["^12",[null,null]]],"^3H",["^12",[["~$p","~$t"],["~$p","~$t","~$v"]]],"~:protocol-impl",null,"^3F",3,"^3I",["^12",[null,null]],"^8",4,"^3E",false,"~:methods",[["^ ","^3F",2,"^3E",false,"~:tag","~$any"],["^ ","^3F",3,"^3E",false,"^3M","^3N"]],"^7",231,"^9",231,"^3G",3,"~:fn-var",true,"^3A",["^12",[["~$p","~$t"],["~$p","~$t","~$v"]]],"^3C","Returns a cancellable promise that will be fulfilled\n     with this promise's fulfillment value or rejection reason.\n     However, if this promise is not fulfilled or rejected\n     within `ms` milliseconds, the returned promise is cancelled\n     with a TimeoutError"],"~$Promise",["^ ","^5",["^ ","^6","promesa/core.cljc","^7",36,"^8",23,"^9",36,"^:",30,"~:const",true],"^K","~$promesa.core/Promise","^6","promesa/core.cljc","^:",30,"^8",10,"^3Q",true,"^7",36,"^9",36,"^3M","~$js"],"~$branch",["^ ","^3@",null,"^5",["^ ","^6","promesa/core.cljc","^7",141,"^8",7,"^9",141,"^:",13,"^3A",["^12",["^3B",["^12",[["~$p","~$success","~$failure"]]]]]],"^K","~$promesa.core/branch","^6","promesa/core.cljc","^:",13,"^3H",["^12",[["~$p","^3U","^3V"]]],"^3K",null,"^3I",["^12",[null,null]],"^8",1,"^3E",false,"^7",141,"~:ret-tag","^3N","^9",141,"^3G",3,"^3O",true,"^3A",["^12",["^3B",["^12",[["~$p","^3U","^3V"]]]]]],"~$attempt",["^ ","^3@",null,"^5",["^ ","^6","promesa/core.cljc","^7",253,"^8",7,"^9",253,"^:",14,"^3A",["^12",["^3B",["^12",[["~$callback"]]]]],"^3C","A helper for start promise chain without worry about\n  synchronous or asynchronous exceptions. Returns a promise\n  resolved with the return value of the callback."],"^K","~$promesa.core/attempt","^6","promesa/core.cljc","^:",14,"^3H",["^12",[["^3Z"]]],"^3K",null,"^3I",["^12",[null,null]],"^8",1,"^3E",false,"^7",253,"^3X","^3N","^9",253,"^3G",1,"^3O",true,"^3A",["^12",["^3B",["^12",[["^3Z"]]]]],"^3C","A helper for start promise chain without worry about\n  synchronous or asynchronous exceptions. Returns a promise\n  resolved with the return value of the callback."],"^E",["^ ","^3@",null,"^5",["^ ","^6","promesa/core.cljc","^7",107,"^8",7,"^9",107,"^:",10,"^3A",["^12",["^3B",["^12",[["~$f","~$p"]]]]],"^3C","Apply a function to the promise value and\n  return a new promise with the result."],"^K","~$promesa.core/map","^6","promesa/core.cljc","^:",10,"^3H",["^12",[["~$f","~$p"]]],"^3K",null,"^3I",["^12",[null,null]],"^8",1,"^3E",false,"^7",107,"^3X","^3N","^9",107,"^3G",2,"^3O",true,"^3A",["^12",["^3B",["^12",[["~$f","~$p"]]]]],"^3C","Apply a function to the promise value and\n  return a new promise with the result."],"^F",["^ ","^3@",null,"^5",["^ ","^6","promesa/core.cljc","^7",240,"^8",7,"^9",240,"^:",12,"^3A",["^12",["^3B",["^12",[["~$t"],["~$t","~$v"]]]]],"^3C","Given a timeout in miliseconds and optional\n  value, returns a promise that will fulfilled\n  with provided value (or nil) after the\n  time is reached.","^3D",["^ ","^3E",false,"^3F",2,"^3G",2,"^3H",["^12",[["~$t"],["~$t","~$v"]]],"^3A",["^12",[["~$t"],["~$t","~$v"]]],"^3I",["^12",[null,null]]]],"^K","~$promesa.core/delay","^6","promesa/core.cljc","^:",12,"^3D",["^ ","^3E",false,"^3F",2,"^3G",2,"^3H",["^12",[["~$t"],["~$t","~$v"]]],"^3A",["^12",[["~$t"],["~$t","~$v"]]],"^3I",["^12",[null,null]]],"^3H",["^12",[["~$t"],["~$t","~$v"]]],"^3K",null,"^3F",2,"^3I",["^12",[null,null]],"^8",1,"^3E",false,"^3L",[["^ ","^3F",1,"^3E",false,"^3M","^3N"],["^ ","^3F",2,"^3E",false,"^3M","^3S"]],"^7",240,"^9",240,"^3G",2,"^3O",true,"^3A",["^12",[["~$t"],["~$t","~$v"]]],"^3C","Given a timeout in miliseconds and optional\n  value, returns a promise that will fulfilled\n  with provided value (or nil) after the\n  time is reached."],"~$resolved?",["^ ","^3@",null,"^5",["^ ","^6","promesa/core.cljc","^7",81,"^8",7,"^9",81,"^:",16,"^3A",["^12",["^3B",["^12",[["~$p"]]]]],"^3C","Returns true if promise `p` is already fulfilled."],"^K","~$promesa.core/resolved?","^6","promesa/core.cljc","^:",16,"^3H",["^12",[["~$p"]]],"^3K",null,"^3I",["^12",[null,null]],"^8",1,"^3E",false,"^7",81,"^3X","^3N","^9",81,"^3G",1,"^3O",true,"^3A",["^12",["^3B",["^12",[["~$p"]]]]],"^3C","Returns true if promise `p` is already fulfilled."],"^G",["^ ","^3@",null,"^5",["^ ","^6","promesa/core.cljc","^7",113,"^8",7,"^9",113,"^:",13,"^3A",["^12",["^3B",["^12",[["~$f","~$p"]]]]],"^3C","Same as `map` but removes one level of\n  promise neesting. Useful when the map function\n  returns a promise instead of value.\n\n  In JS environment this function is analogous\n  to `map` because the promise abstraction overloads\n  the `map` operator."],"^K","~$promesa.core/mapcat","^6","promesa/core.cljc","^:",13,"^3H",["^12",[["~$f","~$p"]]],"^3K",null,"^3I",["^12",[null,null]],"^8",1,"^3E",false,"^7",113,"^3X","^3N","^9",113,"^3G",2,"^3O",true,"^3A",["^12",["^3B",["^12",[["~$f","~$p"]]]]],"^3C","Same as `map` but removes one level of\n  promise neesting. Useful when the map function\n  returns a promise instead of value.\n\n  In JS environment this function is analogous\n  to `map` because the promise abstraction overloads\n  the `map` operator."],"~$cancelled?",["^ ","^3@",null,"^5",["^ ","^6","promesa/core.cljc","^7",209,"^8",7,"^9",209,"^:",17,"^3A",["^12",["^3B",["^12",[["~$v"]]]]],"^3C","Return true if `v` is a cancelled promise."],"^K","~$promesa.core/cancelled?","^6","promesa/core.cljc","^:",17,"^3H",["^12",[["~$v"]]],"^3K",null,"^3I",["^12",[null,null]],"^8",1,"^3E",false,"^7",209,"^3X","^3N","^9",209,"^3G",1,"^3O",true,"^3A",["^12",["^3B",["^12",[["~$v"]]]]],"^3C","Return true if `v` is a cancelled promise."],"^H",["^ ","^3@",null,"^5",["^ ","^6","promesa/core.cljc","^7",271,"^8",7,"^9",271,"^:",12,"^3A",["^12",["^3B",["^12",[["~$&","~$args"]]]]],"^3D",["^ ","^3E",true,"^3F",0,"^3G",0,"^3H",[["^12",["^47"]]],"^3A",["^12",[["~$&","^47"]]],"^3I",["^12",[null]]]],"^K","~$promesa.core/await","^6","promesa/core.cljc","^:",12,"^3D",["^ ","^3E",true,"^3F",0,"^3G",0,"^3H",[["^12",["^47"]]],"^3A",["^12",[["~$&","^47"]]],"^3I",["^12",[null]]],"^3H",[["^12",["^47"]]],"^3K",null,"^3F",0,"^3I",["^12",[null]],"^8",1,"^3E",true,"^3L",[["^ ","^3F",0,"^3E",true,"^3M","~$ignore"]],"^7",271,"^3X","^3N","^9",271,"^3G",0,"^3O",true,"^3A",["^12",[["~$&","^47"]]]],"~$bind",["^ ","^3@",null,"^5",["^ ","^6","promesa/core.cljc","^7",124,"^8",7,"^9",124,"^:",11,"^3A",["^12",["^3B",["^12",[["~$p","~$f"]]]]],"^3C","A chain helper for promises."],"^K","~$promesa.core/bind","^6","promesa/core.cljc","^:",11,"^3H",["^12",[["~$p","~$f"]]],"^3K",null,"^3I",["^12",[null,null]],"^8",1,"^3E",false,"^7",124,"^3X","^3N","^9",124,"^3G",2,"^3O",true,"^3A",["^12",["^3B",["^12",[["~$p","~$f"]]]]],"^3C","A chain helper for promises."],"^3N",["^ ","^3@",null,"^5",["^ ","^6","promesa/core.cljc","^7",191,"^8",7,"^9",191,"^:",10,"^3A",["^12",["^3B",["^12",[["~$promises"]]]]],"^3C","Given an array of promises, return a promise\n  that is fulfilled when first one item in the\n  array is fulfilled."],"^K","~$promesa.core/any","^6","promesa/core.cljc","^:",10,"^3H",["^12",[["^4<"]]],"^3K",null,"^3I",["^12",[null,null]],"^8",1,"^3E",false,"^7",191,"^3X","^3S","^9",191,"^3G",1,"^3O",true,"^3A",["^12",["^3B",["^12",[["^4<"]]]]],"^3C","Given an array of promises, return a promise\n  that is fulfilled when first one item in the\n  array is fulfilled."],"~$finally",["^ ","^3@",null,"^5",["^ ","^6","promesa/core.cljc","^7",169,"^8",7,"^9",169,"^:",14,"^3A",["^12",["^3B",["^12",[["~$p","^3Z"]]]]],"^3C","Attach handler to promise that will be\n  executed independently if promise is\n  resolved or rejected."],"^K","~$promesa.core/finally","^6","promesa/core.cljc","^:",14,"^3H",["^12",[["~$p","^3Z"]]],"^3K",null,"^3I",["^12",[null,null]],"^8",1,"^3E",false,"^7",169,"^3X","^3N","^9",169,"^3G",2,"^3O",true,"^3A",["^12",["^3B",["^12",[["~$p","^3Z"]]]]],"^3C","Attach handler to promise that will be\n  executed independently if promise is\n  resolved or rejected."],"~$schedule",["^ ","^3@",null,"^5",["^ ","^6","promesa/core.cljc","^7",47,"^8",7,"^9",47,"^:",15,"^3A",["^12",["^3B",["^12",[["~$ms","~$func"]]]]],"^3C","Schedule a callable to be executed after the `ms` delay\n  is reached.\n\n  In JVM it uses a scheduled executor service and in JS\n  it uses the `setTimeout` function."],"^K","~$promesa.core/schedule","^6","promesa/core.cljc","^:",15,"^3H",["^12",[["^4A","^4B"]]],"^3K",null,"^3I",["^12",[null,null]],"^8",1,"^3E",false,"^7",47,"^3X","^3N","^9",47,"^3G",2,"^3O",true,"^3A",["^12",["^3B",["^12",[["^4A","^4B"]]]]],"^3C","Schedule a callable to be executed after the `ms` delay\n  is reached.\n\n  In JVM it uses a scheduled executor service and in JS\n  it uses the `setTimeout` function."],"~$promisify",["^ ","^3@",null,"^5",["^ ","^6","promesa/core.cljc","^7",216,"^8",7,"^9",216,"^:",16,"^3A",["^12",["^3B",["^12",[["~$callable"]]]]],"^3C","Given a function that accepts a callback as the last argument return other\n  function that returns a promise. Callback is expected to take single\n  parameter (result of a computation)."],"^K","~$promesa.core/promisify","^6","promesa/core.cljc","^:",16,"^3H",["^12",[["^4E"]]],"^3K",null,"^3I",["^12",[null,null]],"^8",1,"^3E",false,"^7",216,"^3X","~$function","^9",216,"^3G",1,"^3O",true,"^3A",["^12",["^3B",["^12",[["^4E"]]]]],"^3C","Given a function that accepts a callback as the last argument return other\n  function that returns a promise. Callback is expected to take single\n  parameter (result of a computation)."],"~$rejected",["^ ","^3@",null,"^5",["^ ","^6","promesa/core.cljc","^7",63,"^8",7,"^9",63,"^:",15,"^3A",["^12",["^3B",["^12",[["~$v"]]]]],"^3C","Return a rejected promise with provided reason."],"^K","~$promesa.core/rejected","^6","promesa/core.cljc","^:",15,"^3H",["^12",[["~$v"]]],"^3K",null,"^3I",["^12",[null,null]],"^8",1,"^3E",false,"^7",63,"^3X","^3S","^9",63,"^3G",1,"^3O",true,"^3A",["^12",["^3B",["^12",[["~$v"]]]]],"^3C","Return a rejected promise with provided reason."],"^J",["^ ","^3@",null,"^5",["^ ","^6","promesa/core.cljc","^7",68,"^8",7,"^9",68,"^:",14,"^3A",["^12",["^3B",["^12",[["~$v"]]]]],"^3C","The promise constructor."],"^K","~$promesa.core/promise","^6","promesa/core.cljc","^:",14,"^3H",["^12",[["~$v"]]],"^3K",null,"^3I",["^12",[null,null]],"^8",1,"^3E",false,"^7",68,"^3X","^3N","^9",68,"^3G",1,"^3O",true,"^3A",["^12",["^3B",["^12",[["~$v"]]]]],"^3C","The promise constructor."],"~$cancel!",["^ ","^3@",null,"^5",["^ ","^6","promesa/core.cljc","^7",203,"^8",7,"^9",203,"^:",14,"^3A",["^12",["^3B",["^12",[["~$p"]]]]],"^3C","Cancel the promise."],"^K","~$promesa.core/cancel!","^6","promesa/core.cljc","^:",14,"^3H",["^12",[["~$p"]]],"^3K",null,"^3I",["^12",[null,null]],"^8",1,"^3E",false,"^7",203,"^9",203,"^3G",1,"^3O",true,"^3A",["^12",["^3B",["^12",[["~$p"]]]]],"^3C","Cancel the promise."],"~$done?",["^ ","^5",["^ ","^6","promesa/core.cljc","^7",101,"^8",6,"^9",101,"^:",11],"^K","~$promesa.core/done?","^6","promesa/core.cljc","^:",11,"^8",1,"^7",101,"^9",101,"^3M","^4G","^3C","Returns true if promise `p` is already done."],"~$err",["^ ","^K","~$promesa.core/err","^6","promesa/core.cljc","^7",165,"^8",1,"^9",165,"^:",9,"^5",["^ ","^6","promesa/core.cljc","^7",165,"^8",6,"^9",165,"^:",9],"^3C","A short alias for `error` function."],"~$all",["^ ","^3@",null,"^5",["^ ","^6","promesa/core.cljc","^7",179,"^8",7,"^9",179,"^:",10,"^3A",["^12",["^3B",["^12",[["^4<"]]]]],"^3C","Given an array of promises, return a promise\n  that is fulfilled  when all the items in the\n  array are fulfilled."],"^K","~$promesa.core/all","^6","promesa/core.cljc","^:",10,"^3H",["^12",[["^4<"]]],"^3K",null,"^3I",["^12",[null,null]],"^8",1,"^3E",false,"^7",179,"^3X","^3N","^9",179,"^3G",1,"^3O",true,"^3A",["^12",["^3B",["^12",[["^4<"]]]]],"^3C","Given an array of promises, return a promise\n  that is fulfilled  when all the items in the\n  array are fulfilled."],"~$promise?",["^ ","^3@",null,"^5",["^ ","^6","promesa/core.cljc","^7",73,"^8",7,"^9",73,"^:",15,"^3A",["^12",["^3B",["^12",[["~$v"]]]]],"^3C","Return true if `v` is a promise instance."],"^K","~$promesa.core/promise?","^6","promesa/core.cljc","^:",15,"^3H",["^12",[["~$v"]]],"^3K",null,"^3I",["^12",[null,null]],"^8",1,"^3E",false,"^7",73,"^3X","~$boolean","^9",73,"^3G",1,"^3O",true,"^3A",["^12",["^3B",["^12",[["~$v"]]]]],"^3C","Return true if `v` is a promise instance."],"~$resolved",["^ ","^3@",null,"^5",["^ ","^6","promesa/core.cljc","^7",58,"^8",7,"^9",58,"^:",15,"^3A",["^12",["^3B",["^12",[["~$v"]]]]],"^3C","Return a resolved promise with provided value."],"^K","~$promesa.core/resolved","^6","promesa/core.cljc","^:",15,"^3H",["^12",[["~$v"]]],"^3K",null,"^3I",["^12",[null,null]],"^8",1,"^3E",false,"^7",58,"^3X","^3S","^9",58,"^3G",1,"^3O",true,"^3A",["^12",["^3B",["^12",[["~$v"]]]]],"^3C","Return a resolved promise with provided value."],"~$catch",["^ ","^3@",null,"^5",["^ ","^6","promesa/core.cljc","^7",147,"^8",7,"^9",147,"^:",12,"^3A",["^12",["^3B",["^12",[["~$p","~$f"],["~$p","~$pred-or-type","~$f"]]]]],"^3C","Catch all promise chain helper.","^3D",["^ ","^3E",false,"^3F",3,"^3G",3,"^3H",["^12",[["~$p","~$f"],["~$p","^4Y","~$f"]]],"^3A",["^12",[["~$p","~$f"],["~$p","^4Y","~$f"]]],"^3I",["^12",[null,null]]]],"^K","~$promesa.core/catch","^6","promesa/core.cljc","^:",12,"^3D",["^ ","^3E",false,"^3F",3,"^3G",3,"^3H",["^12",[["~$p","~$f"],["~$p","^4Y","~$f"]]],"^3A",["^12",[["~$p","~$f"],["~$p","^4Y","~$f"]]],"^3I",["^12",[null,null]]],"^3H",["^12",[["~$p","~$f"],["~$p","^4Y","~$f"]]],"^3K",null,"^3F",3,"^3I",["^12",[null,null]],"^8",1,"^3E",false,"^3L",[["^ ","^3F",2,"^3E",false,"^3M","^3N"],["^ ","^3F",3,"^3E",false,"^3M","^3N"]],"^7",147,"^9",147,"^3G",3,"^3O",true,"^3A",["^12",[["~$p","~$f"],["~$p","^4Y","~$f"]]],"^3C","Catch all promise chain helper."],"~$chain",["^ ","^3@",null,"^5",["^ ","^6","promesa/core.cljc","^7",136,"^8",7,"^9",136,"^:",12,"^3A",["^12",["^3B",["^12",[["~$p","~$&","~$funcs"]]]]],"^3C","Like then but accepts multiple parameters.","^3D",["^ ","^3E",true,"^3F",1,"^3G",1,"^3H",[["^12",["~$p","^50"]]],"^3A",["^12",[["~$p","~$&","^50"]]],"^3I",["^12",[null]]]],"^K","~$promesa.core/chain","^6","promesa/core.cljc","^:",12,"^3D",["^ ","^3E",true,"^3F",1,"^3G",1,"^3H",[["^12",["~$p","^50"]]],"^3A",["^12",[["~$p","~$&","^50"]]],"^3I",["^12",[null]]],"^3H",[["^12",["~$p","^50"]]],"^3K",null,"^3F",1,"^3I",["^12",[null]],"^8",1,"^3E",true,"^3L",[["^ ","^3F",1,"^3E",true,"^3M",["^D",[null,"^3N"]]]],"^7",136,"^3X","^3N","^9",136,"^3G",1,"^3O",true,"^3A",["^12",[["~$p","~$&","^50"]]],"^3C","Like then but accepts multiple parameters."],"~$rejected?",["^ ","^3@",null,"^5",["^ ","^6","promesa/core.cljc","^7",86,"^8",7,"^9",86,"^:",16,"^3A",["^12",["^3B",["^12",[["~$p"]]]]],"^3C","Returns true if promise `p` is already rejected."],"^K","~$promesa.core/rejected?","^6","promesa/core.cljc","^:",16,"^3H",["^12",[["~$p"]]],"^3K",null,"^3I",["^12",[null,null]],"^8",1,"^3E",false,"^7",86,"^3X","^3N","^9",86,"^3G",1,"^3O",true,"^3A",["^12",["^3B",["^12",[["~$p"]]]]],"^3C","Returns true if promise `p` is already rejected."],"~$then",["^ ","^3@",null,"^5",["^ ","^6","promesa/core.cljc","^7",129,"^8",7,"^9",129,"^:",11,"^3A",["^12",["^3B",["^12",[["~$p","~$f"]]]]],"^3C","Same as `map` but with parameters inverted\n  for convenience and for familiarity with\n  javascript's promises `.then` operator."],"^K","~$promesa.core/then","^6","promesa/core.cljc","^:",11,"^3H",["^12",[["~$p","~$f"]]],"^3K",null,"^3I",["^12",[null,null]],"^8",1,"^3E",false,"^7",129,"^3X","^3N","^9",129,"^3G",2,"^3O",true,"^3A",["^12",["^3B",["^12",[["~$p","~$f"]]]]],"^3C","Same as `map` but with parameters inverted\n  for convenience and for familiarity with\n  javascript's promises `.then` operator."],"~$extract",["^ ","^3@",null,"^5",["^ ","^6","promesa/core.cljc","^7",96,"^8",7,"^9",96,"^:",14,"^3A",["^12",["^3B",["^12",[["~$p"]]]]],"^3C","Returns the current promise value."],"^K","~$promesa.core/extract","^6","promesa/core.cljc","^:",14,"^3H",["^12",[["~$p"]]],"^3K",null,"^3I",["^12",[null,null]],"^8",1,"^3E",false,"^7",96,"^3X","^3N","^9",96,"^3G",1,"^3O",true,"^3A",["^12",["^3B",["^12",[["~$p"]]]]],"^3C","Returns the current promise value."],"~$error",["^ ","^3@",null,"^5",["^ ","^6","promesa/core.cljc","^7",160,"^8",7,"^9",160,"^:",12,"^3A",["^12",["^3B",["^12",[["~$f","~$p"],["~$f","~$type","~$p"]]]]],"^3C","Same as `catch` but with parameters inverted.","^3D",["^ ","^3E",false,"^3F",3,"^3G",3,"^3H",["^12",[["~$f","~$p"],["~$f","^59","~$p"]]],"^3A",["^12",[["~$f","~$p"],["~$f","^59","~$p"]]],"^3I",["^12",[null,null]]]],"^K","~$promesa.core/error","^6","promesa/core.cljc","^:",12,"^3D",["^ ","^3E",false,"^3F",3,"^3G",3,"^3H",["^12",[["~$f","~$p"],["~$f","^59","~$p"]]],"^3A",["^12",[["~$f","~$p"],["~$f","^59","~$p"]]],"^3I",["^12",[null,null]]],"^3H",["^12",[["~$f","~$p"],["~$f","^59","~$p"]]],"^3K",null,"^3F",3,"^3I",["^12",[null,null]],"^8",1,"^3E",false,"^3L",[["^ ","^3F",2,"^3E",false,"^3M","^3N"],["^ ","^3F",3,"^3E",false,"^3M","^3N"]],"^7",160,"^9",160,"^3G",3,"^3O",true,"^3A",["^12",[["~$f","~$p"],["~$f","^59","~$p"]]],"^3C","Same as `catch` but with parameters inverted."],"~$pending?",["^ ","^3@",null,"^5",["^ ","^6","promesa/core.cljc","^7",91,"^8",7,"^9",91,"^:",15,"^3A",["^12",["^3B",["^12",[["~$p"]]]]],"^3C","Returns true if promise `p` is stil pending."],"^K","~$promesa.core/pending?","^6","promesa/core.cljc","^:",15,"^3H",["^12",[["~$p"]]],"^3K",null,"^3I",["^12",[null,null]],"^8",1,"^3E",false,"^7",91,"^3X","^3N","^9",91,"^3G",1,"^3O",true,"^3A",["^12",["^3B",["^12",[["~$p"]]]]],"^3C","Returns true if promise `p` is stil pending."]],"^10",["^ ","^W","^W"],"~:cljs.analyzer/constants",["^ ","^Y",["^D",["~:else"]],"~:order",["^5>"]],"^17",["^ ","^Z",["^D",[]]],"^18",["^ "],"^19",["^X","^W","^Q","^S","^U"]],"^N","^L","~:ns-specs",["^ "],"~:ns-spec-vars",["^D",[]],"~:compiler-options",["^1G",[["^5B","~:static-fns"],true,["^5B","~:shadow-tweaks"],null,["^5B","~:elide-asserts"],false,["^5B","~:optimize-constants"],null,["^5B","^1>"],null,["^5B","~:external-config"],null,["^5B","~:tooling-config"],null,["^5B","~:emit-constants"],null,["^5B","~:load-tests"],null,["^5B","~:form-size-threshold"],null,["^5B","~:infer-externs"],"~:auto",["^5B","^1@"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^5B","~:fn-invoke-direct"],null,["^5B","~:source-map"],"/dev/null"]]]