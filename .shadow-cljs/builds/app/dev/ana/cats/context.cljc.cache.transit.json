["^ ","~:output",["^ ","~:js","goog.provide('cats.context');\r\ngoog.require('cljs.core');\r\ngoog.require('cats.protocols');\r\ncats.context._STAR_context_STAR_ = null;\r\ncats.context.throw_illegal_argument = (function cats$context$throw_illegal_argument(text){\r\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(text,cljs.core.PersistentArrayMap.EMPTY);\r\n});\r\n/**\r\n * Returnt `true` if the provided value satisfies\r\n *   the Context protocol.\r\n */\r\ncats.context.context_QMARK_ = (function cats$context$context_QMARK_(v){\r\nif((!((v == null)))){\r\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === v.cats$protocols$Context$)))){\r\nreturn true;\r\n} else {\r\nif((!v.cljs$lang$protocol_mask$partition$)){\r\nreturn cljs.core.native_satisfies_QMARK_(cats.protocols.Context,v);\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.native_satisfies_QMARK_(cats.protocols.Context,v);\r\n}\r\n});\r\n/**\r\n * Given an optional value infer its context. If context is already set, it\r\n *   is returned as is without any inference operation.\r\n */\r\ncats.context.infer = (function cats$context$infer(var_args){\r\nvar G__38772 = arguments.length;\r\nswitch (G__38772) {\r\ncase 0:\r\nreturn cats.context.infer.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn cats.context.infer.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(cats.context.infer.cljs$core$IFn$_invoke$arity$0 = (function (){\r\nif((cats.context._STAR_context_STAR_ == null)){\r\ncats.context.throw_illegal_argument(\"No context is set.\");\r\n} else {\r\n}\r\n\r\nreturn cats.context._STAR_context_STAR_;\r\n}));\r\n\r\n(cats.context.infer.cljs$core$IFn$_invoke$arity$1 = (function (v){\r\nif((!((cats.context._STAR_context_STAR_ == null)))){\r\nreturn cats.context._STAR_context_STAR_;\r\n} else {\r\nif((((!((v == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === v.cats$protocols$Contextual$))))?true:(((!v.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(cats.protocols.Contextual,v):false)):cljs.core.native_satisfies_QMARK_(cats.protocols.Contextual,v))){\r\nreturn cats.protocols._get_context(v);\r\n} else {\r\nreturn cats.context.throw_illegal_argument([\"No context is set and it can not be automatically \",\"resolved from provided value\"].join(''));\r\n\r\n}\r\n}\r\n}));\r\n\r\n(cats.context.infer.cljs$lang$maxFixedArity = 1);\r\n\r\n/**\r\n * Deprecated alias to `infer`.\r\n */\r\ncats.context.get_current = (function cats$context$get_current(var_args){\r\nvar args__4795__auto__ = [];\r\nvar len__4789__auto___38781 = arguments.length;\r\nvar i__4790__auto___38782 = (0);\r\nwhile(true){\r\nif((i__4790__auto___38782 < len__4789__auto___38781)){\r\nargs__4795__auto__.push((arguments[i__4790__auto___38782]));\r\n\r\nvar G__38783 = (i__4790__auto___38782 + (1));\r\ni__4790__auto___38782 = G__38783;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4796__auto__ = ((((0) < args__4795__auto__.length))?(new cljs.core.IndexedSeq(args__4795__auto__.slice((0)),(0),null)):null);\r\nreturn cats.context.get_current.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);\r\n});\r\n\r\n(cats.context.get_current.cljs$core$IFn$_invoke$arity$variadic = (function (args){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cats.context.infer,args);\r\n}));\r\n\r\n(cats.context.get_current.cljs$lang$maxFixedArity = (0));\r\n\r\n/** @this {Function} */\r\n(cats.context.get_current.cljs$lang$applyTo = (function (seq38777){\r\nvar self__4777__auto__ = this;\r\nreturn self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq38777));\r\n}));\r\n\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","A cats context management.","~:file","cats/context.cljc","~:line",26,"~:column",5,"~:end-line",26,"~:end-column",17],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$cats.context","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$cats.protocols","^L","~$p","^L","~$cljs.core","^M","~$goog","^N"],"~:seen",["^E",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^M","^M"],"~:form",["~#list",["~$ns","^G","A cats context management.",["^T",["^P",["^L","~:as","~$p"]]]]],"~:flags",["^ ","^P",["^E",[]]],"~:js-deps",["^ "],"~:deps",["^N","^M","^L"]],"^I","^G","~:resource-id",["~:shadow.build.classpath/resource","cats/context.cljc"],"~:compiled-at",1579687555547,"~:resource-name","cats/context.cljc","~:warnings",[],"~:source",";; Copyright (c) 2014-2016 Andrey Antukh <niwi@niwi.nz>\n;; Copyright (c) 2014-2016 Alejandro GÃ³mez <alejandro@dialelo.com>\n;; All rights reserved.\n;;\n;; Redistribution and use in source and binary forms, with or without\n;; modification, are permitted provided that the following conditions\n;; are met:\n;;\n;; 1. Redistributions of source code must retain the above copyright\n;;    notice, this list of conditions and the following disclaimer.\n;; 2. Redistributions in binary form must reproduce the above copyright\n;;    notice, this list of conditions and the following disclaimer in the\n;;    documentation and/or other materials provided with the distribution.\n;;\n;; THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n;; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n;; OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n;; IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n;; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n;; NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n;; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n;; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n;; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n;; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n(ns cats.context\n  \"A cats context management.\"\n  (:require [cats.protocols :as p]))\n\n(def ^:dynamic *context* nil)\n\n(defn throw-illegal-argument\n  {:no-doc true :internal true}\n  [^String text]\n  #?(:cljs (throw (ex-info text {}))\n     :clj  (throw (IllegalArgumentException. text))))\n\n(defn context?\n  \"Returnt `true` if the provided value satisfies\n  the Context protocol.\"\n  [v]\n  (satisfies? p/Context v))\n\n#?(:clj\n   (defmacro with-context\n     \"Set current context to specific monad.\"\n     [ctx & body]\n     `(do\n        (when-not (context? ~ctx)\n          (throw-illegal-argument\n           \"The provided context does not implements Context.\"))\n        (binding [*context* ~ctx]\n          ~@body))))\n\n#?(:clj\n   (defmacro with-monad\n     \"Semantic alias for `with-context`.\"\n     [ctx & body]\n     `(with-context ~ctx\n        ~@body)))\n\n(defn infer\n  \"Given an optional value infer its context. If context is already set, it\n  is returned as is without any inference operation.\"\n  {:no-doc true}\n  ([]\n   (when (nil? *context*)\n     (throw-illegal-argument \"No context is set.\"))\n   *context*)\n  ([v]\n   (cond\n     (not (nil? *context*))\n     *context*\n\n     (satisfies? p/Contextual v)\n     (p/-get-context v)\n\n     :else\n     (throw-illegal-argument\n      (str \"No context is set and it can not be automatically \"\n           \"resolved from provided value\")))))\n\n(defn get-current\n  \"Deprecated alias to `infer`.\"\n  {:deprecated true}\n  [& args]\n  (apply infer args))\n\n\n","~:reader-features",["^E",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings",";;;AA6BA,AAAA,AAAeA;AAEf,AAAA,AAAMC,AAEKC;AAFX,AAGW,AAAO,AAAA,AAACC,AAAQD;;AAG3B;;;;AAAA,AAAME,AAGHC;AAHH,AAIE,AAAA,AAAA,AAAA,AAAsBA;AAAtB,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAsBD;AAAtB;;AAAA,AAAA,AAAA,AAAsBA;AAAtB,AAAAE,AAAYC,AAAUH;;AAAtB;;;;AAAA,AAAAE,AAAYC,AAAUH;;;AAoBxB,AAAA;;;;AAAA,AAAAI,AAAME;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMD;AAAN,AAKG,AAAM,AAAA,AAAMX;AAAZ,AACE,AAAA,AAACC;;AADH;;AAEAD;;;AAPH,AAAA,AAAA,AAAMW,AAQFN;AARJ,AASG,AACE,AAAK,AAAA,AAAML;AACXA;;AAFF,AAIE,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAM,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAAA,AAAYM,AAAAA,AAAaR,AAAAA,AAAAA,AAAAA,AAAAA;AACzB,AAACS,AAAeT;;AALlB,AAQE,AAACJ,AACA,AAAA,AAAA;;;;;;AAlBN,AAAA,AAAA,AAAMU;;AAAN,AAqBA,AAAA;;;AAAA,AAAAF,AAAMW;AAAN,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAK,AAAAF;;;AAAA,AAAA,AAAA,AAAA,AAAME,AAGDI;AAHL,AAIE,AAACC,AAAMd,AAAMa;;;AAJf,AAAA,AAAA,AAAMJ;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAE,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC,AAAAF;;;AAAA","names",["cats.context/*context*","cats.context/throw-illegal-argument","text","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2","cats.context/context?","v","cljs.core/PROTOCOL_SENTINEL","cljs.core/native-satisfies?","cats.protocols/Context","var_args","G__38772","cats.context/infer","js/Error","cats.protocols/Contextual","cats.protocols/-get-context","args__4795__auto__","len__4789__auto__","i__4790__auto__","argseq__4796__auto__","cljs.core/IndexedSeq","cats.context/get-current","seq38777","self__4777__auto__","cljs.core/seq","args","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"]]],"~:cache-keys",["~#cmap",[["^[","goog/dom/tagname.js"],[1579687410012,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^E",[]],"~:deps-syms",["^N","~$goog.dom.HtmlElement"]]],["^[","goog/math/math.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N","~$goog.array","~$goog.asserts"]]],["^[","goog/html/trustedtypes.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N"]]],["^[","goog/labs/useragent/browser.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N","^1A","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^[","goog/html/safeurl.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N","^1B","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^1E"]]],["^[","goog/array/array.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N","^1B"]]],["^[","goog/debug/error.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N"]]],["^[","cats/protocols.cljc"],[1579687471496,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N","^M"]]],["^[","goog/dom/nodetype.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N"]]],["^[","goog/string/typedstring.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N"]]],["^[","goog/object/object.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N"]]],["^[","goog/dom/asserts.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N","^1B"]]],"~:SHADOW-TIMESTAMP",[1579687469000,1579687405000],["^[","goog/math/long.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N","^1B","~$goog.reflect"]]],["^[","goog/html/trustedresourceurl.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N","^1B","~$goog.html.trustedtypes","^1H","^1I","^1J","^1K"]]],["^[","goog/string/internal.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N"]]],["^[","goog/functions/functions.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N"]]],["^[","goog/html/safestyle.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N","^1A","^1B","~$goog.html.SafeUrl","^1J","^1K","^1E"]]],["^[","goog/dom/safe.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N","^1B","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^1O","^1G","~$goog.html.uncheckedconversions","^1J","^1E"]]],["^[","goog/structs/map.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^[","goog/html/safehtml.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N","^1A","^1B","~$goog.dom.TagName","~$goog.dom.tags","^1S","^1T","~$goog.html.SafeStyleSheet","^1O","^1G","^1N","^1H","^1I","~$goog.labs.userAgent.browser","^1D","^1J","^1K","^1E"]]],["^[","goog/dom/tags.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N","^1D"]]],["^[","cats/context.cljc"],[1579687471496,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N","^M","^L"]]],["^[","goog/asserts/asserts.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^[","goog/uri/uri.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N","^1A","^1B","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^[","goog/i18n/bidi.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N"]]],["^[","goog/fs/url.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N"]]],["^[","goog/base.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",[]]],["^[","goog/structs/structs.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N","^1A","^1D"]]],["^[","goog/string/string.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N","~$goog.dom.safe","^1U","^1J","^1E"]]],["^[","goog/reflect/reflect.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N"]]],["^[","goog/labs/useragent/util.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N","^1E"]]],["^[","goog/string/stringbuffer.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N"]]],["^[","goog/iter/iter.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N","^1A","^1B","^1Q","~$goog.math"]]],["^[","goog/html/uncheckedconversions.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N","^1B","^1R","^1S","^1T","^1Z","^1O","^1G","^1J","^1E"]]],["^[","goog/dom/htmlelement.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N"]]],["^[","cljs/core.cljs"],[1579687405264,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["~$goog.math.Long","~$goog.math.Integer","^22","^1D","^1A","~$goog.Uri","~$goog.string.StringBuffer"]]],["^[","goog/html/safescript.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N","^1B","^1N","^1J","^1K"]]],["^[","goog/html/safestylesheet.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N","^1A","^1B","^1T","^1D","^1J","^1K","^1E"]]],["^[","goog/math/integer.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N","^1M"]]],["^[","goog/uri/utils.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N","^1A","^1B","^22"]]],["^[","goog/string/const.js"],[1579687410012,"^1<",["^ ","^1=",null,"^1>",["^E",[]],"^1?",["^N","^1B","^1K"]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map.clj",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1579687401000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64.clj",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1579687402000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1579687402000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/analyzer.cljc",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1579687402000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/tagged_literals.cljc",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/util.cljc",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/compiler.cljc",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64_vlq.clj",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1579687402000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1579687401000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1579687401000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/externs.clj",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1579687401000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/js_deps.cljc",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1579687401000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1579687401000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1579687402000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1579687402000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1579687402000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/core.cljc",1579687405000,"jar:file:/C:/Users/PC/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/env.cljc",1579687405000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","A cats context management.","^7","cats/context.cljc","^8",26,"^9",5,"^:",26,"^;",17],"^<",["^ ","^=","^>","^?","^@","^A","^B"],"^C",null,"^D",["^E",[]],"^F","^G","^J",null,"^K",["^ ","^L","^L","~$p","^L","^M","^M","^N","^N"],"^O",["^E",["^P"]],"~:shadow/js-access-global",["^E",["Error"]],"^Q",null,"~:defs",["^ ","~$*context*",["^ ","^5",["^ ","^7","cats/context.cljc","^8",30,"^9",16,"^:",30,"^;",25,"~:dynamic",true],"^F","~$cats.context/*context*","^7","cats/context.cljc","^;",25,"^9",1,"^2[",true,"^8",30,"^:",30,"~:tag","~$any"],"~$throw-illegal-argument",["^ ","~:no-doc",true,"~:protocol-inline",null,"^5",["^ ","^7","cats/context.cljc","^8",32,"^9",7,"^:",32,"^;",29,"~:arglists",["^T",["~$quote",["^T",[["~$text"]]]]],"^34",true,"~:internal",true],"^F","~$cats.context/throw-illegal-argument","^7","cats/context.cljc","^;",29,"~:method-params",["^T",[["^38"]]],"~:protocol-impl",null,"~:arglists-meta",["^T",[null,null]],"^9",1,"^39",true,"~:variadic?",false,"^8",32,"~:ret-tag","~$ignore","^:",32,"~:max-fixed-arity",1,"~:fn-var",true,"^36",["^T",["^37",["^T",[["^38"]]]]]],"~$context?",["^ ","^35",null,"^5",["^ ","^7","cats/context.cljc","^8",38,"^9",7,"^:",38,"^;",15,"^36",["^T",["^37",["^T",[["~$v"]]]]],"^6","Returnt `true` if the provided value satisfies\n  the Context protocol."],"^F","~$cats.context/context?","^7","cats/context.cljc","^;",15,"^3;",["^T",[["~$v"]]],"^3<",null,"^3=",["^T",[null,null]],"^9",1,"^3>",false,"^8",38,"^3?","~$boolean","^:",38,"^3A",1,"^3B",true,"^36",["^T",["^37",["^T",[["~$v"]]]]],"^6","Returnt `true` if the provided value satisfies\n  the Context protocol."],"~$infer",["^ ","^34",true,"^35",null,"^5",["^ ","^34",true,"^7","cats/context.cljc","^;",12,"~:top-fn",["^ ","^3>",false,"~:fixed-arity",1,"^3A",1,"^3;",["^T",[[],["~$v"]]],"^36",["^T",[[],["~$v"]]],"^3=",["^T",[null,null]]],"^9",7,"^8",62,"^:",62,"^36",["^T",["^37",["^T",[[],["~$v"]]]]],"^6","Given an optional value infer its context. If context is already set, it\n  is returned as is without any inference operation."],"^F","~$cats.context/infer","^7","cats/context.cljc","^;",12,"^3G",["^ ","^3>",false,"^3H",1,"^3A",1,"^3;",["^T",[[],["~$v"]]],"^36",["^T",[[],["~$v"]]],"^3=",["^T",[null,null]]],"^3;",["^T",[[],["~$v"]]],"^3<",null,"^3H",1,"^3=",["^T",[null,null]],"^9",1,"^3>",false,"~:methods",[["^ ","^3H",0,"^3>",false,"^31","^32"],["^ ","^3H",1,"^3>",false,"^31","^32"]],"^8",62,"^:",62,"^3A",1,"^3B",true,"^36",["^T",[[],["~$v"]]],"^6","Given an optional value infer its context. If context is already set, it\n  is returned as is without any inference operation."],"~$get-current",["^ ","^35",null,"^5",["^ ","^7","cats/context.cljc","^;",18,"^3G",["^ ","^3>",true,"^3H",0,"^3A",0,"^3;",[["^T",["~$args"]]],"^36",["^T",[["~$&","^3L"]]],"^3=",["^T",[null]]],"^9",7,"^8",83,"~:deprecated",true,"^:",83,"^36",["^T",["^37",["^T",[["~$&","^3L"]]]]],"^6","Deprecated alias to `infer`."],"^F","~$cats.context/get-current","^7","cats/context.cljc","^;",18,"^3G",["^ ","^3>",true,"^3H",0,"^3A",0,"^3;",[["^T",["^3L"]]],"^36",["^T",[["~$&","^3L"]]],"^3=",["^T",[null]]],"^3;",[["^T",["^3L"]]],"^3<",null,"^3H",0,"^3=",["^T",[null]],"^9",1,"^3>",true,"^3J",[["^ ","^3H",0,"^3>",true,"^31","^32"]],"^8",83,"^3M",true,"^3?","^32","^:",83,"^3A",0,"^3B",true,"^36",["^T",[["~$&","^3L"]]],"^6","Deprecated alias to `infer`."]],"^R",["^ ","^M","^M"],"~:cljs.analyzer/constants",["^ ","^O",["^E",["~:else"]],"~:order",["^3P"]],"^W",["^ ","^P",["^E",[]]],"^X",["^ "],"^Y",["^N","^M","^L"]],"^I","^G","~:ns-specs",["^ "],"~:ns-spec-vars",["^E",[]],"~:compiler-options",["^1;",[["^3T","~:static-fns"],true,["^3T","~:shadow-tweaks"],null,["^3T","~:elide-asserts"],false,["^3T","~:optimize-constants"],null,["^3T","^12"],null,["^3T","~:external-config"],null,["^3T","~:tooling-config"],null,["^3T","~:emit-constants"],null,["^3T","~:load-tests"],null,["^3T","~:form-size-threshold"],null,["^3T","~:infer-externs"],"~:auto",["^3T","^14"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^3T","~:fn-invoke-direct"],null,["^3T","~:source-map"],"/dev/null"]]]