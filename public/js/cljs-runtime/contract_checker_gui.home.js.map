{"version":3,"sources":["contract_checker_gui/home.cljs"],"mappings":";;;;;;;;;AAYA,AAAKA,AAAI,AAAOC;AAIhB,AAAKC,AACH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC;AAMH,AAAA,AAAKC;AAEL,AAAA,AAAMC;AAAN,AAAmB,AAAA,AAAA,AAAA,AACO,AAAA,AAAA,AAAAC,AAAmBJ,AAEnB,AAAA,AAAA,AAAAI,AAAmBJ;;AAI7C,AAAA,AAAMK,AACHC;AADH,AAEE,AAAYC,AAAQ,AAACC,AAAQF;;AAG/B,AAAA,AAAMG,AACHH;AADH,AAEE,AAACR,AAAAA,AAAAA,AAAIQ,AAAAA;;AACL,AAAA,AAAA,AAACI,AAAQ,AAAQH,AAAQD;;AAG3B,AAAA,AAAMK,AAAMC,AAAIC;AAAhB,AACE,AAAAC,AACqB,AAACU,AAAQ,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AAAoBb,AAECC,AAG3B,AAAKa;AAAL,AAAQ,AAAAC,AAAA;AAAAC,AAAC,AAACC,AAAQH;AAAV,AAAA,AAAAE,AAAAA,AAAAD,AAAAC,AAAAD;AANjC,AAAAZ;AAAA,AAAA,AAAAC,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAAiBM;AAAjB,AAAAF,AAAAJ,AAAA,AAAwBO;AAAxB,AAAA,AAAAF,AAAA,AAOWE;;;AAGb,AAAA,AAAMO,AAAYC;AAAlB,AACE,AAACjC,AAAAA,AAAAA,AAAIiC,AAAAA;;AACL,AAAA,AAACC,AAAMhC,AAAYiC,AAAcF;;AAGnC,AAAA,AAAMG;AAAN,AAIO,AAACE,AAAQ,AAAKC;AAAL,AAAY,AAACP,AAAW,AAAWO;AAH5C,AAAC1B,AAAKT,AAAQ,AAACC,AACf,AAACgC,AAAM1B,AACP,AAAC0B,AAAML;;AAId,AAAA,AAAMS,AAAeC;AAArB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAF,AAIa,AAAA,AAAA,AAAAlC,AAAmBoC;AAJhC,AAOkB,AAAA,AAACR,AAAMQ,AAAMP,AAAuB,AAAA,AAAAK;;;AAEtD,AAAA,AAAMI,AAAeF;AAArB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAIa,AAAA,AAAA,AAAArC,AAAmBoC;AAJhC,AAOkB,AAAA,AAACR,AAAMQ,AAAMP,AAAuB,AAAA,AAAAQ;;;AAGtD,AAAA,AAAME;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEqBT;;AAIrB,AAAA,AAAMU,AAAgBJ;AAAtB,AAAA,AAAA,AAAA,AAAA,AAAApC,AACgBoC;;AAKhB,AAAA,AAAMK;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAIKN,AAAcvC,AACd0C,AAAc1C,AACd2C,AACAC,AAAe5C","names":["contract-checker-gui.home/log","js/console","contract-checker-gui.home/local-state","reagent.core.atom.cljs$core$IFn$_invoke$arity$1","contract-checker-gui.home/aws-url","contract-checker-gui.home/json-data","cljs.core/deref","contract-checker-gui.home/clj->json","ds","js/JSON","cljs.core/clj->js","contract-checker-gui.home/json->clj","cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic","contract-checker-gui.home/post","url","json-data","promesa.core/bind","p__49038","map__49039","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","promesa.core/promise","status","body","promesa.core.catch$.cljs$core$IFn$_invoke$arity$2","kvlt.core/request!","e","G__49037","fexpr__49036","cljs.core/ex-data","contract-checker-gui.home/put-result","result","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc","contract-checker-gui.home/compare-contract","promesa.core/map","promesa.core.error.cljs$core$IFn$_invoke$arity$2","error","p1__49041#","contract-checker-gui.home/producer-area","state","p1__49042#","contract-checker-gui.home/consumer-area","contract-checker-gui.home/compare-button","contract-checker-gui.home/display-errors","contract-checker-gui.home/home-page"],"sourcesContent":["(ns contract-checker-gui.home\r\n  (:require\r\n   [reagent.core             :refer [atom cursor create-class dom-node force-update]]\r\n   [reagent.ratom            :refer [reaction make-reaction]]\r\n   [accountant.core          :as accountant]\r\n   [kvlt.core                :as kvlt]\r\n   [promesa.core             :as p]\r\n   [promesa.async-cljs       :refer-macros [async]]\r\n   [goog.dom                 :as dom]))\r\n\r\n\r\n;; Useful for debugging into the Chrome console.\r\n(def log (.-log js/console))\r\n\r\n\r\n;; State\r\n(def local-state\r\n  (atom\r\n   {:producer-schema \"\"\r\n    :consumer-schema \"\"\r\n    :svg \"<div />\"\r\n    :errors \"\"}))\r\n\r\n(def aws-url \"https://8ty9wnwd19.execute-api.eu-west-2.amazonaws.com/beta\")\r\n\r\n(defn json-data [] (str \"{\\\"consumer\\\": \" \r\n                          (:consumer-schema @local-state)\r\n                          \",\\\"producer\\\": \"\r\n                          (:producer-schema @local-state)\r\n                          \"}\"))\r\n\r\n\r\n(defn clj->json\r\n  [ds]\r\n  (.stringify js/JSON (clj->js ds)))\r\n\r\n\r\n(defn json->clj\r\n  [ds]\r\n  (log ds)\r\n  (js->clj (.parse js/JSON ds) :keywordize-keys true))\r\n\r\n\r\n(defn post [url json-data]\r\n  (p/alet [{:keys [status body]}\r\n              (p/await (p/catch (kvlt/request! {:url url\r\n                                                :method :post\r\n                                                :body json-data\r\n                                                :content-type :json\r\n                                                :accept :json})\r\n                           (fn [e] ((ex-data e) :type))))]\r\n             body))\r\n\r\n\r\n(defn put-result [result]\r\n  (log result)\r\n  (swap! local-state assoc :errors result))\r\n\r\n\r\n(defn compare-contract []\r\n  (->> (post aws-url (json-data))\r\n       (p/map json->clj)\r\n       (p/map put-result)\r\n       (p/error (fn [error] (put-result (.-message error))))))\r\n\r\n\r\n(defn producer-area [state]\r\n  [:textarea\r\n     {:id \"producer-area\"\r\n      :placeholder \"Paste the producer schema here\"\r\n      :value (:producer-schema @state)\r\n      :rows 12\r\n      :cols 50\r\n      :on-change #(swap! state assoc :producer-schema (-> % .-target .-value) )}])\r\n\r\n(defn consumer-area [state]\r\n  [:textarea\r\n     {:id \"consumer-area\"\r\n      :placeholder \"Paste the consumer schema here\"\r\n      :value (:consumer-schema @state)\r\n      :rows 12\r\n      :cols 50\r\n      :on-change #(swap! state assoc :consumer-schema (-> % .-target .-value) )}])\r\n\r\n\r\n(defn compare-button []\r\n  [:button {:id \"compare-button\" \r\n            :onClick compare-contract}\r\n   \"Compare Contracts\"])\r\n\r\n\r\n(defn display-errors [state]\r\n  [:p  :errors @state\r\n                                        ;:on-change #(swap! state assoc :errors (-> % .-target .-value))\r\n])\r\n\r\n\r\n(defn home-page []\r\n  [:div.page\r\n;   @local-state\r\n   [:div.main\r\n    [producer-area local-state]\r\n    [consumer-area local-state]\r\n    [compare-button]\r\n    [display-errors local-state]\r\n    ;[:p  :errors @local-state]\r\n    ;[:p \"Debug: @local-state\"]\r\n    ]\r\n    ;(:errors @local-state)\r\n     ])\r\n"]}