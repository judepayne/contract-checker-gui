* {
  box-sizing: border-box;
}

html {
  height: 100%;
}

.row::after {
  content: "";
  clear: both;
  display: table;
}

body {
  font-family: 'Helvetica Neue', Verdana, Helvetica, Arial, sans-serif;
  max-width: 100%;
  margin-left: 36px;
  margin-right: 5px;
  margin-top: 0px;
  margin-bottom: 0px;
  padding-top: 20px;
  height: 100%;
  -webkit-font-smoothing: antialiased;
  font-size: 1.115em;
  color: #333;
  line-height: 1.4em;
}

h1, h2, h3 {
  color: #000;
}
h1 {
  font-size: 2em
}

h2 {
  font-size: 1.7em
}

h3 {
  margin-top: 3em;
  font-size: 1.3em;
}

h4 {
  margin-top: 2em;
}

a {
  text-decoration: none;
  color: #09f;
}

pre{
  margin-left: 2em;
  font-size: 1em;
  background-color: #fafafa;
  white-space: pre-wrap;       /* css-3 */
  white-space: -moz-pre-wrap;  /* Mozilla, since 1999 */
  white-space: -pre-wrap;      /* Opera 4-6 */
  white-space: -o-pre-wrap;    /* Opera 7 */
  word-wrap: break-word;       /* Internet Explorer 5.5+ */
}

code {
  margin-top: 3em;
  margin-bottom: 3em;
  background-color: #fafafa;
}

footer{
  padding: 20px 0px 0px 0px;
  bottom: 0%;
}

p{
  margin-block-start: 0em;
}

.wrapper {
  height: 100%;
  width: 98%;
  display: grid;
  grid-template-columns: 100%;
  grid-template-rows: 300px 300px 60px 300px auto;
  grid-gap: 3px
}

.producer-area{
  grid-column: 1 / 2;
  grid-row: 1 / 2;
}

.consumer-area{
 grid-column: 1 / 2;
 grid-row: 2 / 3;
}

.buffer-area{
 grid-column: 1 / 2;
 grid-row: 3 / 4;
}

.display-error {
  grid-column: 1 / 2;
  grid-row: 4/ 5;
}

.display-svg {
  grid-column: 1 / 2;
  grid-row: 5 / 6;
}

@media only screen and (min-width: 768px) {
.wrapper {
  display: grid;
  grid-template-columns: 50% 50%;
  grid-template-rows: 300px 300px 60px 300px auto;
  counter-reset: Count-Value;   
}

.producer-area{
  grid-column: 1 / 2;
  grid-row: 1 / 2;
}

.consumer-area{
 grid-column: 2 / 3;
 grid-row: 1 / 2;
}

.buffer-area{
 grid-column: 1 / 2;
 grid-row: 2 / 3;
}

.display-error {
  grid-column: 1 / 3;
  grid-row: 3 / 4;
}

.display-svg {
  grid-column: 1 / 3;
  grid-row: 4 / 5;
}
table
{
    border-collapse: collapse;
}
tr td:first-child:before
{
  counter-increment: Count-Value;   
  content: counter(Count-Value);
}
table, th, td {
  border: 1px solid black;
}

}
